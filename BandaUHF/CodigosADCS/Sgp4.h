/**
 ******************************************************************************
 * @file    ADCSMath.h
 * @author  Eduardo Munoz
 * @brief   Header file of SPG4 propagator
 ******************************************************************************
   */
#ifndef SGP4_H
#define SGP4_H	

#include "SatData.h"
#include "ADCSMath.h"

const int iar80[106][5] = {
	{ 0,0,0,0,1 },
	{ 0,0,2,-2,2 },
	{ 0,0,2,0,2 },
	{ 0,0,0,0,2 },
	{ 0,1,0,0,0 },
	{ 1,0,0,0,0 },
	{ 0,1,2,-2,2 },
	{ 0,0,2,0,1 },
	{ 1,0,2,0,2 },
	{ 0,-1,2,-2,2 },
	{ 1,0,0,-2,0 },
	{ 0,0,2,-2,1 },
	{ -1,0,2,0,2 },
	{ 1,0,0,0,1 },
	{ 0,0,0,2,0 },
	{ -1,0,2,2,2 },
	{ -1,0,0,0,1 },
	{ 1,0,2,0,1 },
	{ 2,0,0,-2,0 },
	{ -2,0,2,0,1 },
	{ 0,0,2,2,2 },
	{ 2,0,2,0,2 },
	{ 2,0,0,0,0 },
	{ 1,0,2,-2,2 },
	{ 0,0,2,0,0 },
	{ 0,0,2,-2,0 },
	{ -1,0,2,0,1 },
	{ 0,2,0,0,0 },
	{ 0,2,2,-2,2 },
	{ -1,0,0,2,1 },
	{ 0,1,0,0,1 },
	{ 1,0,0,-2,1 },
	{ 0,-1,0,0,1 },
	{ 2,0,-2,0,0 },
	{ -1,0,2,2,1 },
	{ 1,0,2,2,2 },
	{ 0,-1,2,0,2 },
	{ 0,0,2,2,1 },
	{ 1,1,0,-2,0 },
	{ 0,1,2,0,2 },
	{ -2,0,0,2,1 },
	{ 0,0,0,2,1 },
	{ 2,0,2,-2,2 },
	{ 1,0,0,2,0 },
	{ 1,0,2,-2,1 },
	{ 0,0,0,-2,1 },
	{ 0,-1,2,-2,1 },
	{ 2,0,2,0,1 },
	{ 1,-1,0,0,0 },
	{ 1,0,0,-1,0 },
	{ 0,0,0,1,0 },
	{ 0,1,0,-2,0 },
	{ 1,0,-2,0,0 },
	{ 2,0,0,-2,1 },
	{ 0,1,2,-2,1 },
	{ 1,1,0,0,0 },
	{ 1,-1,0,-1,0 },
	{ -1,-1,2,2,2 },
	{ 0,-1,2,2,2 },
	{ 1,-1,2,0,2 },
	{ 3,0,2,0,2 },
	{ -2,0,2,0,2 },
	{ 1,0,2,0,0 },
	{ -1,0,2,4,2 },
	{ 1,0,0,0,2 },
	{ -1,0,2,-2,1 },
	{ 0,-2,2,-2,1 },
	{ -2,0,0,0,1 },
	{ 2,0,0,0,1 },
	{ 3,0,0,0,0 },
	{ 1,1,2,0,2 },
	{ 0,0,2,1,2 },
	{ 1,0,0,2,1 },
	{ 1,0,2,2,1 },
	{ 1,1,0,-2,1 },
	{ 0,1,0,2,0 },
	{ 0,1,2,-2,0 },
	{ 0,1,-2,2,0 },
	{ 1,0,-2,2,0 },
	{ 1,0,-2,-2,0 },
	{ 1,0,2,-2,0 },
	{ 1,0,0,-4,0 },
	{ 2,0,0,-4,0 },
	{ 0,0,2,4,2 },
	{ 0,0,2,-1,2 },
	{ -2,0,2,4,2 },
	{ 2,0,2,2,2 },
	{ 0,-1,2,0,1 },
	{ 0,0,-2,0,1 },
	{ 0,0,4,-2,2 },
	{ 0,1,0,0,2 },
	{ 1,1,2,-2,2 },
	{ 3,0,2,-2,2 },
	{ -2,0,2,2,2 },
	{ -1,0,0,0,2 },
	{ 0,0,-2,2,1 },
	{ 0,1,2,0,1 },
	{ -1,0,4,0,2 },
	{ 2,1,0,-2,0 },
	{ 2,0,0,2,0 },
	{ 2,0,2,-2,1 },
	{ 2,0,-2,0,1 },
	{ 1,-1,0,-2,0 },
	{ -1,0,0,1,1 },
	{ -1,-1,0,2,1 },
	{ 0,1,0,1,0 } };

float rar80[106][4] = {
	{ -8.3386E-05,-8.44545E-08,4.4615E-05,4.31484E-09 },
	{ -6.39324E-06,-7.75702E-10,2.78089E-06,-1.50292E-09 },
	{ -1.10247E-06,-9.69627E-11,4.73663E-07,-2.42407E-10 },
	{ 9.99686E-07,9.69627E-11,-4.33908E-07,2.42407E-10 },
	{ 6.91344E-07,-1.64837E-09,2.61799E-08,-4.84814E-11 },
	{ 3.45187E-07,4.84814E-11,-3.3937E-09,0 },
	{ -2.50649E-07,5.81776E-10,1.08598E-07,-2.90888E-10 },
	{ -1.87138E-07,-1.93925E-10,9.69627E-08,0 },
	{ -1.45929E-07,0,6.2541E-08,-4.84814E-11 },
	{ 1.05205E-07,-2.42407E-10,-4.60573E-08,1.45444E-10 },
	{ -7.66006E-08,0,-4.84814E-10,0 },
	{ 6.2541E-08,4.84814E-11,-3.3937E-08,0 },
	{ 5.96321E-08,0,-2.56951E-08,0 },
	{ 3.05433E-08,4.84814E-11,-1.59989E-08,0 },
	{ 3.05433E-08,0,-9.69627E-10,0 },
	{ -2.8604E-08,0,1.26052E-08,0 },
	{ -2.81192E-08,-4.84814E-11,1.5514E-08,0 },
	{ -2.47255E-08,0,1.309E-08,0 },
	{ 2.32711E-08,0,4.84814E-10,0 },
	{ 2.23014E-08,0,-1.16355E-08,0 },
	{ -1.84229E-08,0,7.75702E-09,0 },
	{ -1.50292E-08,0,6.30258E-09,0 },
	{ 1.40596E-08,0,-4.84814E-10,0 },
	{ 1.40596E-08,0,-5.81776E-09,0 },
	{ 1.26052E-08,0,-4.84814E-10,0 },
	{ -1.06659E-08,0,0,0 },
	{ 1.01811E-08,0,-4.84814E-09,0 },
	{ 8.24183E-09,-4.84814E-11,0,0 },
	{ -7.75702E-09,4.84814E-11,3.3937E-09,0 },
	{ 7.75702E-09,0,-3.87851E-09,0 },
	{ -7.27221E-09,0,4.36332E-09,0 },
	{ -6.30258E-09,0,3.3937E-09,0 },
	{ -5.81776E-09,0,2.90888E-09,0 },
	{ 5.33295E-09,0,0,0 },
	{ -4.84814E-09,0,2.42407E-09,0 },
	{ -3.87851E-09,0,1.45444E-09,0 },
	{ -3.3937E-09,0,1.45444E-09,0 },
	{ -3.3937E-09,0,1.45444E-09,0 },
	{ -3.3937E-09,0,0,0 },
	{ 3.3937E-09,0,-1.45444E-09,0 },
	{ -2.90888E-09,0,1.45444E-09,0 },
	{ -2.90888E-09,0,1.45444E-09,0 },
	{ 2.90888E-09,0,-1.45444E-09,0 },
	{ 2.90888E-09,0,0,0 },
	{ 2.90888E-09,0,-1.45444E-09,0 },
	{ -2.42407E-09,0,1.45444E-09,0 },
	{ -2.42407E-09,0,1.45444E-09,0 },
	{ -2.42407E-09,0,1.45444E-09,0 },
	{ 2.42407E-09,0,0,0 },
	{ -1.93925E-09,0,0,0 },
	{ -1.93925E-09,0,0,0 },
	{ -1.93925E-09,0,0,0 },
	{ 1.93925E-09,0,0,0 },
	{ 1.93925E-09,0,-9.69627E-10,0 },
	{ 1.93925E-09,0,-9.69627E-10,0 },
	{ -1.45444E-09,0,0,0 },
	{ -1.45444E-09,0,0,0 },
	{ -1.45444E-09,0,4.84814E-10,0 },
	{ -1.45444E-09,0,4.84814E-10,0 },
	{ -1.45444E-09,0,4.84814E-10,0 },
	{ -1.45444E-09,0,4.84814E-10,0 },
	{ -1.45444E-09,0,4.84814E-10,0 },
	{ 1.45444E-09,0,0,0 },
	{ -9.69627E-10,0,4.84814E-10,0 },
	{ -9.69627E-10,0,4.84814E-10,0 },
	{ -9.69627E-10,0,4.84814E-10,0 },
	{ -9.69627E-10,0,4.84814E-10,0 },
	{ -9.69627E-10,0,4.84814E-10,0 },
	{ 9.69627E-10,0,-4.84814E-10,0 },
	{ 9.69627E-10,0,0,0 },
	{ 9.69627E-10,0,-4.84814E-10,0 },
	{ 9.69627E-10,0,-4.84814E-10,0 },
	{ -4.84814E-10,0,0,0 },
	{ -4.84814E-10,0,4.84814E-10,0 },
	{ -4.84814E-10,0,0,0 },
	{ -4.84814E-10,0,0,0 },
	{ -4.84814E-10,0,0,0 },
	{ -4.84814E-10,0,0,0 },
	{ -4.84814E-10,0,0,0 },
	{ -4.84814E-10,0,0,0 },
	{ -4.84814E-10,0,0,0 },
	{ -4.84814E-10,0,0,0 },
	{ -4.84814E-10,0,0,0 },
	{ -4.84814E-10,0,0,0 },
	{ -4.84814E-10,0,0,0 },
	{ -4.84814E-10,0,4.84814E-10,0 },
	{ -4.84814E-10,0,0,0 },
	{ -4.84814E-10,0,0,0 },
	{ -4.84814E-10,0,0,0 },
	{ 4.84814E-10,0,0,0 },
	{ 4.84814E-10,0,0,0 },
	{ 4.84814E-10,0,-4.84814E-10,0 },
	{ 4.84814E-10,0,0,0 },
	{ 4.84814E-10,0,-4.84814E-10,0 },
	{ 4.84814E-10,0,-4.84814E-10,0 },
	{ 4.84814E-10,0,0,0 },
	{ 4.84814E-10,0,0,0 },
	{ 4.84814E-10,0,0,0 },
	{ 4.84814E-10,0,0,0 },
	{ 4.84814E-10,0,0,0 },
	{ 4.84814E-10,0,-4.84814E-10,0 },
	{ 4.84814E-10,0,0,0 },
	{ 4.84814E-10,0,0,0 },
	{ 4.84814E-10,0,0,0 },
	{ 4.84814E-10,0,0,0 },
	{ 4.84814E-10,0,0,0 } };

//EOP 2020 - 2021
/*float eopdata[249][9]{
	{ 59335,0.10682,0.435779,-0.1833089,-0.0001567,-0.105639,-0.00978,0.000316,0.000058 },
	{ 59336,0.108188,0.436419,-0.1830909,-0.000264,-0.105392,-0.009936,0.000276,0.000037 },
	{ 59337,0.109767,0.437441,-0.1827909,-0.0002949,-0.105435,-0.010113,0.000237,0.000016 },
	{ 59338,0.111592,0.438462,-0.1825243,-0.0002191,-0.105659,-0.010174,0.000197,-0.000006 },
	{ 59339,0.113313,0.439364,-0.1823978,-0.0000554,-0.105759,-0.010107,0.000182,-0.000033 },
	{ 59340,0.115279,0.440309,-0.18242,0.0000973,-0.105659,-0.009997,0.000173,-0.000063 },
	{ 59341,0.117172,0.441478,-0.182567,0.0002145,-0.105509,-0.009864,0.000164,-0.000092 },
	{ 59342,0.118681,0.442646,-0.1827886,0.00027,-0.105519,-0.009632,0.000166,-0.000099 },
	{ 59343,0.120432,0.443435,-0.1830318,0.0002301,-0.105761,-0.009338,0.000172,-0.000097 },
	{ 59344,0.122013,0.444253,-0.1832398,0.0001781,-0.10606,-0.009161,0.000178,-0.000096 },
	{ 59345,0.123229,0.44495,-0.1833696,0.0000832,-0.106211,-0.00926,0.000184,-0.000094 },
	{ 59346,0.12457,0.445119,-0.183405,-0.0000417,-0.106142,-0.009592,0.000197,-0.000091 },
	{ 59347,0.126398,0.4449,-0.1833166,-0.0001604,-0.105971,-0.009938,0.000212,-0.000088 },
	{ 59348,0.128393,0.445,-0.1831001,-0.0002467,-0.105857,-0.010138,0.000228,-0.000084 },
	{ 59349,0.130276,0.445421,-0.1828031,-0.0003065,-0.105951,-0.010226,0.000226,-0.000081 },
	{ 59350,0.132466,0.445767,-0.1824802,-0.000305,-0.106179,-0.010311,0.000219,-0.000079 },
	{ 59351,0.134899,0.446354,-0.1822601,-0.0002399,-0.106325,-0.01039,0.000212,-0.000076 },
	{ 59352,0.137096,0.446653,-0.1820734,-0.0001333,-0.106203,-0.010375,0.000204,-0.000073 },
	{ 59353,0.139382,0.446488,-0.1819842,0.000044,-0.105891,-0.010264,0.000197,-0.000071 },
	{ 59354,0.142062,0.446194,-0.18213,0.0002771,-0.105602,-0.010265,0.000227,-0.000129 },
	{ 59355,0.144518,0.446092,-0.1825058,0.0004653,-0.105556,-0.010433,0.000267,-0.000204 },
	{ 59356,0.146638,0.446087,-0.1830591,0.0006161,-0.10578,-0.010527,0.000254,-0.000207 },
	{ 59357,0.148357,0.446319,-0.1837359,0.0007012,-0.106114,-0.010345,0.000222,-0.000183 },
	{ 59358,0.150055,0.446007,-0.1844377,0.0006778,-0.106686,-0.009942,0.00019,-0.000159 },
	{ 59359,0.151671,0.445578,-0.1850358,0.000512,-0.107551,-0.009625,0.000157,-0.000135 },
	{ 59360,0.153177,0.445002,-0.1854186,0.0002683,-0.108338,-0.009587,0.000125,-0.000111 },
	{ 59361,0.15461,0.444641,-0.1855433,-0.0000135,-0.108444,-0.009736,0.000155,-0.000132 },
	{ 59362,0.156083,0.444149,-0.1854061,-0.0002723,-0.107948,-0.009867,0.000203,-0.000165 },
	{ 59363,0.157787,0.443296,-0.1850586,-0.0004259,-0.107319,-0.009999,0.000216,-0.000173 },
	{ 59364,0.159496,0.443194,-0.1846181,-0.000436,-0.106855,-0.010257,0.000215,-0.000173 },
	{ 59365,0.160764,0.443056,-0.1841962,-0.0003658,-0.106714,-0.010524,0.000215,-0.000172 },
	{ 59366,0.162221,0.442541,-0.1838763,-0.0002431,-0.106913,-0.010562,0.000215,-0.000172 },
	{ 59367,0.163505,0.442197,-0.1837088,-0.0001118,-0.107189,-0.01031,0.000238,-0.000157 },
	{ 59368,0.164269,0.441835,-0.1836734,0.0000119,-0.107307,-0.009973,0.000267,-0.000139 },
	{ 59369,0.165264,0.441101,-0.1837182,0.0000536,-0.107243,-0.009722,0.000296,-0.00012 },
	{ 59370,0.166494,0.439959,-0.1837435,-0.0000156,-0.107338,-0.009564,0.000285,-0.00012 },
	{ 59371,0.167443,0.43876,-0.1837213,-0.000134,-0.107712,-0.00942,0.00026,-0.000126 },
	{ 59372,0.168452,0.437773,-0.1835146,-0.0002761,-0.108222,-0.009335,0.000235,-0.000131 },
	{ 59373,0.169988,0.437038,-0.1831307,-0.0004348,-0.108616,-0.009447,0.00021,-0.000137 },
	{ 59374,0.171662,0.436466,-0.1825961,-0.0006056,-0.108746,-0.009756,0.000198,-0.000126 },
	{ 59375,0.17306,0.436107,-0.1819126,-0.0007632,-0.10872,-0.010098,0.00019,-0.000111 },
	{ 59376,0.174245,0.43572,-0.1810931,-0.0008734,-0.108643,-0.010282,0.000205,-0.000105 },
	{ 59377,0.175463,0.435402,-0.1802017,-0.0009192,-0.108645,-0.010266,0.000228,-0.000104 },
	{ 59378,0.176463,0.435076,-0.1792824,-0.0009227,-0.108763,-0.010171,0.000251,-0.000102 },
	{ 59379,0.177561,0.4348,-0.1783898,-0.000846,-0.108931,-0.010112,0.000274,-0.0001 },
	{ 59380,0.178436,0.434544,-0.1776041,-0.0007086,-0.109005,-0.010092,0.000297,-0.000098 },
	{ 59381,0.179161,0.433958,-0.1769638,-0.0005221,-0.109007,-0.01009,0.000273,-0.000128 },
	{ 59382,0.179975,0.43315,-0.1765219,-0.0003366,-0.108937,-0.010073,0.000235,-0.000167 },
	{ 59383,0.181538,0.431985,-0.176292,-0.0001418,-0.108971,-0.010051,0.000198,-0.000206 },
	{ 59384,0.183459,0.431221,-0.1762499,-0.0000088,-0.109186,-0.009941,0.000195,-0.0002 },
	{ 59385,0.185268,0.43069,-0.1762848,0.000004,-0.109672,-0.009715,0.000204,-0.000177 },
	{ 59386,0.187008,0.430371,-0.1762299,-0.0001366,-0.110397,-0.009446,0.000213,-0.000153 },
	{ 59387,0.188612,0.429729,-0.1759694,-0.0003671,-0.111169,-0.009304,0.000223,-0.00013 },
	{ 59388,0.190249,0.428692,-0.1754577,-0.0006531,-0.11174,-0.009402,0.000211,-0.000157 },
	{ 59389,0.191984,0.427561,-0.1746551,-0.0009461,-0.11187,-0.00957,0.000193,-0.000198 },
	{ 59390,0.193895,0.42626,-0.1736026,-0.0011467,-0.111627,-0.009678,0.000175,-0.000239 },
	{ 59391,0.195529,0.424979,-0.1723902,-0.0012514,-0.111223,-0.009764,0.000169,-0.000232 },
	{ 59392,0.197249,0.423941,-0.171152,-0.0012122,-0.110867,-0.009981,0.000169,-0.000206 },
	{ 59393,0.199016,0.423212,-0.1700013,-0.0010808,-0.110723,-0.010241,0.000168,-0.00018 },
	{ 59394,0.201014,0.422014,-0.1689979,-0.0008954,-0.110903,-0.010285,0.000167,-0.000155 },
	{ 59395,0.203151,0.420682,-0.1681557,-0.0007509,-0.111326,-0.010039,0.000175,-0.000142 },
	{ 59396,0.205011,0.419357,-0.1674255,-0.0007061,-0.111755,-0.009689,0.000185,-0.000133 },
	{ 59397,0.206921,0.418137,-0.1667352,-0.000729,-0.112004,-0.009464,0.000195,-0.000125 },
	{ 59398,0.209024,0.416956,-0.1660067,-0.0007956,-0.11214,-0.009398,0.000213,-0.000118 },
	{ 59399,0.211331,0.415811,-0.1651797,-0.0008841,-0.112363,-0.009373,0.000234,-0.000112 },
	{ 59400,0.213414,0.414996,-0.1642095,-0.0010197,-0.112694,-0.009336,0.000255,-0.000106 },
	{ 59401,0.21565,0.414027,-0.1630892,-0.001176,-0.11298,-0.009377,0.000276,-0.0001 },
	{ 59402,0.21814,0.413172,-0.1618291,-0.0013002,-0.113113,-0.009583,0.000297,-0.000094 },
	{ 59403,0.220214,0.412138,-0.1604574,-0.0014004,-0.11323,-0.009877,0.000276,-0.000077 },
	{ 59404,0.221832,0.410821,-0.1590228,-0.001452,-0.113321,-0.010078,0.000245,-0.000059 },
	{ 59405,0.2236,0.409097,-0.1575892,-0.0014271,-0.113323,-0.010077,0.00024,-0.000056 },
	{ 59406,0.225666,0.407615,-0.1562169,-0.0013154,-0.113312,-0.00992,0.000245,-0.00006 },
	{ 59407,0.227521,0.406499,-0.1549674,-0.0011382,-0.113374,-0.009766,0.00025,-0.000064 },
	{ 59408,0.229363,0.405735,-0.153898,-0.0009647,-0.113495,-0.009729,0.000256,-0.000067 },
	{ 59409,0.230852,0.405177,-0.1530567,-0.0007412,-0.113617,-0.009794,0.000239,-0.000073 },
	{ 59410,0.232364,0.404183,-0.1524225,-0.000519,-0.113614,-0.009847,0.000216,-0.00008 },
	{ 59411,0.233932,0.403085,-0.1520045,-0.0003391,-0.113595,-0.009787,0.000193,-0.000086 },
	{ 59412,0.235568,0.402256,-0.1517411,-0.0002516,-0.113759,-0.009608,0.000192,-0.000098 },
	{ 59413,0.236938,0.401571,-0.1515176,-0.0002888,-0.114276,-0.009388,0.000197,-0.000111 },
	{ 59414,0.238366,0.400312,-0.1511975,-0.0003898,-0.115015,-0.009262,0.000202,-0.000125 },
	{ 59415,0.239941,0.398929,-0.1507114,-0.0005551,-0.115643,-0.009312,0.000207,-0.000138 },
	{ 59416,0.241402,0.397614,-0.1500616,-0.0007199,-0.115876,-0.009476,0.000224,-0.000143 },
	{ 59417,0.24255,0.396349,-0.1492653,-0.000867,-0.115745,-0.009604,0.000244,-0.000145 },
	{ 59418,0.243559,0.39485,-0.1483896,-0.0009224,-0.115468,-0.009626,0.000263,-0.000148 },
	{ 59419,0.244504,0.393363,-0.1475216,-0.000855,-0.115321,-0.009619,0.000241,-0.000137 },
	{ 59420,0.244659,0.392108,-0.1467385,-0.0007245,-0.115265,-0.009715,0.000205,-0.00012 },
	{ 59421,0.244282,0.390818,-0.1460743,-0.0006021,-0.11528,-0.009873,0.000168,-0.000104 },
	{ 59422,0.244021,0.389282,-0.145538,-0.0004795,-0.115457,-0.00991,0.000132,-0.000087 },
	{ 59423,0.243957,0.387023,-0.1451164,-0.0004072,-0.115784,-0.00975,0.000131,-0.000079 },
	{ 59424,0.244271,0.384533,-0.1447485,-0.0003704,-0.116221,-0.009509,0.00014,-0.000073 },
	{ 59425,0.245054,0.382456,-0.1443684,-0.0004102,-0.116596,-0.009367,0.000149,-0.000067 },
	{ 59426,0.246021,0.381094,-0.1439172,-0.000517,-0.116756,-0.009383,0.000182,-0.000083 },
	{ 59427,0.24678,0.380162,-0.1433541,-0.0006384,-0.116809,-0.009429,0.000223,-0.000105 },
	{ 59428,0.247724,0.37902,-0.1426563,-0.0007555,-0.116864,-0.009419,0.000264,-0.000127 },
	{ 59429,0.248665,0.377672,-0.1418281,-0.0008856,-0.116928,-0.009418,0.000305,-0.000149 },
	{ 59430,0.249247,0.376225,-0.1408819,-0.0009926,-0.117087,-0.009488,0.000295,-0.00011 },
	{ 59431,0.250318,0.374716,-0.1398588,-0.0010475,-0.117212,-0.009692,0.000272,-0.000054 },
	{ 59432,0.251557,0.373439,-0.1388293,-0.001058,-0.117228,-0.009944,0.000256,-0.000038 },
	{ 59433,0.252384,0.372189,-0.1377997,-0.0010329,-0.117131,-0.010037,0.000244,-0.000034 },
	{ 59434,0.252618,0.370959,-0.1367543,-0.0009699,-0.116976,-0.009913,0.000231,-0.000031 },
	{ 59435,0.251958,0.369547,-0.135822,-0.0008438,-0.116861,-0.009698,0.000219,-0.000028 },
	{ 59436,0.250843,0.367504,-0.1350686,-0.0006799,-0.11686,-0.00957,0.000206,-0.000025 },
	{ 59437,0.250176,0.365255,-0.1345085,-0.0004603,-0.116935,-0.009605,0.000194,-0.000022 },
	{ 59438,0.249897,0.363348,-0.134119,-0.0003252,-0.117018,-0.009784,0.000182,-0.00008 },
	{ 59439,0.249586,0.361519,-0.1338317,-0.0003,-0.117129,-0.009917,0.000169,-0.000157 },
	{ 59440,0.249168,0.359749,-0.1335458,-0.0003549,-0.11734,-0.009843,0.000169,-0.00017 },
	{ 59441,0.248726,0.358103,-0.1331531,-0.0004593,-0.117733,-0.009659,0.000172,-0.00016 },
	{ 59442,0.248321,0.356538,-0.1325675,-0.0006686,-0.118199,-0.009514,0.000176,-0.00015 },
	{ 59443,0.24813,0.354895,-0.1317488,-0.0009228,-0.11852,-0.009488,0.000179,-0.00014 },
	{ 59444,0.248008,0.353279,-0.1307185,-0.0010982,-0.118546,-0.009545,0.000183,-0.000131 },
	{ 59445,0.247978,0.351653,-0.1295488,-0.0011741,-0.118297,-0.009587,0.000203,-0.000126 },
	{ 59446,0.247731,0.350108,-0.1283563,-0.0011739,-0.117988,-0.009566,0.000229,-0.000124 },
	{ 59447,0.24729,0.348276,-0.1272649,-0.0010243,-0.117743,-0.009514,0.000268,-0.000114 },
	{ 59448,0.246822,0.346558,-0.1263384,-0.0008459,-0.117577,-0.009494,0.000313,-0.000103 },
	{ 59449,0.246343,0.344554,-0.1255763,-0.0006538,-0.117446,-0.009485,0.000357,-0.000091 },
	{ 59450,0.245986,0.342232,-0.1249636,-0.0005235,-0.11735,-0.009416,0.000401,-0.00008 },
	{ 59451,0.246006,0.340077,-0.1244735,-0.0004466,-0.117582,-0.009295,0.00036,-0.000093 },
	{ 59452,0.246029,0.338309,-0.1240162,-0.0004798,-0.118022,-0.009189,0.000296,-0.000112 },
	{ 59453,0.246039,0.336463,-0.1235117,-0.0005674,-0.118513,-0.009184,0.000233,-0.000131 },
	{ 59454,0.246083,0.334712,-0.1228899,-0.0006892,-0.118761,-0.009205,0.000223,-0.000091 },
	{ 59455,0.246022,0.333214,-0.1221387,-0.0008198,-0.118783,-0.00919,0.000231,-0.000031 },
	{ 59456,0.245834,0.331664,-0.1212791,-0.000892,-0.118708,-0.009104,0.000239,0.000029 },
	{ 59457,0.24506,0.329881,-0.1203267,-0.0009814,-0.118658,-0.009011,0.000247,0.000089 },
	{ 59458,0.244291,0.327776,-0.1193071,-0.0010322,-0.118653,-0.009123,0.000253,0.000051 },
	{ 59459,0.243859,0.325972,-0.1182574,-0.0010516,-0.118581,-0.00939,0.00026,-0.000013 },
	{ 59460,0.243838,0.324135,-0.117228,-0.0010009,-0.118364,-0.009679,0.000266,-0.000077 },
	{ 59461,0.243924,0.322819,-0.1162657,-0.0008934,-0.118147,-0.009782,0.000233,-0.000089 },
	{ 59462,0.243284,0.321221,-0.1154565,-0.0007065,-0.117995,-0.009664,0.000188,-0.000083 },
	{ 59463,0.242288,0.319291,-0.1149183,-0.00045,-0.117966,-0.009415,0.000143,-0.000077 },
	{ 59464,0.241085,0.317267,-0.1145864,-0.000223,-0.118054,-0.009194,0.000097,-0.000071 },
	{ 59465,0.240168,0.31538,-0.1144389,-0.0000487,-0.118217,-0.009134,0.000052,-0.000065 },
	{ 59466,0.239509,0.313682,-0.1144456,0.0000445,-0.118199,-0.009278,0.000108,-0.000082 },
	{ 59467,0.239055,0.311944,-0.1145001,0.0000481,-0.118196,-0.009493,0.00019,-0.000103 },
	{ 59468,0.238903,0.310398,-0.1145067,-0.0000661,-0.118376,-0.0096,0.000217,-0.000108 },
	{ 59469,0.239057,0.309176,-0.1143417,-0.0002835,-0.118582,-0.009536,0.000225,-0.000108 },
	{ 59470,0.239061,0.308241,-0.1139194,-0.0005446,-0.118703,-0.009367,0.000233,-0.000107 },
	{ 59471,0.238135,0.30684,-0.1132542,-0.0007658,-0.118709,-0.009209,0.00024,-0.000106 },
	{ 59472,0.236855,0.305424,-0.1124265,-0.000847,-0.11856,-0.009153,0.00026,-0.000133 },
	{ 59473,0.235175,0.304217,-0.11156,-0.000838,-0.118299,-0.009166,0.000282,-0.000168 },
	{ 59474,0.234052,0.30247,-0.1107776,-0.0006952,-0.117981,-0.009206,0.000304,-0.000203 },
	{ 59475,0.233267,0.300669,-0.1101847,-0.0004981,-0.117771,-0.00919,0.000294,-0.000179 },
	{ 59476,0.231901,0.298971,-0.1097908,-0.0003079,-0.117692,-0.00912,0.000271,-0.000133 },
	{ 59477,0.23086,0.297082,-0.1095369,-0.0001935,-0.117703,-0.008971,0.00025,-0.000088 },
	{ 59478,0.230386,0.295169,-0.1093835,-0.0001309,-0.117745,-0.00871,0.000229,-0.000021 },
	{ 59479,0.23028,0.29341,-0.1092939,-0.0000808,-0.117784,-0.008514,0.000215,-0.000032 },
	{ 59480,0.229745,0.291932,-0.1092075,-0.0001148,-0.117885,-0.008448,0.000201,-0.000063 },
	{ 59481,0.229059,0.290744,-0.109071,-0.0001808,-0.118056,-0.008545,0.000187,-0.000093 },
	{ 59482,0.228196,0.289721,-0.1088548,-0.0002793,-0.118125,-0.008697,0.000198,-0.000095 },
	{ 59483,0.226765,0.288616,-0.1085235,-0.0004236,-0.118017,-0.008793,0.000218,-0.000088 },
	{ 59484,0.224983,0.286909,-0.1080259,-0.0005541,-0.117799,-0.008801,0.000237,-0.000081 },
	{ 59485,0.223233,0.285091,-0.1073996,-0.0006578,-0.117613,-0.008799,0.000257,-0.000075 },
	{ 59486,0.221642,0.283266,-0.1067014,-0.0007266,-0.117515,-0.008884,0.000266,-0.000086 },
	{ 59487,0.220649,0.281274,-0.1059687,-0.000729,-0.117316,-0.009021,0.000272,-0.000102 },
	{ 59488,0.2199,0.279843,-0.1052566,-0.0006552,-0.116894,-0.009099,0.000278,-0.000118 },
	{ 59489,0.219232,0.278385,-0.1046635,-0.0005041,-0.116396,-0.009043,0.000288,-0.000132 },
	{ 59490,0.218114,0.27744,-0.1042262,-0.0003168,-0.116108,-0.008872,0.000301,-0.000145 },
	{ 59491,0.216463,0.276398,-0.1040412,-0.0000538,-0.116115,-0.008648,0.000314,-0.000158 },
	{ 59492,0.214966,0.275265,-0.1041427,0.0002367,-0.116245,-0.008435,0.000326,-0.000172 },
	{ 59493,0.212886,0.274073,-0.104513,0.0004438,-0.116543,-0.008305,0.000255,-0.000172 },
	{ 59494,0.21067,0.27231,-0.1050355,0.0005448,-0.116846,-0.008364,0.000164,-0.000169 },
	{ 59495,0.20874,0.270354,-0.1055552,0.0004758,-0.11714,-0.008593,0.000073,-0.000166 },
	{ 59496,0.206987,0.26863,-0.1059176,0.0002801,-0.117149,-0.008775,0.00008,-0.00014 },
	{ 59497,0.205587,0.267049,-0.1060489,0.0000458,-0.117005,-0.008734,0.000123,-0.000105 },
	{ 59498,0.204294,0.26594,-0.1059506,-0.0002003,-0.116845,-0.008499,0.000164,-0.000071 },
	{ 59499,0.202929,0.265318,-0.1056985,-0.0003003,-0.116696,-0.008264,0.000206,-0.000037 },
	{ 59500,0.201347,0.265115,-0.1053769,-0.0003296,-0.116533,-0.008163,0.000249,-0.000003 },
	{ 59501,0.199531,0.264474,-0.1050561,-0.0002785,-0.116392,-0.008233,0.000253,-0.000031 },
	{ 59502,0.197144,0.264052,-0.1048215,-0.0001786,-0.116168,-0.008339,0.000247,-0.000076 },
	{ 59503,0.19454,0.263311,-0.1047296,-0.000016,-0.115892,-0.008371,0.000238,-0.000079 },
	{ 59504,0.192522,0.262732,-0.1047961,0.0001436,-0.115671,-0.008326,0.000228,-0.000068 },
	{ 59505,0.19033,0.262116,-0.1049797,0.0002729,-0.115586,-0.008172,0.000218,-0.000056 },
	{ 59506,0.188419,0.261094,-0.1053261,0.0003283,-0.115599,-0.007898,0.000207,-0.000044 },
	{ 59507,0.186951,0.260372,-0.1056852,0.0003063,-0.115532,-0.007637,0.000226,-0.000066 },
	{ 59508,0.18589,0.259671,-0.1059933,0.0002542,-0.115408,-0.007531,0.000253,-0.000096 },
	{ 59509,0.185109,0.258931,-0.1061695,0.0001074,-0.115283,-0.007652,0.00028,-0.000127 },
	{ 59510,0.183997,0.258126,-0.1061599,-0.0001073,-0.115214,-0.007852,0.000282,-0.00011 },
	{ 59511,0.18217,0.256859,-0.1059532,-0.0003135,-0.115105,-0.007981,0.000275,-0.000073 },
	{ 59512,0.180765,0.255674,-0.1055673,-0.0004478,-0.114951,-0.007995,0.000267,-0.000036 },
	{ 59513,0.179443,0.255135,-0.105071,-0.0004914,-0.114842,-0.007976,0.000259,0.000001 },
	{ 59514,0.177475,0.254614,-0.104556,-0.0004736,-0.114798,-0.008064,0.000244,-0.000029 },
	{ 59515,0.174986,0.25421,-0.1040921,-0.0004235,-0.114636,-0.008154,0.000226,-0.000076 },
	{ 59516,0.172883,0.253703,-0.1037503,-0.0002679,-0.114222,-0.008112,0.000209,-0.000124 },
	{ 59517,0.171153,0.253485,-0.1035881,-0.0000628,-0.113712,-0.007886,0.000211,-0.000123 },
	{ 59518,0.169153,0.25303,-0.1036762,0.0002284,-0.113489,-0.007636,0.000221,-0.000105 },
	{ 59519,0.167161,0.25259,-0.1040619,0.0005226,-0.113648,-0.007463,0.00023,-0.000087 },
	{ 59520,0.165421,0.252037,-0.1047142,0.0007367,-0.113919,-0.007301,0.000239,-0.000069 },
	{ 59521,0.164345,0.251154,-0.1055305,0.0008486,-0.114076,-0.007098,0.000249,-0.000051 },
	{ 59522,0.16338,0.250407,-0.1063597,0.0007779,-0.114274,-0.006977,0.0002,-0.000036 },
	{ 59523,0.161527,0.24978,-0.107035,0.0005185,-0.114417,-0.007068,0.000135,-0.000022 },
	{ 59524,0.158959,0.249274,-0.1074216,0.0002206,-0.114174,-0.007273,0.000153,-0.000034 },
	{ 59525,0.156428,0.248766,-0.1075061,-0.0000193,-0.11372,-0.007312,0.000204,-0.000058 },
	{ 59526,0.154365,0.248057,-0.1073849,-0.0001713,-0.113374,-0.007138,0.000254,-0.000081 },
	{ 59527,0.152501,0.247567,-0.1071716,-0.0002182,-0.113247,-0.007009,0.000304,-0.000104 },
	{ 59528,0.150781,0.247125,-0.106962,-0.0001425,-0.113363,-0.007072,0.000289,-0.000093 },
	{ 59529,0.14947,0.246785,-0.1068772,0.0000166,-0.113428,-0.007227,0.000255,-0.000072 },
	{ 59530,0.14847,0.246564,-0.1069721,0.0001709,-0.11337,-0.007262,0.000222,-0.000052 },
	{ 59531,0.147692,0.246455,-0.1072523,0.0003196,-0.113185,-0.007165,0.00022,-0.000061 },
	{ 59532,0.147041,0.246459,-0.1076527,0.0003813,-0.112994,-0.007024,0.00023,-0.000082 },
	{ 59533,0.145836,0.246338,-0.1080024,0.0003295,-0.112892,-0.006878,0.000239,-0.000102 },
	{ 59534,0.143555,0.246023,-0.1082774,0.000243,-0.112883,-0.006691,0.000249,-0.000122 },
	{ 59535,0.141392,0.245346,-0.1084806,0.0001504,-0.112918,-0.006416,0.000247,-0.000082 },
	{ 59536,0.139789,0.245077,-0.1085552,0.0000024,-0.112878,-0.006226,0.000242,-0.000025 },
	{ 59537,0.137868,0.245245,-0.108468,-0.0001716,-0.112755,-0.006253,0.000237,0.000032 },
	{ 59538,0.13547,0.245267,-0.1081943,-0.0003451,-0.112586,-0.006495,0.000242,0.000032 },
	{ 59539,0.133433,0.245936,-0.1077699,-0.0004589,-0.112425,-0.006731,0.00025,0.000011 },
	{ 59540,0.131584,0.246933,-0.1072664,-0.0005149,-0.112282,-0.00683,0.000257,-0.00001 },
	{ 59541,0.129614,0.24735,-0.1067281,-0.0005456,-0.112157,-0.006857,0.000265,-0.000031 },
	{ 59542,0.127746,0.247246,-0.1062044,-0.0005261,-0.112031,-0.006907,0.000273,-0.000052 },
	{ 59543,0.126546,0.247694,-0.1057277,-0.000428,-0.111742,-0.006906,0.000305,-0.000029 },
	{ 59544,0.125318,0.248339,-0.10539,-0.0002261,-0.111266,-0.006772,0.000344,0.000006 },
	{ 59545,0.123926,0.249137,-0.1053,0.000026,-0.11092,-0.006579,0.000321,-0.000017 },
	{ 59546,0.12251,0.250182,-0.1054501,0.0002285,-0.110873,-0.006446,0.000278,-0.00006 },
	{ 59547,0.120935,0.2508,-0.1057693,0.0003902,-0.111138,-0.006451,0.000234,-0.000103 },
	{ 59548,0.119462,0.251409,-0.1062356,0.0005403,-0.111496,-0.006463,0.00019,-0.000147 },
	{ 59549,0.117908,0.252101,-0.1068219,0.0005712,-0.111672,-0.006258,0.000205,-0.000142 },
	{ 59550,0.116646,0.253077,-0.1073817,0.0004702,-0.111874,-0.005966,0.000235,-0.000125 },
	{ 59551,0.115236,0.254139,-0.1077758,0.0002768,-0.112122,-0.005874,0.000265,-0.000108 },
	{ 59552,0.113528,0.254463,-0.1079062,-0.0000071,-0.112187,-0.006031,0.00027,-0.000106 },
	{ 59553,0.11221,0.254544,-0.1077891,-0.0002049,-0.111884,-0.006154,0.000266,-0.000109 },
	{ 59554,0.110933,0.255126,-0.1075299,-0.0002631,-0.111458,-0.006078,0.000263,-0.000112 },
	{ 59555,0.109262,0.255631,-0.1072636,-0.0001957,-0.111227,-0.006002,0.000259,-0.000116 },
	{ 59556,0.106686,0.256326,-0.1071092,-0.0000541,-0.111176,-0.006134,0.000249,-0.000116 },
	{ 59557,0.103984,0.256757,-0.1071653,0.0001373,-0.111132,-0.006338,0.000237,-0.000116 },
	{ 59558,0.101414,0.257116,-0.1074002,0.000309,-0.111095,-0.006308,0.000225,-0.000115 },
	{ 59559,0.098426,0.257383,-0.1077748,0.0004257,-0.111085,-0.005998,0.000239,-0.000111 },
	{ 59560,0.095231,0.257384,-0.1082102,0.0004477,-0.111113,-0.005653,0.000263,-0.000105 },
	{ 59561,0.092509,0.257408,-0.1086201,0.0003713,-0.111139,-0.005474,0.000286,-0.000099 },
	{ 59562,0.090306,0.258026,-0.1089586,0.0002966,-0.111161,-0.00542,0.00031,-0.000093 },
	{ 59563,0.087829,0.258992,-0.109198,0.0001665,-0.11131,-0.005388,0.000278,-0.000106 },
	{ 59564,0.085353,0.259707,-0.109306,0.0000223,-0.1114,-0.005371,0.000232,-0.000124 },
	{ 59565,0.082621,0.260745,-0.1092661,-0.0001186,-0.111355,-0.005475,0.000186,-0.000142 },
	{ 59566,0.080179,0.261328,-0.1090678,-0.0002676,-0.111129,-0.005691,0.000193,-0.000128 },
	{ 59567,0.078732,0.26166,-0.1087469,-0.0003304,-0.11091,-0.005904,0.00022,-0.000102 },
	{ 59568,0.077355,0.262569,-0.108378,-0.0003631,-0.110743,-0.005989,0.000247,-0.000076 },
	{ 59569,0.075405,0.263444,-0.1079991,-0.0003958,-0.110539,-0.005957,0.000274,-0.00005 },
	{ 59570,0.073133,0.264278,-0.1076234,-0.0003472,-0.110373,-0.005927,0.00025,-0.000038 },
	{ 59571,0.070881,0.265173,-0.1073418,-0.0001681,-0.110167,-0.005926,0.000213,-0.00003 },
	{ 59572,0.068514,0.26651,-0.1072445,0.0000386,-0.10982,-0.005942,0.000223,-0.000073 },
	{ 59573,0.066054,0.267813,-0.1073681,0.0002146,-0.109476,-0.005912,0.000252,-0.000135 },
	{ 59574,0.064264,0.268977,-0.1077173,0.0004337,-0.109284,-0.005893,0.00028,-0.000197 },
	{ 59575,0.062771,0.270366,-0.108259,0.0006074,-0.109258,-0.005955,0.000309,-0.000259 },
	{ 59576,0.061119,0.271893,-0.1089162,0.0006456,-0.109321,-0.006008,0.000337,-0.00032 },
	{ 59577,0.059184,0.273531,-0.1095688,0.0005855,-0.109829,-0.005847,0.000222,-0.000324 },
	{ 59578,0.057753,0.274728,-0.1101029,0.0004366,-0.110666,-0.005562,0.000068,-0.000311 },
	{ 59579,0.056304,0.275973,-0.1104355,0.0001907,-0.111412,-0.005426,0.00004,-0.000287 },
	{ 59580,0.054574,0.276983,-0.1105197,-0.0000357,-0.111899,-0.005573,0.000059,-0.000259 },
	{ 59581,0.053381,0.277886,-0.1103891,-0.0002254,-0.111877,-0.005801,0.000077,-0.00023 },
	{ 59582,0.052855,0.278999,-0.1101398,-0.0002593,-0.111401,-0.005868,0.000095,-0.000202 },
	{ 59583,0.053294,0.280607,-0.109919,-0.000121,-0.110807,-0.005829,0.000114,-0.000174 } };
	*/
//EOP 2022 - 2025
const float eopdata[1115][9] = {{59580,0.054574,0.276983,-0.1105197,-0.0000357,-0.111899,-0.005573,0.000028,0.000022},
								{59581,0.053381,0.277886,-0.1103891,-0.0002254,-0.111877,-0.005801,0.000027,0.000022},
								{59582,0.052855,0.278999,-0.1101398,-0.0002593,-0.111401,-0.005868,0.000027,0.000022},
								{59583,0.053294,0.280607,-0.109919,-0.000121,-0.110807,-0.005829,0.000027,0.000022},
								{59584,0.053559,0.282963,-0.1098692,0.0000832,-0.110307,-0.005882,0.000026,0.000022},
								{59585,0.053042,0.285048,-0.1100259,0.0002481,-0.109937,-0.005974,0.000026,0.000022},
								{59586,0.051849,0.286983,-0.110361,0.0003632,-0.109778,-0.005861,0.000026,0.000022},
								{59587,0.050225,0.288671,-0.1107892,0.0004361,-0.109885,-0.005484,0.000025,0.000022},
								{59588,0.048602,0.290231,-0.1112277,0.000412,-0.110147,-0.005099,0.000025,0.000022},
								{59589,0.047155,0.291472,-0.1116091,0.0003188,-0.110373,-0.00496,0.000025,0.000022},
								{59590,0.045595,0.292576,-0.1118697,0.0001719,-0.110484,-0.005049,0.000025,0.000022},
								{59591,0.044205,0.293449,-0.1119606,-0.000001,-0.110597,-0.005195,0.000025,0.000022},
								{59592,0.043394,0.294345,-0.1118677,-0.0001786,-0.110603,-0.005273,0.000025,0.000022},
								{59593,0.043106,0.295839,-0.1115941,-0.0003603,-0.110438,-0.005353,0.000025,0.000021},
								{59594,0.043114,0.297844,-0.1111643,-0.0004983,-0.110195,-0.00554,0.000025,0.000021},
								{59595,0.042534,0.299918,-0.1106129,-0.0005991,-0.110039,-0.005787,0.000025,0.000022},
								{59596,0.041549,0.301463,-0.1100064,-0.0006154,-0.109987,-0.005955,0.000025,0.000022},
								{59597,0.039912,0.303016,-0.109376,-0.0006054,-0.109902,-0.005973,0.000025,0.000022},
								{59598,0.03842,0.303951,-0.1088179,-0.0004807,-0.109671,-0.005907,0.000025,0.000022},
								{59599,0.037831,0.305025,-0.1084531,-0.000268,-0.109285,-0.005871,0.000025,0.000021},
								{59600,0.037456,0.306196,-0.1082981,-0.0000409,-0.108956,-0.005893,0.000025,0.000021},
								{59601,0.036968,0.307328,-0.1083306,0.000117,-0.108866,-0.005897,0.000025,0.000021},
								{59602,0.036011,0.308634,-0.1085119,0.0002229,-0.108922,-0.005877,0.000025,0.000021},
								{59603,0.034458,0.3101,-0.1087689,0.0002555,-0.109048,-0.005839,0.000026,0.000021},
								{59604,0.032747,0.311519,-0.1090294,0.0002359,-0.109241,-0.005759,0.000026,0.000021},
								{59605,0.031327,0.312793,-0.1092242,0.0001302,-0.109416,-0.005652,0.000027,0.000021},
								{59606,0.030254,0.314102,-0.1092764,-0.0000451,-0.109698,-0.005548,0.000027,0.000021},
								{59607,0.02906,0.315654,-0.109137,-0.0002362,-0.110085,-0.005577,0.000028,0.000021},
								{59608,0.028306,0.31713,-0.1088191,-0.0004108,-0.110488,-0.00579,0.000028,0.000021},
								{59609,0.027664,0.318978,-0.1083658,-0.0004934,-0.110627,-0.006064,0.000029,0.000021},
								{59610,0.026619,0.320963,-0.1078483,-0.0004966,-0.110424,-0.006222,0.000028,0.00002},
								{59611,0.026107,0.323014,-0.1073994,-0.0003435,-0.110029,-0.006256,0.000029,0.00002},
								{59612,0.025834,0.325489,-0.1071431,-0.0001248,-0.109538,-0.00631,0.000029,0.00002},
								{59613,0.025683,0.327751,-0.1070987,0.000041,-0.109116,-0.006393,0.000029,0.00002},
								{59614,0.025779,0.330022,-0.1072225,0.0001631,-0.108919,-0.006381,0.000029,0.00002},
								{59615,0.025738,0.332211,-0.1074267,0.0002001,-0.109063,-0.006141,0.000029,0.00002},
								{59616,0.025676,0.333942,-0.1076113,0.0001192,-0.109447,-0.005873,0.000029,0.00002},
								{59617,0.025772,0.335603,-0.107687,-0.0000055,-0.109853,-0.00579,0.000029,0.00002},
								{59618,0.025193,0.337374,-0.1075919,-0.0001773,-0.110126,-0.005888,0.000029,0.00002},
								{59619,0.024114,0.338478,-0.1072977,-0.0003784,-0.110203,-0.006067,0.000029,0.00002},
								{59620,0.022952,0.339544,-0.1067962,-0.0005835,-0.110062,-0.006157,0.000029,0.00002},
								{59621,0.021317,0.340636,-0.1061126,-0.0007824,-0.109706,-0.006193,0.000028,0.00002},
								{59622,0.01951,0.341957,-0.1052912,-0.0008659,-0.109259,-0.006321,0.000029,0.00002},
								{59623,0.017952,0.343165,-0.1044265,-0.0008125,-0.108917,-0.00656,0.000029,0.000019},
								{59624,0.017178,0.344276,-0.1036375,-0.0006966,-0.108763,-0.006785,0.000029,0.000019},
								{59625,0.016814,0.345848,-0.1029937,-0.0005407,-0.10869,-0.006864,0.000028,0.000019},
								{59626,0.016373,0.3476,-0.1025279,-0.0003604,-0.108569,-0.006803,0.000028,0.000019},
								{59627,0.016174,0.349955,-0.1022855,-0.0001249,-0.108379,-0.006702,0.000028,0.000019},
								{59628,0.015893,0.352552,-0.1022778,0.0001177,-0.108238,-0.006679,0.000028,0.000019},
								{59629,0.016057,0.355009,-0.1024803,0.0003106,-0.108239,-0.006688,0.000028,0.000019},
								{59630,0.016152,0.35735,-0.1028229,0.0003746,-0.108367,-0.006714,0.000028,0.000019},
								{59631,0.016225,0.359459,-0.1032042,0.0003443,-0.108568,-0.006699,0.000028,0.000019},
								{59632,0.016672,0.361277,-0.1035256,0.0002538,-0.108817,-0.006617,0.000028,0.000019},
								{59633,0.017619,0.362779,-0.1037081,0.0000945,-0.109078,-0.006583,0.000027,0.000019},
								{59634,0.018496,0.36436,-0.1036928,-0.0001444,-0.109259,-0.006613,0.000027,0.000019},
								{59635,0.018931,0.365807,-0.1034734,-0.0003469,-0.10927,-0.006743,0.000027,0.000019},
								{59636,0.019607,0.367229,-0.1031018,-0.0004237,-0.109106,-0.006902,0.000027,0.000019},
								{59637,0.020241,0.368836,-0.1026797,-0.0004119,-0.108854,-0.007042,0.000027,0.00002},
								{59638,0.020656,0.370624,-0.102325,-0.0002793,-0.108624,-0.007107,0.000026,0.000019},
								{59639,0.020909,0.372342,-0.1021425,-0.0000861,-0.108462,-0.007107,0.000026,0.000019},
								{59640,0.021778,0.373951,-0.1021944,0.0001374,-0.108199,-0.007104,0.000026,0.000019},
								{59641,0.02329,0.376273,-0.1024561,0.0003524,-0.107898,-0.007117,0.000025,0.000019},
								{59642,0.024972,0.378479,-0.1028435,0.0004407,-0.107637,-0.007109,0.000025,0.000019},
								{59643,0.026774,0.380581,-0.1032424,0.00038,-0.107706,-0.007086,0.000025,0.000019},
								{59644,0.028086,0.3826,-0.103555,0.0002448,-0.108027,-0.007094,0.000025,0.000019},
								{59645,0.029543,0.384798,-0.1037203,0.000061,-0.10845,-0.007191,0.000025,0.000019},
								{59646,0.031018,0.386712,-0.1036844,-0.0001762,-0.108826,-0.007354,0.000026,0.000019},
								{59647,0.032281,0.388541,-0.1034089,-0.0003856,-0.108866,-0.00746,0.000026,0.000019},
								{59648,0.033104,0.390312,-0.1029383,-0.0005485,-0.108612,-0.007475,0.000026,0.000019},
								{59649,0.033708,0.392105,-0.1023346,-0.0006461,-0.108109,-0.007473,0.000027,0.000019},
								{59650,0.03413,0.393729,-0.1016864,-0.0006622,-0.107569,-0.007581,0.000027,0.000019},
								{59651,0.034502,0.395152,-0.1010372,-0.000634,-0.107117,-0.007813,0.000028,0.000019},
								{59652,0.034354,0.396685,-0.1004104,-0.0005758,-0.106877,-0.008063,0.000028,0.000019},
								{59653,0.03425,0.398014,-0.099883,-0.0004198,-0.106865,-0.008198,0.000029,0.000019},
								{59654,0.033972,0.399563,-0.0995467,-0.0002068,-0.106918,-0.008181,0.000029,0.000019},
								{59655,0.033426,0.401244,-0.0994339,0.0000163,-0.10693,-0.008064,0.000029,0.000019},
								{59656,0.033046,0.402931,-0.0995428,0.0001805,-0.106876,-0.00795,0.00003,0.000019},
								{59657,0.032894,0.40443,-0.0998242,0.0003191,-0.106884,-0.007889,0.00003,0.000019},
								{59658,0.033017,0.405997,-0.1001905,0.0003801,-0.107059,-0.007919,0.000031,0.00002},
								{59659,0.033291,0.407432,-0.1005194,0.000294,-0.107409,-0.008005,0.000031,0.000019},
								{59660,0.034163,0.408866,-0.1007374,0.0000994,-0.107806,-0.008084,0.000031,0.00002},
								{59661,0.035739,0.410677,-0.1007668,-0.0001129,-0.108069,-0.008122,0.000031,0.00002},
								{59662,0.037184,0.412921,-0.1005632,-0.0003225,-0.108121,-0.008146,0.000031,0.00002},
								{59663,0.038276,0.415002,-0.1001852,-0.0004645,-0.107917,-0.008187,0.000031,0.00002},
								{59664,0.039275,0.416959,-0.0997325,-0.0004511,-0.107413,-0.008263,0.000031,0.00002},
								{59665,0.040293,0.418593,-0.0993188,-0.0003561,-0.106845,-0.008345,0.000031,0.00002},
								{59666,0.041691,0.420175,-0.0990554,-0.0001799,-0.106412,-0.00841,0.000031,0.00002},
								{59667,0.042792,0.421696,-0.0989777,0.0000252,-0.106189,-0.008449,0.000031,0.00002},
								{59668,0.043491,0.423055,-0.0990426,0.0001445,-0.106244,-0.008453,0.000031,0.00002},
								{59669,0.04357,0.424794,-0.0992346,0.000232,-0.106398,-0.008414,0.000031,0.00002},
								{59670,0.043301,0.426919,-0.0995031,0.0002946,-0.106506,-0.008343,0.000031,0.00002},
								{59671,0.043471,0.428898,-0.0997958,0.0002749,-0.106536,-0.008278,0.000032,0.00002},
								{59672,0.044401,0.430964,-0.1000185,0.0001447,-0.106583,-0.008291,0.000032,0.00002},
								{59673,0.045179,0.433548,-0.1000877,-0.0000328,-0.106727,-0.008395,0.000031,0.00002},
								{59674,0.045558,0.436184,-0.0999601,-0.0002317,-0.106928,-0.008515,0.000031,0.00002},
								{59675,0.046324,0.438296,-0.0996161,-0.0004384,-0.107011,-0.008588,0.000031,0.00002},
								{59676,0.04766,0.440084,-0.0991087,-0.0005727,-0.106904,-0.00861,0.000031,0.00002},
								{59677,0.049412,0.4418,-0.0985116,-0.0006006,-0.106602,-0.00867,0.000031,0.00002},
								{59678,0.051279,0.443588,-0.0979207,-0.0005595,-0.106131,-0.008844,0.000031,0.000019},
								{59679,0.052631,0.44531,-0.0973816,-0.0005042,-0.105574,-0.009106,0.000031,0.000019},
								{59680,0.053447,0.447037,-0.0969159,-0.0004145,-0.105095,-0.009347,0.000031,0.000019},
								{59681,0.054284,0.449011,-0.0965845,-0.0002357,-0.104884,-0.009491,0.00003,0.000019},
								{59682,0.055292,0.451073,-0.0964523,-0.0000043,-0.105062,-0.009565,0.00003,0.000019},
								{59683,0.056547,0.452892,-0.0965557,0.0002481,-0.105379,-0.009547,0.00003,0.000019},
								{59684,0.057823,0.454485,-0.0968994,0.0004668,-0.10555,-0.009362,0.00003,0.000019},
								{59685,0.059424,0.456172,-0.0974129,0.0005563,-0.105603,-0.009095,0.00003,0.000019},
								{59686,0.061164,0.457851,-0.0979865,0.0005239,-0.105807,-0.008908,0.00003,0.00002},
								{59687,0.063734,0.459266,-0.098502,0.0004144,-0.106274,-0.008922,0.00003,0.00002},
								{59688,0.066192,0.460869,-0.0988272,0.000209,-0.106773,-0.009104,0.000029,0.00002},
								{59689,0.068329,0.461999,-0.0988949,-0.0000552,-0.10696,-0.009291,0.000029,0.00002},
								{59690,0.070468,0.463064,-0.098706,-0.0003082,-0.106695,-0.009434,0.00003,0.00002},
								{59691,0.072707,0.464098,-0.0983386,-0.0004087,-0.106211,-0.009508,0.000029,0.000019},
								{59692,0.075204,0.465058,-0.0979051,-0.0003976,-0.105797,-0.009527,0.000029,0.000019},
								{59693,0.077859,0.466247,-0.0975194,-0.0003138,-0.105498,-0.009555,0.00003,0.000019},
								{59694,0.080557,0.467896,-0.0972632,-0.0001778,-0.105265,-0.00959,0.000027,0.000019},
								{59695,0.082859,0.469891,-0.0971847,-0.0000024,-0.105109,-0.009593,0.000028,0.000019},
								{59696,0.084908,0.471486,-0.0972203,0.0001167,-0.105096,-0.009548,0.000028,0.000019},
								{59697,0.086518,0.472819,-0.0973522,0.0001364,-0.105258,-0.009407,0.000027,0.000018},
								{59698,0.087895,0.473595,-0.0974914,0.0001236,-0.10548,-0.009203,0.000027,0.000018},
								{59699,0.089653,0.474104,-0.0975559,0.0000411,-0.105614,-0.009011,0.000028,0.000018},
								{59700,0.091728,0.474632,-0.0975257,-0.0000873,-0.105627,-0.008987,0.000028,0.000018},
								{59701,0.093634,0.475311,-0.0974187,-0.0001804,-0.105619,-0.009154,0.000028,0.000019},
								{59702,0.095563,0.47614,-0.0972185,-0.0002597,-0.105662,-0.009372,0.000028,0.000019},
								{59703,0.097691,0.476906,-0.0969126,-0.0003627,-0.105734,-0.009493,0.000028,0.000019},
								{59704,0.099882,0.477903,-0.0964992,-0.0004471,-0.10577,-0.009526,0.000028,0.000019},
								{59705,0.101687,0.478833,-0.0960256,-0.0004926,-0.105754,-0.009581,0.000028,0.000019},
								{59706,0.103404,0.479538,-0.0955546,-0.0004413,-0.105646,-0.009779,0.000028,0.000019},
								{59707,0.105117,0.480078,-0.095155,-0.0003482,-0.105347,-0.01003,0.000029,0.000019},
								{59708,0.106699,0.480537,-0.0949242,-0.000183,-0.104904,-0.010197,0.000029,0.000019},
								{59709,0.108427,0.480933,-0.0948334,0.000063,-0.104607,-0.010261,0.000029,0.000019},
								{59710,0.110941,0.481776,-0.0950144,0.0003317,-0.104732,-0.010281,0.00003,0.00002},
								{59711,0.113474,0.482707,-0.0954543,0.0005401,-0.105174,-0.01029,0.00003,0.00002},
								{59712,0.116107,0.483379,-0.0960629,0.0006728,-0.105566,-0.010162,0.00003,0.00002},
								{59713,0.118527,0.483975,-0.0967431,0.0006758,-0.105773,-0.009799,0.00003,0.00002},
								{59714,0.120799,0.484444,-0.097367,0.0005635,-0.106086,-0.009399,0.000031,0.00002},
								{59715,0.122385,0.485333,-0.0978659,0.0003927,-0.106653,-0.009281,0.000031,0.00002},
								{59716,0.12324,0.485912,-0.0981728,0.0001822,-0.107146,-0.009513,0.000032,0.00002},
								{59717,0.124614,0.485666,-0.0982338,-0.0000398,-0.107148,-0.009846,0.000032,0.000021},
								{59718,0.126492,0.485563,-0.0980742,-0.0001864,-0.106655,-0.010034,0.000032,0.000021},
								{59719,0.12837,0.485536,-0.0979421,-0.0002105,-0.106062,-0.010068,0.000032,0.000021},
								{59720,0.130677,0.48602,-0.0977739,-0.0001399,-0.105765,-0.010071,0.000032,0.000021},
								{59721,0.132949,0.486774,-0.0977075,0.0000022,-0.105758,-0.010059,0.000031,0.000021},
								{59722,0.135359,0.48735,-0.0977582,0.000151,-0.105848,-0.009982,0.000031,0.000021},
								{59723,0.137703,0.488205,-0.0979698,0.0002528,-0.105891,-0.009829,0.000031,0.000021},
								{59724,0.139642,0.488593,-0.0982642,0.0002434,-0.105852,-0.009614,0.000031,0.000021},
								{59725,0.141637,0.488529,-0.0985094,0.0002071,-0.105918,-0.009361,0.000031,0.000021},
								{59726,0.143638,0.488445,-0.0986407,0.0000754,-0.106153,-0.009084,0.000031,0.000021},
								{59727,0.145102,0.4884,-0.0986068,-0.0001651,-0.106467,-0.008914,0.00003,0.000021},
								{59728,0.146706,0.488268,-0.0983314,-0.0004364,-0.106669,-0.008976,0.00003,0.000022},
								{59729,0.148067,0.488086,-0.0977877,-0.0006967,-0.106716,-0.009293,0.000029,0.000021},
								{59730,0.149795,0.487092,-0.0969563,-0.0009206,-0.106703,-0.009703,0.000029,0.000021},
								{59731,0.151943,0.48617,-0.0959109,-0.0010845,-0.106731,-0.009971,0.000029,0.000021},
								{59732,0.154357,0.485426,-0.0947757,-0.0011408,-0.10667,-0.010005,0.000028,0.000021},
								{59733,0.156589,0.484781,-0.0936356,-0.0011169,-0.10666,-0.009955,0.000028,0.000021},
								{59734,0.158889,0.484149,-0.0925602,-0.0010138,-0.106851,-0.009984,0.000028,0.000021},
								{59735,0.161161,0.483622,-0.091622,-0.0008734,-0.106921,-0.010058,0.000028,0.000021},
								{59736,0.163382,0.48315,-0.0908246,-0.0007378,-0.106715,-0.010044,0.000028,0.000021},
								{59737,0.166198,0.482812,-0.0901686,-0.0005555,-0.106474,-0.009925,0.000028,0.000021},
								{59738,0.169346,0.482843,-0.0896819,-0.0003808,-0.106581,-0.009834,0.000028,0.000022},
								{59739,0.172338,0.482895,-0.0893344,-0.0002872,-0.107056,-0.009817,0.000028,0.000022},
								{59740,0.17515,0.482907,-0.0890843,-0.0002453,-0.107652,-0.009745,0.000028,0.000022},
								{59741,0.177834,0.48272,-0.0888551,-0.0003041,-0.108201,-0.009465,0.000028,0.000022},
								{59742,0.18029,0.482016,-0.0885165,-0.0004513,-0.108809,-0.009083,0.000028,0.000022},
								{59743,0.182826,0.481258,-0.087948,-0.0006834,-0.109531,-0.008942,0.000027,0.000021},
								{59744,0.1851,0.480403,-0.087094,-0.0009713,-0.110036,-0.009188,0.000027,0.000022},
								{59745,0.187052,0.479331,-0.085983,-0.0012046,-0.109873,-0.009588,0.000027,0.000022},
								{59746,0.189149,0.478024,-0.0847332,-0.0012518,-0.109222,-0.009837,0.000027,0.000021},
								{59747,0.191602,0.476728,-0.0834949,-0.0011637,-0.108594,-0.009934,0.000027,0.000021},
								{59748,0.194019,0.47555,-0.0824189,-0.0009673,-0.108365,-0.009983,0.000027,0.000021},
								{59749,0.196541,0.474534,-0.0815575,-0.00076,-0.108509,-0.009976,0.000026,0.000021},
								{59750,0.199454,0.473574,-0.0808812,-0.0006133,-0.108836,-0.009796,0.000026,0.000021},
								{59751,0.202403,0.472799,-0.0803109,-0.000548,-0.109153,-0.009467,0.000026,0.000021},
								{59752,0.205128,0.472282,-0.0797589,-0.000585,-0.109347,-0.009175,0.000026,0.000021},
								{59753,0.207619,0.471645,-0.0791011,-0.0007191,-0.109587,-0.009025,0.000026,0.000021},
								{59754,0.210148,0.470821,-0.0782976,-0.0009049,-0.109961,-0.008971,0.000026,0.000022},
								{59755,0.212693,0.469719,-0.077326,-0.0010879,-0.110305,-0.008982,0.000026,0.000022},
								{59756,0.215376,0.468485,-0.0761726,-0.0012474,-0.110571,-0.009112,0.000026,0.000022},
								{59757,0.218164,0.467038,-0.0748406,-0.0014033,-0.110659,-0.009428,0.000025,0.000021},
								{59758,0.22133,0.465623,-0.0733645,-0.001536,-0.110576,-0.009834,0.000025,0.000021},
								{59759,0.224443,0.464165,-0.0718011,-0.0015903,-0.110496,-0.010059,0.000025,0.000021},
								{59760,0.22722,0.462671,-0.0702118,-0.0015738,-0.110526,-0.009992,0.000025,0.000021},
								{59761,0.230002,0.460818,-0.0686663,-0.0015022,-0.110679,-0.009749,0.000025,0.000021},
								{59762,0.232881,0.459225,-0.0672447,-0.0013642,-0.110959,-0.009582,0.000025,0.000021},
								{59763,0.236109,0.457809,-0.0659625,-0.0011592,-0.11115,-0.009536,0.000025,0.000021},
								{59764,0.239234,0.456579,-0.0649159,-0.0009084,-0.111121,-0.009498,0.000025,0.000021},
								{59765,0.241892,0.455171,-0.0641393,-0.0006862,-0.110976,-0.00939,0.000025,0.000021},
								{59766,0.24445,0.453302,-0.0635337,-0.0005426,-0.11095,-0.009262,0.000026,0.000021},
								{59767,0.247124,0.451582,-0.0630501,-0.0004797,-0.111305,-0.009226,0.000026,0.000021},
								{59768,0.249756,0.45012,-0.0625785,-0.000496,-0.111978,-0.009228,0.000026,0.000021},
								{59769,0.252297,0.448682,-0.0620271,-0.0006294,-0.112723,-0.009129,0.000026,0.000021},
								{59770,0.254733,0.44706,-0.0612967,-0.000852,-0.113423,-0.00896,0.000027,0.000021},
								{59771,0.256857,0.445395,-0.0603249,-0.0010853,-0.114007,-0.008936,0.000027,0.000021},
								{59772,0.258411,0.443974,-0.0591324,-0.0012873,-0.114246,-0.009142,0.000027,0.000021},
								{59773,0.259174,0.442066,-0.0577813,-0.0013649,-0.11396,-0.009403,0.000028,0.000021},
								{59774,0.260201,0.439888,-0.0564587,-0.0012892,-0.113418,-0.009484,0.000027,0.00002},
								{59775,0.261642,0.438122,-0.055263,-0.0010962,-0.113037,-0.009466,0.000027,0.000021},
								{59776,0.263441,0.436373,-0.0542876,-0.0008698,-0.112983,-0.009496,0.000027,0.000021},
								{59777,0.265267,0.434398,-0.0535228,-0.0006893,-0.113161,-0.009544,0.000027,0.000021},
								{59778,0.267234,0.432352,-0.0528927,-0.0005997,-0.113506,-0.009398,0.000028,0.000021},
								{59779,0.26926,0.430298,-0.0523068,-0.0006023,-0.113947,-0.009037,0.000028,0.000021},
								{59780,0.270974,0.428173,-0.0516628,-0.0006984,-0.114393,-0.008784,0.000028,0.000021},
								{59781,0.272574,0.426255,-0.0508922,-0.0008571,-0.114674,-0.008805,0.000028,0.000021},
								{59782,0.274053,0.424453,-0.0499591,-0.0010273,-0.114884,-0.009018,0.000028,0.000021},
								{59783,0.275681,0.422673,-0.0488673,-0.0011798,-0.115096,-0.00921,0.000028,0.000021},
								{59784,0.277006,0.420915,-0.0476028,-0.0013501,-0.115333,-0.009343,0.000028,0.000021},
								{59785,0.278471,0.419285,-0.0462003,-0.0014358,-0.115452,-0.009519,0.000027,0.00002},
								{59786,0.279867,0.417962,-0.0447491,-0.0014548,-0.115399,-0.009768,0.000027,0.00002},
								{59787,0.281044,0.416126,-0.0432579,-0.0014585,-0.115379,-0.009934,0.000027,0.00002},
								{59788,0.282267,0.414205,-0.0417953,-0.0014381,-0.115431,-0.009867,0.000027,0.00002},
								{59789,0.283345,0.411841,-0.0404282,-0.0013321,-0.115538,-0.009595,0.000026,0.00002},
								{59790,0.284587,0.4094,-0.0392089,-0.0011116,-0.115593,-0.009353,0.000026,0.00002},
								{59791,0.286,0.407286,-0.0381849,-0.0008909,-0.115593,-0.009273,0.000026,0.00002},
								{59792,0.287161,0.405194,-0.0373892,-0.0007008,-0.115536,-0.00932,0.000026,0.00002},
								{59793,0.287882,0.403262,-0.0367846,-0.0005426,-0.115439,-0.009376,0.000026,0.000019},
								{59794,0.288468,0.401019,-0.0362792,-0.0004556,-0.115414,-0.009314,0.000026,0.000019},
								{59795,0.289489,0.398709,-0.0358145,-0.0004487,-0.115635,-0.009222,0.000026,0.000019},
								{59796,0.290582,0.396579,-0.0353263,-0.000523,-0.116154,-0.009192,0.000026,0.000019},
								{59797,0.29108,0.394221,-0.0347316,-0.0006895,-0.116838,-0.009204,0.000025,0.000018},
								{59798,0.291487,0.391652,-0.0339451,-0.0008715,-0.117435,-0.009261,0.000025,0.000018},
								{59799,0.292293,0.389056,-0.0329721,-0.0010338,-0.117715,-0.009399,0.000025,0.000018},
								{59800,0.293211,0.386232,-0.0318918,-0.0010953,-0.117585,-0.009565,0.000025,0.000019},
								{59801,0.293803,0.38325,-0.0308088,-0.0010233,-0.117149,-0.009591,0.000025,0.000019},
								{59802,0.294459,0.380298,-0.0298577,-0.0008434,-0.11677,-0.009397,0.000025,0.000019},
								{59803,0.295055,0.377755,-0.0291384,-0.0006199,-0.116681,-0.009171,0.000024,0.000019},
								{59804,0.295537,0.37574,-0.0286307,-0.0004312,-0.116834,-0.009134,0.000024,0.000019},
								{59805,0.296313,0.373591,-0.0282983,-0.0003275,-0.117006,-0.009266,0.000024,0.00002},
								{59806,0.2975,0.371314,-0.0279699,-0.0003218,-0.117203,-0.009307,0.000024,0.000019},
								{59807,0.298583,0.369059,-0.0276395,-0.0004297,-0.117555,-0.009139,0.000023,0.000019},
								{59808,0.299254,0.366732,-0.0270866,-0.0006249,-0.118003,-0.008949,0.000023,0.00002},
								{59809,0.299866,0.364425,-0.0263517,-0.00087,-0.118274,-0.00886,0.000023,0.00002},
								{59810,0.300823,0.36201,-0.0253455,-0.0010674,-0.118335,-0.008921,0.000023,0.00002},
								{59811,0.302176,0.359779,-0.0241871,-0.0012488,-0.118439,-0.009099,0.000024,0.00002},
								{59812,0.302992,0.357455,-0.0228266,-0.0013887,-0.118572,-0.009192,0.000024,0.00002},
								{59813,0.303769,0.354926,-0.0213929,-0.0014142,-0.118711,-0.009174,0.000024,0.000021},
								{59814,0.304513,0.3525,-0.0199836,-0.0013938,-0.118563,-0.009296,0.000023,0.00002},
								{59815,0.304896,0.349874,-0.0186613,-0.0013096,-0.11831,-0.009455,0.000023,0.00002},
								{59816,0.305201,0.347486,-0.0174037,-0.0011721,-0.118092,-0.009509,0.000023,0.00002},
								{59817,0.305398,0.344912,-0.0162851,-0.0010132,-0.117898,-0.009376,0.000023,0.00002},
								{59818,0.30529,0.342335,-0.0153482,-0.0008311,-0.117776,-0.009142,0.000023,0.00002},
								{59819,0.304974,0.339946,-0.0146136,-0.0006297,-0.117687,-0.008993,0.000024,0.00002},
								{59820,0.304586,0.337401,-0.0140968,-0.0004071,-0.11766,-0.009022,0.000024,0.00002},
								{59821,0.304464,0.334971,-0.0137838,-0.0002461,-0.117694,-0.009153,0.000024,0.00002},
								{59822,0.304595,0.332751,-0.0136099,-0.0001468,-0.117736,-0.00923,0.000024,0.00002},
								{59823,0.304814,0.33044,-0.0134836,-0.000174,-0.117854,-0.009197,0.000024,0.00002},
								{59824,0.304501,0.327651,-0.0132494,-0.0003019,-0.118154,-0.009102,0.000024,0.00002},
								{59825,0.304186,0.324993,-0.0128821,-0.0004375,-0.11859,-0.00908,0.000024,0.00002},
								{59826,0.304085,0.322764,-0.0123741,-0.0006067,-0.118929,-0.00917,0.000024,0.00002},
								{59827,0.30382,0.320481,-0.0117203,-0.0006953,-0.118715,-0.009299,0.000024,0.000021},
								{59828,0.303248,0.318029,-0.011019,-0.0006716,-0.11849,-0.00942,0.000024,0.00002},
								{59829,0.302652,0.314951,-0.0103738,-0.0005314,-0.117928,-0.009248,0.000024,0.00002},
								{59830,0.301793,0.311758,-0.0099952,-0.000309,-0.117555,-0.008854,0.000024,0.00002},
								{59831,0.300297,0.30867,-0.0098037,-0.0000563,-0.117535,-0.008462,0.000024,0.00002},
								{59832,0.299086,0.305665,-0.0098938,0.000198,-0.117785,-0.008356,0.000024,0.00002},
								{59833,0.298524,0.302843,-0.0101991,0.000362,-0.117952,-0.008498,0.000024,0.000021},
								{59834,0.298153,0.300265,-0.0105663,0.0003547,-0.118015,-0.008668,0.000024,0.000021},
								{59835,0.297509,0.297897,-0.0108687,0.0002112,-0.118191,-0.008727,0.000024,0.000021},
								{59836,0.296992,0.295809,-0.0110048,0.000009,-0.118525,-0.008698,0.000023,0.00002},
								{59837,0.296326,0.293853,-0.0109071,-0.000231,-0.118889,-0.008737,0.000024,0.00002},
								{59838,0.295633,0.291666,-0.0105453,-0.0004503,-0.119069,-0.008841,0.000023,0.00002},
								{59839,0.294765,0.289613,-0.0099966,-0.0006416,-0.11926,-0.008985,0.000023,0.00002},
								{59840,0.293594,0.287789,-0.0092502,-0.0007737,-0.119359,-0.009034,0.000024,0.00002},
								{59841,0.292235,0.285928,-0.0084134,-0.0008552,-0.118767,-0.008893,0.000024,0.00002},
								{59842,0.291284,0.283515,-0.0075559,-0.0008596,-0.117876,-0.008797,0.000024,0.00002},
								{59843,0.290675,0.281089,-0.006695,-0.0007858,-0.117536,-0.008865,0.000024,0.00002},
								{59844,0.289785,0.2784,-0.0059969,-0.0006484,-0.117441,-0.008922,0.000024,0.00002},
								{59845,0.288673,0.275532,-0.0054471,-0.0004588,-0.117457,-0.00881,0.000024,0.00002},
								{59846,0.287244,0.272949,-0.0051006,-0.000262,-0.117465,-0.008621,0.000024,0.00002},
								{59847,0.285878,0.270404,-0.0049635,-0.0000762,-0.117484,-0.008457,0.000025,0.00002},
								{59848,0.285103,0.268121,-0.0049793,0.0000876,-0.117537,-0.008441,0.000025,0.00002},
								{59849,0.284746,0.266357,-0.0051012,0.0001844,-0.117616,-0.008597,0.000025,0.00002},
								{59850,0.283878,0.264953,-0.0053014,0.0001489,-0.117693,-0.008703,0.000026,0.00002},
								{59851,0.282943,0.263319,-0.005418,0.0000247,-0.117779,-0.008707,0.000026,0.000021},
								{59852,0.282338,0.261528,-0.0053388,-0.0001717,-0.117905,-0.008604,0.000026,0.00002},
								{59853,0.281388,0.259744,-0.0049041,-0.0004002,-0.117919,-0.008575,0.000026,0.00002},
								{59854,0.280092,0.257931,-0.0043864,-0.0004904,-0.117763,-0.008633,0.000026,0.00002},
								{59855,0.278478,0.255746,-0.0040146,-0.0004785,-0.11738,-0.008681,0.000026,0.000021},
								{59856,0.276607,0.253527,-0.003559,-0.0004129,-0.116777,-0.008672,0.000026,0.000021},
								{59857,0.274352,0.25145,-0.0032281,-0.0002727,-0.116158,-0.00855,0.000025,0.000021},
								{59858,0.272409,0.249284,-0.0030816,-0.000029,-0.115892,-0.008306,0.000025,0.000021},
								{59859,0.270869,0.246728,-0.003181,0.0002299,-0.115963,-0.008047,0.000025,0.00002},
								{59860,0.269464,0.244272,-0.0035337,0.0004475,-0.116181,-0.007889,0.000025,0.00002},
								{59861,0.267436,0.242181,-0.0040628,0.0005515,-0.116323,-0.007852,0.000025,0.00002},
								{59862,0.26524,0.239987,-0.0046541,0.0005668,-0.11633,-0.007871,0.000025,0.00002},
								{59863,0.263701,0.237885,-0.0051692,0.0004419,-0.116344,-0.007899,0.000025,0.00002},
								{59864,0.262046,0.235701,-0.0055011,0.0002017,-0.116517,-0.00795,0.000025,0.00002},
								{59865,0.260021,0.233734,-0.0055722,-0.0000324,-0.116707,-0.008023,0.000025,0.00002},
								{59866,0.256936,0.232102,-0.0054362,-0.0001958,-0.116793,-0.008078,0.000025,0.00002},
								{59867,0.254063,0.230356,-0.0051876,-0.0002708,-0.1167,-0.008075,0.000026,0.00002},
								{59868,0.251206,0.228893,-0.0049099,-0.0002692,-0.116365,-0.007987,0.000026,0.00002},
								{59869,0.248052,0.227286,-0.0046783,-0.0001717,-0.115804,-0.007935,0.000026,0.000021},
								{59870,0.245102,0.225158,-0.004566,-0.0000332,-0.1152,-0.008015,0.000026,0.00002},
								{59871,0.243041,0.222898,-0.0045814,0.0001434,-0.114747,-0.008164,0.000026,0.00002},
								{59872,0.240817,0.221191,-0.0047645,0.0002754,-0.114446,-0.008265,0.000026,0.00002},
								{59873,0.237688,0.219313,-0.0051434,0.0004368,-0.114344,-0.008197,0.000026,0.00002},
								{59874,0.234606,0.217522,-0.0057243,0.0006618,-0.114532,-0.007927,0.000027,0.00002},
								{59875,0.231878,0.216031,-0.0064986,0.0008786,-0.114866,-0.007589,0.000027,0.00002},
								{59876,0.230043,0.214645,-0.0074339,0.000973,-0.115163,-0.007341,0.000027,0.00002},
								{59877,0.228137,0.213232,-0.0084121,0.0009253,-0.115318,-0.007265,0.000028,0.00002},
								{59878,0.226115,0.211747,-0.0092591,0.0007382,-0.115297,-0.007349,0.000028,0.00002},
								{59879,0.223756,0.210409,-0.0098856,0.000492,-0.115222,-0.007491,0.000028,0.00002},
								{59880,0.220823,0.208832,-0.0102779,0.0002273,-0.115143,-0.007612,0.000029,0.00002},
								{59881,0.217709,0.207418,-0.0103958,0.0000224,-0.115022,-0.007628,0.000029,0.000021},
								{59882,0.214473,0.206229,-0.0103095,-0.0000878,-0.11481,-0.007575,0.00003,0.000021},
								{59883,0.211345,0.205237,-0.0101927,-0.0000697,-0.114492,-0.007538,0.00003,0.000021},
								{59884,0.208514,0.204211,-0.0101774,0.00011,-0.114103,-0.007544,0.00003,0.00002},
								{59885,0.206235,0.203545,-0.0104065,0.0003864,-0.1137,-0.007501,0.00003,0.00002},
								{59886,0.203841,0.202359,-0.0109528,0.0006985,-0.113392,-0.007399,0.00003,0.000021},
								{59887,0.201477,0.201353,-0.0118134,0.0009383,-0.113257,-0.007249,0.00003,0.00002},
								{59888,0.199403,0.2007,-0.0128173,0.0010174,-0.113353,-0.007066,0.000031,0.00002},
								{59889,0.19788,0.199789,-0.0138349,0.0009653,-0.113543,-0.006869,0.000031,0.00002},
								{59890,0.196436,0.198985,-0.0147274,0.0008221,-0.113659,-0.006688,0.000031,0.00002},
								{59891,0.194574,0.198424,-0.0154466,0.0006274,-0.11366,-0.006582,0.000031,0.00002},
								{59892,0.192696,0.197558,-0.0159684,0.0004106,-0.113571,-0.006657,0.000031,0.00002},
								{59893,0.190367,0.196722,-0.0162302,0.0001395,-0.113561,-0.006849,0.000031,0.00002},
								{59894,0.187822,0.19588,-0.016252,-0.0000819,-0.113631,-0.007014,0.000031,0.00002},
								{59895,0.185361,0.195076,-0.0160839,-0.0002287,-0.113596,-0.007056,0.000031,0.00002},
								{59896,0.183217,0.193981,-0.0158151,-0.0002685,-0.113352,-0.006999,0.000031,0.00002},
								{59897,0.181786,0.192794,-0.0155444,-0.0002339,-0.112967,-0.006958,0.000031,0.000021},
								{59898,0.181089,0.192167,-0.0153549,-0.0001003,-0.112549,-0.007008,0.000031,0.000021},
								{59899,0.180613,0.192084,-0.0153236,0.0000656,-0.11212,-0.007099,0.000031,0.000021},
								{59900,0.179894,0.192217,-0.0154871,0.0002558,-0.111735,-0.007093,0.00003,0.00002},
								{59901,0.178587,0.192658,-0.0158559,0.0004564,-0.111559,-0.006936,0.000031,0.000021},
								{59902,0.176631,0.192939,-0.01641,0.0006333,-0.111782,-0.006671,0.000031,0.000021},
								{59903,0.174678,0.192941,-0.0171134,0.0007403,-0.112283,-0.006399,0.000031,0.000021},
								{59904,0.172482,0.192686,-0.0178985,0.0007705,-0.112747,-0.006164,0.000031,0.000021},
								{59905,0.170135,0.192562,-0.0186627,0.0006878,-0.112985,-0.005999,0.000031,0.000021},
								{59906,0.167864,0.192125,-0.0192839,0.0005125,-0.113015,-0.005992,0.000031,0.000021},
								{59907,0.165815,0.191634,-0.0196773,0.0002509,-0.11296,-0.006178,0.000031,0.000021},
								{59908,0.163449,0.191394,-0.0198119,0.0000142,-0.1128,-0.006422,0.000031,0.000022},
								{59909,0.160439,0.191188,-0.0197408,-0.0001455,-0.112502,-0.006504,0.000032,0.000022},
								{59910,0.156985,0.190819,-0.0195486,-0.000208,-0.112173,-0.006392,0.000032,0.000022},
								{59911,0.153168,0.190278,-0.0193141,-0.0001633,-0.111939,-0.006246,0.000032,0.000022},
								{59912,0.149881,0.189736,-0.0192085,0.0000128,-0.111789,-0.006198,0.000032,0.000022},
								{59913,0.146998,0.189837,-0.019312,0.0002026,-0.111645,-0.006204,0.000033,0.000022},
								{59914,0.144039,0.190129,-0.0196037,0.0003855,-0.111563,-0.006191,0.000033,0.000022},
								{59915,0.141086,0.19003,-0.0200182,0.0004409,-0.111557,-0.006103,0.000033,0.000022},
								{59916,0.13852,0.189588,-0.0204483,0.0004101,-0.111593,-0.005954,0.000034,0.000022},
								{59917,0.135739,0.189603,-0.0208072,0.000312,-0.111696,-0.005787,0.000034,0.000023},
								{59918,0.132595,0.189132,-0.0210271,0.0001301,-0.111763,-0.005625,0.000035,0.000023},
								{59919,0.130234,0.188807,-0.0210546,-0.0000636,-0.111664,-0.005528,0.000035,0.000023},
								{59920,0.127804,0.188914,-0.0208636,-0.0002779,-0.11153,-0.005568,0.000035,0.000023},
								{59921,0.12555,0.188683,-0.0204842,-0.0004561,-0.111431,-0.005765,0.000035,0.000023},
								{59922,0.123051,0.188943,-0.0199575,-0.0005859,-0.11145,-0.005997,0.000035,0.000023},
								{59923,0.120023,0.189212,-0.0193465,-0.0006481,-0.111433,-0.006148,0.000034,0.000023},
								{59924,0.117059,0.189519,-0.0187186,-0.0006394,-0.111306,-0.006171,0.000034,0.000023},
								{59925,0.114474,0.189311,-0.0181257,-0.0005417,-0.111063,-0.006164,0.000034,0.000023},
								{59926,0.112235,0.18938,-0.0176371,-0.0004093,-0.110731,-0.006214,0.000034,0.000023},
								{59927,0.110057,0.189733,-0.0172887,-0.0002511,-0.110324,-0.006214,0.000033,0.000023},
								{59928,0.107848,0.190644,-0.0170929,-0.0001183,-0.109887,-0.006082,0.000033,0.000023},
								{59929,0.105276,0.191662,-0.0170407,0.0000291,-0.109725,-0.005821,0.000033,0.000024},
								{59930,0.102588,0.192217,-0.0171383,0.0001792,-0.109988,-0.005591,0.000032,0.000024},
								{59931,0.10016,0.19249,-0.0173664,0.0002704,-0.110414,-0.005565,0.000032,0.000025},
								{59932,0.09821,0.192803,-0.0177187,0.000297,-0.110869,-0.005519,0.000032,0.000025},
								{59933,0.096711,0.193084,-0.0179634,0.0002092,-0.111219,-0.005345,0.000031,0.000026},
								{59934,0.095777,0.193348,-0.0181234,0.0000866,-0.111654,-0.005239,0.000031,0.000026},
								{59935,0.094877,0.19395,-0.018106,-0.0000771,-0.112105,-0.005394,0.000031,0.000026},
								{59936,0.093472,0.194922,-0.0178955,-0.0002489,-0.11215,-0.005758,0.000027,0.000022},
								{59937,0.091397,0.196126,-0.0175841,-0.0003125,-0.111706,-0.006007,0.000027,0.000023},
								{59938,0.088402,0.197099,-0.0173115,-0.0001842,-0.111094,-0.005943,0.000027,0.000023},
								{59939,0.085204,0.197391,-0.0172323,0.0000694,-0.110709,-0.005742,0.000027,0.000023},
								{59940,0.08206,0.197809,-0.0174541,0.0003322,-0.110623,-0.00566,0.000026,0.000023},
								{59941,0.078253,0.198379,-0.0179243,0.0004997,-0.110647,-0.005674,0.000026,0.000023},
								{59942,0.074744,0.198584,-0.0184719,0.0005479,-0.110694,-0.00557,0.000026,0.000023},
								{59943,0.071281,0.199199,-0.0190102,0.0005126,-0.110793,-0.00534,0.000026,0.000023},
								{59944,0.067074,0.200103,-0.0194855,0.0004124,-0.111016,-0.005156,0.000026,0.000023},
								{59945,0.062699,0.200944,-0.0197967,0.0002006,-0.111266,-0.005103,0.000026,0.000022},
								{59946,0.059003,0.201796,-0.0199243,-0.0000061,-0.111443,-0.005114,0.000025,0.000022},
								{59947,0.055638,0.202514,-0.019825,-0.0002184,-0.111467,-0.005128,0.000025,0.000023},
								{59948,0.052933,0.20299,-0.0195007,-0.0004214,-0.111313,-0.005194,0.000025,0.000023},
								{59949,0.050795,0.20383,-0.0190232,-0.0005307,-0.110822,-0.005531,0.000025,0.000022},
								{59950,0.048795,0.205101,-0.0184663,-0.0005607,-0.11051,-0.005834,0.000025,0.000022},
								{59951,0.046853,0.206221,-0.0179143,-0.0005273,-0.110392,-0.005984,0.000026,0.000022},
								{59952,0.045146,0.20759,-0.0174487,-0.0004118,-0.110316,-0.005948,0.000026,0.000022},
								{59953,0.04337,0.209111,-0.0171274,-0.000248,-0.110159,-0.005821,0.000026,0.000022},
								{59954,0.041325,0.210288,-0.0169671,-0.0000751,-0.109874,-0.005733,0.000026,0.000022},
								{59955,0.038979,0.211134,-0.0169747,0.0000694,-0.109583,-0.005665,0.000026,0.000022},
								{59956,0.036547,0.211915,-0.0170559,0.0001228,-0.109296,-0.005533,0.000026,0.000022},
								{59957,0.034173,0.213022,-0.0172046,0.0001561,-0.109147,-0.005343,0.000026,0.000022},
								{59958,0.03181,0.214393,-0.0173877,0.0001788,-0.109243,-0.005275,0.000026,0.000022},
								{59959,0.029351,0.216047,-0.017571,0.0001728,-0.109616,-0.005398,0.000026,0.000023},
								{59960,0.026882,0.217923,-0.017711,0.0000929,-0.110034,-0.005564,0.000026,0.000023},
								{59961,0.024343,0.220214,-0.01774,-0.0000622,-0.110403,-0.005563,0.000026,0.000023},
								{59962,0.021681,0.222504,-0.0175873,-0.0002714,-0.110857,-0.005445,0.000027,0.000023},
								{59963,0.019078,0.224261,-0.0172362,-0.000445,-0.111477,-0.005516,0.000027,0.000023},
								{59964,0.016715,0.225678,-0.0167521,-0.0005287,-0.111849,-0.005887,0.000028,0.000024},
								{59965,0.014033,0.226892,-0.0161896,-0.0005573,-0.111636,-0.006234,0.000029,0.000024},
								{59966,0.010879,0.22774,-0.0156593,-0.0004647,-0.110964,-0.00623,0.000029,0.000024},
								{59967,0.007728,0.22883,-0.0153087,-0.00023,-0.110393,-0.00597,0.00003,0.000024},
								{59968,0.0053,0.230244,-0.0152158,0.0000788,-0.110223,-0.005787,0.000031,0.000024},
								{59969,0.003852,0.231401,-0.0153642,0.0002309,-0.110193,-0.005799,0.000031,0.000024},
								{59970,0.002927,0.233231,-0.0156349,0.0002832,-0.110268,-0.005775,0.000032,0.000025},
								{59971,0.001593,0.235918,-0.0158886,0.0001724,-0.110468,-0.005635,0.000033,0.000025},
								{59972,0.000279,0.238107,-0.0159862,-0.0000084,-0.110687,-0.005537,0.000034,0.000025},
								{59973,-0.00023,0.240378,-0.0158927,-0.0001549,-0.110794,-0.005657,0.000032,0.000023},
								{59974,-0.000925,0.24267,-0.0156444,-0.0003504,-0.11075,-0.005905,0.000032,0.000024},
								{59975,-0.001326,0.244961,-0.0152262,-0.0005139,-0.110583,-0.00608,0.000037,0.000027},
								{59976,-0.002295,0.247865,-0.0146009,-0.0006818,-0.110444,-0.006162,0.000037,0.000027},
								{59977,-0.003547,0.250346,-0.0138591,-0.000756,-0.110219,-0.006262,0.000037,0.000027},
								{59978,-0.004856,0.252572,-0.013096,-0.0007209,-0.109978,-0.006426,0.000037,0.000027},
								{59979,-0.006428,0.254285,-0.012419,-0.0006066,-0.109861,-0.006529,0.000037,0.000027},
								{59980,-0.008204,0.255923,-0.0118777,-0.0004718,-0.10987,-0.006457,0.000037,0.000027},
								{59981,-0.009964,0.257731,-0.0114958,-0.0003012,-0.109866,-0.006252,0.000038,0.000027},
								{59982,-0.011876,0.259655,-0.0112745,-0.0001313,-0.109747,-0.00607,0.000038,0.000027},
								{59983,-0.014175,0.261674,-0.0111959,0.0000013,-0.109435,-0.005978,0.000038,0.000027},
								{59984,-0.015815,0.263434,-0.0112446,0.0001368,-0.109132,-0.005933,0.000038,0.000027},
								{59985,-0.016692,0.265519,-0.0114722,0.0002759,-0.108968,-0.005888,0.000038,0.000027},
								{59986,-0.017796,0.268043,-0.0117909,0.000339,-0.10903,-0.005966,0.000038,0.000027},
								{59987,-0.01958,0.270405,-0.0121316,0.0002951,-0.109302,-0.006152,0.000038,0.000027},
								{59988,-0.021949,0.27314,-0.0123642,0.0001665,-0.109566,-0.006391,0.000038,0.000027},
								{59989,-0.024489,0.275701,-0.0124632,-0.0000381,-0.109771,-0.006529,0.000038,0.000026},
								{59990,-0.026961,0.278194,-0.0123539,-0.0002153,-0.110073,-0.006492,0.000038,0.000026},
								{59991,-0.029393,0.280732,-0.0120613,-0.0003515,-0.110561,-0.006523,0.000038,0.000026},
								{59992,-0.03178,0.282935,-0.0116902,-0.0003759,-0.111,-0.006768,0.000038,0.000026},
								{59993,-0.034066,0.284869,-0.0113623,-0.000202,-0.11087,-0.007095,0.000038,0.000026},
								{59994,-0.035884,0.286825,-0.0113117,0.0000889,-0.11023,-0.007178,0.000037,0.000026},
								{59995,-0.037338,0.28892,-0.0115669,0.0004168,-0.109517,-0.007004,0.000037,0.000026},
								{59996,-0.038274,0.291422,-0.0121587,0.0006825,-0.109062,-0.006854,0.000037,0.000026},
								{59997,-0.038866,0.294588,-0.0129291,0.0008144,-0.108972,-0.006823,0.000036,0.000026},
								{59998,-0.03896,0.298263,-0.0137066,0.00079,-0.109122,-0.006819,0.000036,0.000026},
								{59999,-0.039119,0.301926,-0.014502,0.0006943,-0.109546,-0.006692,0.000035,0.000026},
								{60000,-0.039564,0.305114,-0.0151424,0.0005179,-0.109908,-0.006692,0.000035,0.000026},
								{60001,-0.040856,0.308232,-0.0155421,0.0002512,-0.110103,-0.006909,0.000035,0.000026},
								{60002,-0.042777,0.31076,-0.015605,-0.0000231,-0.110093,-0.007242,0.000034,0.000026},
								{60003,-0.044051,0.313293,-0.0155019,-0.0001828,-0.109955,-0.007463,0.000034,0.000026},
								{60004,-0.045086,0.316379,-0.0152786,-0.0002371,-0.109744,-0.007443,0.000033,0.000026},
								{60005,-0.046113,0.318791,-0.0150818,-0.0002367,-0.109392,-0.007347,0.000033,0.000026},
								{60006,-0.046687,0.321104,-0.0148373,-0.0001865,-0.108954,-0.007322,0.000034,0.000026},
								{60007,-0.047002,0.323819,-0.0146785,-0.0000724,-0.108602,-0.007424,0.000034,0.000026},
								{60008,-0.046661,0.326593,-0.0146745,0.0001136,-0.108461,-0.007448,0.000035,0.000027},
								{60009,-0.045685,0.329787,-0.0149014,0.0003634,-0.10844,-0.007318,0.000035,0.000027},
								{60010,-0.044608,0.333337,-0.0153636,0.0005579,-0.108379,-0.007161,0.000035,0.000027},
								{60011,-0.043532,0.336659,-0.0160114,0.0007353,-0.108354,-0.007072,0.000035,0.000027},
								{60012,-0.042336,0.339859,-0.0167878,0.0008192,-0.108392,-0.00712,0.000035,0.000027},
								{60013,-0.041256,0.343116,-0.0176141,0.0008168,-0.108531,-0.007237,0.000035,0.000027},
								{60014,-0.040683,0.346471,-0.0183979,0.000741,-0.108652,-0.007368,0.000035,0.000027},
								{60015,-0.04057,0.349536,-0.0190792,0.0006042,-0.108742,-0.007502,0.000035,0.000027},
								{60016,-0.040061,0.352542,-0.019591,0.0004022,-0.108783,-0.007648,0.000035,0.000027},
								{60017,-0.039649,0.355963,-0.0199053,0.0002055,-0.108751,-0.007788,0.000035,0.000027},
								{60018,-0.03963,0.359511,-0.0200627,0.0000645,-0.108529,-0.007893,0.000035,0.000027},
								{60019,-0.039844,0.362326,-0.0200757,-0.000037,-0.108226,-0.008018,0.000035,0.000027},
								{60020,-0.039743,0.364659,-0.0200455,-0.0000022,-0.108066,-0.008203,0.000035,0.000027},
								{60021,-0.039084,0.366854,-0.020122,0.0002127,-0.107939,-0.008349,0.000035,0.000027},
								{60022,-0.038135,0.368976,-0.0204787,0.000497,-0.1078,-0.008325,0.000034,0.000027},
								{60023,-0.036928,0.371212,-0.0211251,0.000764,-0.107725,-0.008151,0.000034,0.000027},
								{60024,-0.035517,0.373892,-0.0219939,0.0009292,-0.107752,-0.008001,0.000034,0.000027},
								{60025,-0.033905,0.377055,-0.0229586,0.0009641,-0.107756,-0.00796,0.000034,0.000026},
								{60026,-0.032486,0.380261,-0.0238856,0.0008635,-0.107827,-0.007989,0.000034,0.000026},
								{60027,-0.03117,0.383288,-0.0246789,0.0006707,-0.108032,-0.008012,0.000033,0.000026},
								{60028,-0.029878,0.386441,-0.0252246,0.0003689,-0.108315,-0.008068,0.000033,0.000026},
								{60029,-0.028414,0.389504,-0.0254326,0.0000696,-0.108508,-0.008236,0.000033,0.000026},
								{60030,-0.026581,0.392692,-0.0254002,-0.0001391,-0.108511,-0.008456,0.000032,0.000026},
								{60031,-0.024678,0.395503,-0.0251919,-0.000275,-0.108361,-0.008576,0.000032,0.000026},
								{60032,-0.022978,0.397896,-0.0248918,-0.0003134,-0.108156,-0.008617,0.000032,0.000026},
								{60033,-0.021711,0.400018,-0.0245955,-0.000257,-0.107806,-0.008639,0.000032,0.000026},
								{60034,-0.020394,0.402163,-0.0243844,-0.0001271,-0.10735,-0.008752,0.000032,0.000026},
								{60035,-0.018834,0.40457,-0.0243236,0.0000379,-0.106916,-0.008908,0.000032,0.000026},
								{60036,-0.017335,0.407418,-0.0244418,0.0002089,-0.106736,-0.008972,0.000031,0.000026},
								{60037,-0.01562,0.409993,-0.0247396,0.0003893,-0.10682,-0.008856,0.000031,0.000026},
								{60038,-0.013779,0.412634,-0.0252082,0.0005581,-0.106991,-0.008632,0.000031,0.000026},
								{60039,-0.012255,0.415511,-0.0258142,0.0006719,-0.107225,-0.008453,0.000031,0.000026},
								{60040,-0.010712,0.418311,-0.0265182,0.0007181,-0.107442,-0.008438,0.000031,0.000026},
								{60041,-0.009088,0.421268,-0.0272676,0.0006937,-0.10758,-0.00855,0.00003,0.000026},
								{60042,-0.007821,0.423822,-0.0279698,0.0006264,-0.107696,-0.008693,0.00003,0.000026},
								{60043,-0.006573,0.42634,-0.0285336,0.000469,-0.107793,-0.008803,0.00003,0.000026},
								{60044,-0.005286,0.428827,-0.0288975,0.0002652,-0.107786,-0.008875,0.000029,0.000026},
								{60045,-0.004036,0.431389,-0.0290505,0.000088,-0.107729,-0.00897,0.000029,0.000026},
								{60046,-0.002884,0.434158,-0.0290448,-0.0000383,-0.10749,-0.009098,0.000028,0.000026},
								{60047,-0.002382,0.436761,-0.0289749,-0.0000384,-0.107011,-0.00929,0.000028,0.000026},
								{60048,-0.001812,0.439313,-0.0289964,0.0001166,-0.106422,-0.009448,0.000028,0.000026},
								{60049,-0.001211,0.441764,-0.0292623,0.0003843,-0.106043,-0.009472,0.000027,0.000026},
								{60050,0.000203,0.443606,-0.0298192,0.0007065,-0.105983,-0.009366,0.000026,0.000026},
								{60051,0.001706,0.445334,-0.0306206,0.0009153,-0.106202,-0.009197,0.000026,0.000026},
								{60052,0.002995,0.44692,-0.0315753,0.0009877,-0.106543,-0.009051,0.000026,0.000025},
								{60053,0.00429,0.448625,-0.0325403,0.0008806,-0.106733,-0.008983,0.000026,0.000025},
								{60054,0.00573,0.450425,-0.0333581,0.0007288,-0.106812,-0.008983,0.000026,0.000025},
								{60055,0.007441,0.452628,-0.0339448,0.0004798,-0.106875,-0.009036,0.000026,0.000025},
								{60056,0.00915,0.455119,-0.0342759,0.0001925,-0.107016,-0.009129,0.000026,0.000025},
								{60057,0.010689,0.457886,-0.0343635,-0.0000228,-0.107172,-0.009274,0.000025,0.000025},
								{60058,0.012581,0.460645,-0.0342685,-0.000155,-0.107257,-0.009416,0.000025,0.000025},
								{60059,0.014959,0.462971,-0.0340562,-0.0002197,-0.107228,-0.009474,0.000025,0.000025},
								{60060,0.017353,0.465021,-0.0338282,-0.0002235,-0.107037,-0.009556,0.000025,0.000025},
								{60061,0.019416,0.467173,-0.0336106,-0.0001745,-0.106682,-0.009691,0.000026,0.000025},
								{60062,0.021433,0.469117,-0.0334783,-0.0000411,-0.106207,-0.009929,0.000026,0.000025},
								{60063,0.02386,0.470703,-0.0335613,0.0001546,-0.105765,-0.010115,0.000026,0.000025},
								{60064,0.026065,0.472129,-0.0337992,0.000338,-0.105543,-0.010157,0.000027,0.000025},
								{60065,0.027648,0.473495,-0.0342036,0.0005022,-0.105647,-0.009996,0.000027,0.000025},
								{60066,0.028813,0.474673,-0.0347749,0.0006356,-0.105999,-0.009685,0.000028,0.000025},
								{60067,0.030213,0.475705,-0.0354823,0.0007027,-0.106399,-0.009377,0.000028,0.000026},
								{60068,0.031919,0.476573,-0.0361538,0.0006906,-0.106813,-0.009222,0.000028,0.000026},
								{60069,0.033818,0.477623,-0.0368016,0.0006114,-0.10714,-0.009231,0.000028,0.000026},
								{60070,0.035709,0.47869,-0.0373662,0.0004731,-0.107336,-0.009393,0.000029,0.000026},
								{60071,0.037862,0.479811,-0.0377984,0.0003222,-0.107517,-0.009629,0.000029,0.000026},
								{60072,0.039825,0.481279,-0.0379641,0.0001589,-0.107643,-0.009871,0.000029,0.000026},
								{60073,0.041754,0.482751,-0.0380577,0.0000805,-0.107585,-0.010078,0.000029,0.000026},
								{60074,0.04353,0.484325,-0.0381745,0.0001197,-0.107256,-0.01017,0.00003,0.000026},
								{60075,0.045301,0.485549,-0.0383482,0.0002918,-0.106761,-0.010184,0.00003,0.000026},
								{60076,0.047247,0.486637,-0.0388039,0.0005556,-0.106262,-0.010143,0.00003,0.000026},
								{60077,0.049395,0.487736,-0.0395238,0.0008462,-0.105928,-0.010086,0.00003,0.000026},
								{60078,0.052261,0.489096,-0.0405249,0.0011148,-0.105823,-0.009995,0.000029,0.000026},
								{60079,0.055858,0.490657,-0.0417802,0.0012852,-0.10594,-0.009866,0.000029,0.000027},
								{60080,0.059245,0.492277,-0.0431018,0.0012767,-0.106208,-0.009714,0.000029,0.000027},
								{60081,0.062153,0.49351,-0.0443048,0.0010962,-0.106728,-0.009516,0.000029,0.000027},
								{60082,0.064532,0.494629,-0.0452728,0.0008101,-0.107221,-0.009361,0.000028,0.000027},
								{60083,0.066867,0.495731,-0.0459364,0.0004912,-0.10758,-0.00933,0.000028,0.000027},
								{60084,0.069379,0.496676,-0.0462835,0.0002097,-0.107595,-0.009476,0.000028,0.000027},
								{60085,0.071671,0.497556,-0.046384,-0.0000227,-0.107532,-0.009717,0.000028,0.000027},
								{60086,0.073624,0.498166,-0.0462533,-0.0002121,-0.107527,-0.009913,0.000028,0.000027},
								{60087,0.076115,0.499,-0.0459741,-0.0002851,-0.10753,-0.009979,0.000027,0.000027},
								{60088,0.07916,0.5,-0.0456823,-0.0003183,-0.107497,-0.009951,0.000027,0.000027},
								{60089,0.082242,0.501075,-0.0453548,-0.0002784,-0.107367,-0.009959,0.000027,0.000027},
								{60090,0.084912,0.502495,-0.0450856,-0.0001975,-0.107111,-0.010056,0.000027,0.000027},
								{60091,0.086787,0.503764,-0.0449541,-0.0000573,-0.106762,-0.010191,0.000027,0.000027},
								{60092,0.088653,0.504481,-0.0449963,0.0001287,-0.106452,-0.010198,0.000026,0.000027},
								{60093,0.090332,0.505284,-0.0452135,0.0002632,-0.106416,-0.010024,0.000026,0.000027},
								{60094,0.091845,0.506048,-0.0454755,0.000301,-0.106778,-0.009766,0.000026,0.000027},
								{60095,0.093735,0.507017,-0.0457705,0.0002829,-0.107391,-0.009543,0.000026,0.000027},
								{60096,0.096324,0.507821,-0.0460246,0.0002244,-0.108192,-0.009386,0.000025,0.000027},
								{60097,0.099278,0.508716,-0.046191,0.0000766,-0.108693,-0.009315,0.000025,0.000027},
								{60098,0.102224,0.5094,-0.0461792,-0.0001469,-0.109013,-0.009372,0.000025,0.000027},
								{60099,0.105156,0.510079,-0.0459505,-0.000379,-0.109324,-0.009589,0.000025,0.000027},
								{60100,0.10801,0.510392,-0.0454733,-0.0005117,-0.109516,-0.009891,0.000025,0.000027},
								{60101,0.111207,0.510841,-0.0448982,-0.0005226,-0.109427,-0.010107,0.000024,0.000027},
								{60102,0.114181,0.511324,-0.0444328,-0.0004327,-0.108811,-0.010153,0.000024,0.000027},
								{60103,0.116555,0.511591,-0.0440683,-0.0002437,-0.108163,-0.010065,0.000024,0.000027},
								{60104,0.119179,0.511809,-0.043923,-0.0000221,-0.107761,-0.009962,0.000023,0.000026},
								{60105,0.121709,0.51217,-0.0440223,0.0001893,-0.107917,-0.009877,0.000023,0.000026},
								{60106,0.123874,0.512576,-0.0443186,0.0002955,-0.108245,-0.009798,0.000023,0.000026},
								{60107,0.126073,0.512939,-0.0445836,0.0002745,-0.108543,-0.009692,0.000023,0.000026},
								{60108,0.128644,0.513074,-0.0447793,0.0001636,-0.108884,-0.009539,0.000023,0.000027},
								{60109,0.131271,0.513206,-0.0449066,-0.0000461,-0.109189,-0.009284,0.000023,0.000027},
								{60110,0.133768,0.513072,-0.0446551,-0.0003108,-0.109514,-0.009054,0.000024,0.000026},
								{60111,0.136477,0.512896,-0.0442252,-0.0005422,-0.109764,-0.009038,0.000024,0.000026},
								{60112,0.139491,0.512916,-0.0436324,-0.0007051,-0.109857,-0.009265,0.000024,0.000026},
								{60113,0.142484,0.512776,-0.0429232,-0.0008104,-0.109823,-0.009655,0.000024,0.000026},
								{60114,0.145656,0.512508,-0.042056,-0.0008525,-0.109819,-0.009988,0.000024,0.000026},
								{60115,0.148678,0.512375,-0.04116,-0.0008266,-0.109905,-0.010092,0.000024,0.000026},
								{60116,0.152059,0.511995,-0.0403339,-0.0007532,-0.110166,-0.009958,0.000024,0.000026},
								{60117,0.155487,0.511566,-0.0396106,-0.0006788,-0.11044,-0.009789,0.000025,0.000026},
								{60118,0.158395,0.511173,-0.0390052,-0.0005829,-0.110613,-0.00971,0.000026,0.000026},
								{60119,0.161379,0.510836,-0.0384913,-0.0004816,-0.110497,-0.009703,0.000026,0.000026},
								{60120,0.164236,0.510731,-0.0381064,-0.000382,-0.110216,-0.009611,0.000027,0.000026},
								{60121,0.16713,0.510351,-0.0378168,-0.0002797,-0.1101,-0.009417,0.000027,0.000026},
								{60122,0.170443,0.510001,-0.0375129,-0.0002228,-0.110458,-0.009268,0.000028,0.000026},
								{60123,0.173926,0.509949,-0.0372665,-0.0002252,-0.111305,-0.009189,0.000029,0.000026},
								{60124,0.177019,0.509675,-0.0370076,-0.0003159,-0.112196,-0.009176,0.000029,0.000026},
								{60125,0.18023,0.509121,-0.0366545,-0.0004446,-0.112763,-0.009133,0.00003,0.000026},
								{60126,0.183644,0.508472,-0.0361654,-0.000651,-0.113045,-0.009153,0.00003,0.000026},
								{60127,0.187256,0.507855,-0.0354692,-0.0008333,-0.113192,-0.009332,0.00003,0.000026},
								{60128,0.190511,0.507577,-0.0345248,-0.0009663,-0.113157,-0.009629,0.000031,0.000026},
								{60129,0.193235,0.507369,-0.0334781,-0.0009425,-0.112855,-0.00982,0.000031,0.000026},
								{60130,0.195864,0.507102,-0.0325719,-0.0008191,-0.112404,-0.009776,0.000031,0.000026},
								{60131,0.198401,0.506455,-0.0318841,-0.0005989,-0.112206,-0.009612,0.000031,0.000027},
								{60132,0.201227,0.505582,-0.0314265,-0.0003603,-0.112402,-0.009538,0.000032,0.000027},
								{60133,0.204174,0.504533,-0.031148,-0.000212,-0.112731,-0.009516,0.000031,0.000027},
								{60134,0.207022,0.503213,-0.0309447,-0.0002076,-0.11296,-0.009454,0.000031,0.000027},
								{60135,0.209552,0.501999,-0.0307031,-0.0003313,-0.113253,-0.009294,0.000031,0.000026},
								{60136,0.212162,0.500953,-0.0303129,-0.0004921,-0.113563,-0.009107,0.000031,0.000026},
								{60137,0.214566,0.499925,-0.0297024,-0.0007239,-0.11386,-0.009048,0.000031,0.000026},
								{60138,0.216926,0.498813,-0.028855,-0.0009675,-0.114272,-0.009061,0.000031,0.000026},
								{60139,0.21935,0.497618,-0.0277985,-0.0011333,-0.114712,-0.009163,0.00003,0.000025},
								{60140,0.22189,0.496519,-0.0265924,-0.0012557,-0.114851,-0.009388,0.00003,0.000025},
								{60141,0.224409,0.495468,-0.0253095,-0.0013053,-0.114759,-0.009729,0.000029,0.000025},
								{60142,0.22697,0.494527,-0.0240304,-0.0012337,-0.114601,-0.010009,0.000029,0.000025},
								{60143,0.228966,0.49383,-0.0228455,-0.0011024,-0.114488,-0.010017,0.000029,0.000025},
								{60144,0.230965,0.493098,-0.0218273,-0.000917,-0.114604,-0.009765,0.000029,0.000025},
								{60145,0.233305,0.492312,-0.021016,-0.0007155,-0.114799,-0.009431,0.000029,0.000024},
								{60146,0.23591,0.49113,-0.0204208,-0.0004917,-0.11495,-0.009219,0.000028,0.000024},
								{60147,0.238225,0.490004,-0.0200217,-0.000332,-0.114952,-0.009109,0.000028,0.000024},
								{60148,0.240429,0.488648,-0.0197609,-0.0002351,-0.114808,-0.008997,0.000028,0.000024},
								{60149,0.242649,0.48715,-0.019567,-0.0001852,-0.114748,-0.008861,0.000028,0.000024},
								{60150,0.244981,0.48552,-0.0193747,-0.0001921,-0.1151,-0.008832,0.000028,0.000024},
								{60151,0.24734,0.483976,-0.0191095,-0.0003045,-0.115938,-0.009012,0.000028,0.000023},
								{60152,0.249873,0.482345,-0.0187144,-0.0004677,-0.116886,-0.009294,0.000028,0.000023},
								{60153,0.25229,0.480843,-0.0181488,-0.0006588,-0.117496,-0.009461,0.000028,0.000023},
								{60154,0.254577,0.479148,-0.0174102,-0.0008153,-0.11759,-0.009513,0.000028,0.000023},
								{60155,0.256304,0.477358,-0.0165365,-0.0009086,-0.117379,-0.009578,0.000027,0.000023},
								{60156,0.257728,0.475317,-0.015622,-0.000887,-0.116981,-0.009704,0.000027,0.000023},
								{60157,0.259513,0.473323,-0.0148011,-0.0007171,-0.116475,-0.009728,0.000027,0.000023},
								{60158,0.261514,0.471684,-0.0141958,-0.0004579,-0.116168,-0.00948,0.000027,0.000023},
								{60159,0.26342,0.470125,-0.0138866,-0.0001477,-0.116297,-0.009219,0.000027,0.000023},
								{60160,0.265504,0.468252,-0.0138584,0.0000744,-0.116751,-0.009213,0.000027,0.000023},
								{60161,0.267888,0.466381,-0.0140166,0.0001669,-0.117314,-0.009406,0.000027,0.000023},
								{60162,0.270512,0.46486,-0.0141861,0.0000731,-0.117766,-0.009485,0.000027,0.000023},
								{60163,0.27289,0.463584,-0.0141919,-0.0001134,-0.118141,-0.009354,0.000027,0.000023},
								{60164,0.274733,0.462278,-0.0139244,-0.0003562,-0.118483,-0.009221,0.000027,0.000024},
								{60165,0.276347,0.460701,-0.0134108,-0.0006058,-0.118566,-0.009272,0.000027,0.000024},
								{60166,0.277834,0.458776,-0.0126576,-0.0008471,-0.118591,-0.009435,0.000026,0.000024},
								{60167,0.279006,0.456567,-0.011705,-0.0010711,-0.118654,-0.009576,0.000026,0.000024},
								{60168,0.279983,0.454695,-0.0106116,-0.0011859,-0.118749,-0.00964,0.000026,0.000024},
								{60169,0.280802,0.452632,-0.0094422,-0.001196,-0.11871,-0.009721,0.000025,0.000025},
								{60170,0.281815,0.450672,-0.0082556,-0.0011145,-0.118522,-0.009788,0.000025,0.000025},
								{60171,0.282789,0.448899,-0.0071499,-0.0009733,-0.11831,-0.009664,0.000025,0.000025},
								{60172,0.283562,0.447088,-0.0062417,-0.0007866,-0.118205,-0.009381,0.000025,0.000026},
								{60173,0.284129,0.445212,-0.0055391,-0.000614,-0.118174,-0.009016,0.000026,0.000026},
								{60174,0.285167,0.442964,-0.0050129,-0.000488,-0.118153,-0.008792,0.000026,0.000026},
								{60175,0.286581,0.440695,-0.0045946,-0.0003998,-0.117909,-0.008764,0.000027,0.000026},
								{60176,0.28773,0.438187,-0.0042348,-0.0003769,-0.117556,-0.008849,0.000028,0.000026},
								{60177,0.288636,0.43546,-0.003822,-0.0004127,-0.117637,-0.008937,0.000029,0.000027},
								{60178,0.289739,0.432381,-0.0033502,-0.0004952,-0.118131,-0.00906,0.000029,0.000027},
								{60179,0.291321,0.429789,-0.0028114,-0.0006239,-0.118946,-0.009305,0.00003,0.000027},
								{60180,0.292547,0.427292,-0.002108,-0.0007707,-0.119381,-0.009485,0.000031,0.000028},
								{60181,0.294097,0.424769,-0.0012432,-0.0009154,-0.119443,-0.009522,0.000031,0.000028},
								{60182,0.296027,0.422636,-0.000299,-0.0010175,-0.119377,-0.009571,0.000032,0.000028},
								{60183,0.298295,0.420651,0.0007641,-0.0010129,-0.119088,-0.009586,0.000032,0.000029},
								{60184,0.300363,0.418932,0.0017435,-0.0008836,-0.118646,-0.009568,0.000032,0.000029},
								{60185,0.302113,0.417635,0.0024732,-0.0006009,-0.118257,-0.00944,0.000032,0.000029},
								{60186,0.303561,0.41644,0.002849,-0.0001969,-0.118179,-0.009086,0.000033,0.000029},
								{60187,0.304487,0.415025,0.0028502,0.0001454,-0.118529,-0.008826,0.000033,0.00003},
								{60188,0.304756,0.413256,0.0025737,0.0003531,-0.119015,-0.008945,0.000033,0.00003},
								{60189,0.304825,0.411202,0.0021839,0.0003613,-0.119301,-0.009297,0.000034,0.00003},
								{60190,0.304701,0.409285,0.0018903,0.0001717,-0.119393,-0.009472,0.000034,0.000031},
								{60191,0.304266,0.407193,0.0019232,-0.0001147,-0.119592,-0.009316,0.000034,0.000031},
								{60192,0.304174,0.404932,0.0022069,-0.0004198,-0.119982,-0.009104,0.000035,0.000031},
								{60193,0.304195,0.402428,0.002708,-0.0006723,-0.12032,-0.009126,0.000035,0.000031},
								{60194,0.304199,0.399352,0.0034559,-0.0008543,-0.120247,-0.009359,0.000036,0.000032},
								{60195,0.304979,0.395692,0.004365,-0.0009567,-0.119998,-0.009526,0.000036,0.000032},
								{60196,0.306209,0.392478,0.0053636,-0.0009899,-0.119819,-0.009565,0.000036,0.000032},
								{60197,0.307437,0.389444,0.0063558,-0.0009243,-0.119581,-0.00956,0.000036,0.000032},
								{60198,0.30857,0.386755,0.007241,-0.0008073,-0.119346,-0.009478,0.000036,0.000032},
								{60199,0.309387,0.384452,0.0079669,-0.0006531,-0.119152,-0.009305,0.000037,0.000032},
								{60200,0.309659,0.382355,0.0085158,-0.0004661,-0.118942,-0.009064,0.000037,0.000032},
								{60201,0.309635,0.380207,0.0088887,-0.0003004,-0.118787,-0.008735,0.000037,0.000032},
								{60202,0.309689,0.377678,0.0091161,-0.0001774,-0.118656,-0.008502,0.000037,0.000032},
								{60203,0.3098,0.374784,0.0092496,-0.0001147,-0.11856,-0.008482,0.000037,0.000032},
								{60204,0.309709,0.371788,0.0093536,-0.000119,-0.118522,-0.008649,0.000037,0.000032},
								{60205,0.308967,0.369068,0.0094947,-0.0001883,-0.118529,-0.008851,0.000037,0.000032},
								{60206,0.308173,0.366249,0.0097191,-0.0002806,-0.11858,-0.008991,0.000037,0.000032},
								{60207,0.307421,0.363669,0.010063,-0.0004249,-0.11887,-0.009057,0.000037,0.000032},
								{60208,0.306729,0.360661,0.0105564,-0.0005809,-0.119275,-0.009116,0.000037,0.000032},
								{60209,0.306414,0.357857,0.0111932,-0.0007131,-0.119448,-0.009217,0.000036,0.000032},
								{60210,0.305713,0.355021,0.0119465,-0.0007817,-0.119326,-0.009268,0.000036,0.000032},
								{60211,0.305088,0.351937,0.0127348,-0.0007212,-0.118926,-0.009234,0.000037,0.000032},
								{60212,0.30416,0.349007,0.0134121,-0.0005513,-0.118381,-0.009106,0.000037,0.000032},
								{60213,0.303338,0.34619,0.0138376,-0.0002626,-0.117959,-0.008832,0.000037,0.000032},
								{60214,0.302781,0.34354,0.0139068,0.0001013,-0.117916,-0.008445,0.000037,0.000032},
								{60215,0.302619,0.340941,0.0136037,0.0004506,-0.118303,-0.008157,0.000037,0.000032},
								{60216,0.302158,0.338769,0.0130202,0.0006401,-0.118715,-0.008218,0.000037,0.000031},
								{60217,0.30173,0.336461,0.012319,0.0006806,-0.118768,-0.008542,0.000037,0.00003},
								{60218,0.301392,0.334341,0.0117026,0.0005099,-0.118581,-0.008771,0.000037,0.00003},
								{60219,0.300733,0.332048,0.0113468,0.0002219,-0.118582,-0.008709,0.000037,0.00003},
								{60220,0.299865,0.32964,0.0113175,-0.0001023,-0.118909,-0.008545,0.000037,0.00003},
								{60221,0.298719,0.326809,0.0115768,-0.0003826,-0.119168,-0.008565,0.000037,0.00003},
								{60222,0.298149,0.324046,0.0120712,-0.0005691,-0.119113,-0.008755,0.000037,0.00003},
								{60223,0.297903,0.321485,0.0127151,-0.000667,-0.11878,-0.008878,0.000036,0.00003},
								{60224,0.29757,0.319132,0.0133616,-0.000634,-0.118398,-0.008783,0.000036,0.000029},
								{60225,0.296882,0.316811,0.0139469,-0.0005173,-0.118001,-0.008589,0.000036,0.000029},
								{60226,0.295938,0.314686,0.0144025,-0.0003272,-0.117588,-0.008454,0.000036,0.000029},
								{60227,0.294927,0.312335,0.0146412,-0.0001383,-0.117247,-0.008374,0.000036,0.000029},
								{60228,0.293748,0.309961,0.0146859,0.0000591,-0.117101,-0.008254,0.000036,0.000029},
								{60229,0.292286,0.307332,0.0145501,0.0002027,-0.117094,-0.008012,0.000036,0.000029},
								{60230,0.291375,0.304781,0.0142867,0.0002749,-0.117123,-0.007769,0.000036,0.000029},
								{60231,0.290908,0.302911,0.0139599,0.000316,-0.11716,-0.007675,0.000036,0.000029},
								{60232,0.290215,0.301102,0.0136477,0.0002956,-0.117243,-0.007796,0.000036,0.000029},
								{60233,0.289521,0.298991,0.013466,0.0001733,-0.117348,-0.008019,0.000036,0.000029},
								{60234,0.288906,0.296754,0.0133615,0.0000124,-0.117375,-0.008183,0.000036,0.000028},
								{60235,0.288101,0.29462,0.0133766,-0.0001494,-0.117287,-0.008224,0.000036,0.000028},
								{60236,0.286831,0.292918,0.0135951,-0.0002927,-0.117157,-0.008185,0.000036,0.000028},
								{60237,0.285174,0.291165,0.0139318,-0.0003322,-0.117021,-0.008156,0.000036,0.000028},
								{60238,0.283827,0.289415,0.0142484,-0.0002799,-0.116746,-0.008205,0.000036,0.000028},
								{60239,0.282703,0.287453,0.0144604,-0.0001389,-0.116273,-0.008264,0.000035,0.000028},
								{60240,0.281924,0.285041,0.014492,0.0000923,-0.11568,-0.008233,0.000035,0.000028},
								{60241,0.281285,0.282394,0.0142567,0.0003754,-0.11521,-0.00804,0.000035,0.000028},
								{60242,0.280611,0.279908,0.0137428,0.0006323,-0.115146,-0.007706,0.000035,0.000028},
								{60243,0.280159,0.27774,0.01301,0.0008009,-0.115425,-0.007405,0.000036,0.000028},
								{60244,0.279973,0.275697,0.0121908,0.0008036,-0.115732,-0.007315,0.000036,0.000028},
								{60245,0.280058,0.274078,0.0114404,0.000609,-0.115791,-0.007421,0.000037,0.000029},
								{60246,0.279613,0.272839,0.0109322,0.0002999,-0.115649,-0.007554,0.000037,0.000028},
								{60247,0.278192,0.27172,0.0108532,-0.0000017,-0.1156,-0.007582,0.000037,0.000028},
								{60248,0.276305,0.270362,0.0110015,-0.0002284,-0.115795,-0.007553,0.000036,0.000028},
								{60249,0.274531,0.268369,0.0113544,-0.0003888,-0.115984,-0.007581,0.000036,0.000028},
								{60250,0.273114,0.266152,0.0118076,-0.0004736,-0.115933,-0.007668,0.000036,0.000028},
								{60251,0.271804,0.264366,0.0122758,-0.000489,-0.115582,-0.007688,0.000035,0.000027},
								{60252,0.270911,0.262607,0.0127105,-0.0003883,-0.11509,-0.007624,0.000035,0.000027},
								{60253,0.270119,0.261268,0.0130277,-0.0002165,-0.114589,-0.007522,0.000034,0.000027},
								{60254,0.269178,0.25981,0.0131361,-0.0000053,-0.114165,-0.007475,0.000034,0.000027},
								{60255,0.268296,0.258563,0.0130403,0.0001796,-0.113884,-0.007476,0.000033,0.000027},
								{60256,0.266805,0.257183,0.012804,0.0002858,-0.113869,-0.007334,0.000033,0.000027},
								{60257,0.265199,0.255661,0.0124319,0.0004146,-0.114052,-0.00703,0.000032,0.000027},
								{60258,0.263483,0.254412,0.0119527,0.0005124,-0.114326,-0.006666,0.000032,0.000027},
								{60259,0.261611,0.252904,0.0114213,0.0005196,-0.11434,-0.006465,0.000031,0.000027},
								{60260,0.259916,0.251307,0.0109142,0.0004093,-0.114231,-0.006508,0.000031,0.000027},
								{60261,0.25826,0.24974,0.0105401,0.0002674,-0.11432,-0.006696,0.000031,0.000027},
								{60262,0.256525,0.248157,0.0103731,0.0000853,-0.114403,-0.00689,0.000031,0.000027},
								{60263,0.254567,0.24679,0.0103917,-0.0001087,-0.11431,-0.00703,0.000031,0.000027},
								{60264,0.252419,0.245152,0.0105734,-0.0002346,-0.114101,-0.007066,0.000032,0.000027},
								{60265,0.250341,0.243028,0.0108479,-0.0002687,-0.113845,-0.007053,0.000032,0.000027},
								{60266,0.248373,0.240409,0.0111166,-0.0002397,-0.113515,-0.007046,0.000032,0.000027},
								{60267,0.246593,0.238089,0.0112921,-0.0000775,-0.113117,-0.007063,0.000033,0.000027},
								{60268,0.245219,0.236071,0.0112942,0.0001135,-0.112705,-0.00705,0.000033,0.000027},
								{60269,0.244494,0.234499,0.0110896,0.0002744,-0.11242,-0.006941,0.000033,0.000027},
								{60270,0.24354,0.233473,0.0107452,0.0004105,-0.11237,-0.006736,0.000033,0.000028},
								{60271,0.241949,0.232189,0.0103183,0.0004342,-0.112561,-0.006494,0.000034,0.000028},
								{60272,0.240911,0.231282,0.0099013,0.0004067,-0.112832,-0.006305,0.000034,0.000028},
								{60273,0.239756,0.230812,0.0095603,0.0002736,-0.113049,-0.006184,0.000034,0.000028},
								{60274,0.238346,0.230152,0.0093724,0.0000275,-0.113112,-0.006144,0.000033,0.000028},
								{60275,0.236357,0.229513,0.0094376,-0.0002203,-0.113097,-0.006176,0.000033,0.000028},
								{60276,0.233842,0.228543,0.0098108,-0.0004255,-0.113135,-0.006266,0.000033,0.000028},
								{60277,0.231426,0.22732,0.0103588,-0.0006,-0.113018,-0.006418,0.000032,0.000029},
								{60278,0.228986,0.2259,0.0109871,-0.0006146,-0.112784,-0.006535,0.000032,0.000029},
								{60279,0.226771,0.2248,0.0115543,-0.0004981,-0.112378,-0.00654,0.000032,0.000029},
								{60280,0.224316,0.223964,0.0120161,-0.0003694,-0.112109,-0.006547,0.000031,0.000029},
								{60281,0.222055,0.222518,0.0123251,-0.0002249,-0.111906,-0.006578,0.00003,0.000028},
								{60282,0.219829,0.220879,0.0124697,-0.0000669,-0.111498,-0.006483,0.00003,0.000028},
								{60283,0.217419,0.219147,0.0124498,0.0000909,-0.111102,-0.006312,0.000029,0.000029},
								{60284,0.214641,0.217529,0.0122806,0.0002343,-0.111097,-0.00613,0.000028,0.000029},
								{60285,0.21192,0.215822,0.0120026,0.0003141,-0.111352,-0.005866,0.000028,0.000029},
								{60286,0.208762,0.214103,0.0116759,0.0002971,-0.111796,-0.005595,0.000028,0.000029},
								{60287,0.205685,0.212065,0.0113639,0.0002034,-0.11223,-0.005451,0.000027,0.000029},
								{60288,0.202994,0.210476,0.011159,0.0000729,-0.11254,-0.005493,0.000027,0.000029},
								{60289,0.200014,0.209373,0.0111414,-0.0000619,-0.112666,-0.005682,0.000027,0.000029},
								{60290,0.196909,0.208319,0.0113904,-0.000225,-0.112627,-0.005931,0.000027,0.000029},
								{60291,0.193384,0.207723,0.0116718,-0.0003513,-0.112486,-0.006192,0.000027,0.000029},
								{60292,0.189602,0.206848,0.0120589,-0.0003992,-0.112235,-0.006348,0.000027,0.000029},
								{60293,0.185836,0.205785,0.0124641,-0.0003381,-0.111885,-0.006352,0.000027,0.000029},
								{60294,0.182003,0.204715,0.0126519,-0.0001073,-0.111555,-0.00621,0.000026,0.000029},
								{60295,0.178144,0.203441,0.0125724,0.0001763,-0.111325,-0.006068,0.000026,0.000029},
								{60295,0.178174,0.203452,0.0126379,0.0002117,-0.111319,-0.005997,0,0},
								{60296,0.174411,0.202293,0.0122964,0.0004488,-0.111213,-0.005954,0,0},
								{60297,0.170691,0.201239,0.0117418,0.0006815,-0.111242,-0.005945,0,0},
								{60298,0.167483,0.200626,0.0109625,0.000827,-0.111368,-0.005894,0,0},
								{60299,0.164909,0.200426,0.0101392,0.0008184,-0.111566,-0.005774,0,0},
								{60300,0.162556,0.200451,0.0093548,0.0007226,-0.111805,-0.005612,0,0},
								{60301,0.160087,0.200811,0.008733,0.0005098,-0.112008,-0.005464,0,0},
								{60302,0.157623,0.201256,0.0083686,0.0001969,-0.112059,-0.005396,0,0},
								{60303,0.155012,0.201565,0.0083292,-0.0000862,-0.111909,-0.005467,0,0},
								{60304,0.151985,0.201779,0.0084573,-0.0001184,-0.111654,-0.005678,0,0},
								{60305,0.148907,0.201611,0.00854,-0.0000725,-0.111462,-0.00594,0,0},
								{60306,0.146067,0.201393,0.0086476,-0.0001623,-0.111388,-0.006113,0,0},
								{60307,0.143452,0.201334,0.0088486,-0.0002039,-0.111329,-0.006112,0,0},
								{60308,0.141103,0.201557,0.0089917,-0.0000544,-0.111175,-0.005981,0,0},
								{60309,0.138975,0.201907,0.0089483,0.0001223,-0.110938,-0.005843,0,0},
								{60310,0.136912,0.202218,0.0087654,0.000244,-0.110712,-0.005764,0,0},
								{60311,0.134925,0.202553,0.0084754,0.0003205,-0.110566,-0.005687,0,0},
								{60312,0.133138,0.203117,0.0081273,0.0003885,-0.110536,-0.005542,0,0},
								{60313,0.131607,0.20402,0.0077012,0.0004482,-0.1107,-0.005372,0,0},
								{60314,0.130015,0.20517,0.0072737,0.0003796,-0.111115,-0.005312,0,0},
								{60315,0.127965,0.206066,0.0069625,0.0002494,-0.111667,-0.005429,0,0},
								{60316,0.125623,0.20641,0.0067793,0.000106,-0.112106,-0.005643,0,0},
								{60317,0.123324,0.20663,0.0067848,-0.0001403,-0.112306,-0.005834,0,0},
								{60318,0.121206,0.206563,0.0070507,-0.0003591,-0.112382,-0.005998,0,0},
								{60319,0.119312,0.206316,0.0074343,-0.0003719,-0.112436,-0.006197,0,0},
								{60320,0.117614,0.20651,0.0078214,0,-0.112356,-0.006375,0,0},
								{60321,0.115665,0.206817,0.0081786,0,-0.112033,-0.006366,0,0},
								{60322,0.113728,0.20757,0.0083574,0,-0.111629,-0.006129,0,0},
								{60323,0.111683,0.208408,0.0082691,0,-0.111443,-0.00586,0,0},
								{60324,0.109519,0.209294,0.0079105,0,-0.11157,-0.00577,0,0},
								{60325,0.107276,0.210179,0.0073812,0,-0.111853,-0.005844,0,0},
								{60326,0.105012,0.211056,0.0068119,0,-0.112124,-0.005914,0,0},
								{60327,0.102757,0.211937,0.0063335,0,-0.112342,-0.005889,0,0},
								{60328,0.100525,0.212833,0.0060644,0,-0.112528,-0.005814,0,0},
								{60329,0.098325,0.213754,0.0060669,0,-0.112659,-0.005755,0,0},
								{60330,0.096156,0.214713,0.0063451,0,-0.112652,-0.005743,0,0},
								{60331,0.094016,0.215711,0.0068251,0,-0.112427,-0.005809,0,0},
								{60332,0.091899,0.216751,0.0074007,0,-0.112033,-0.005984,0,0},
								{60333,0.089805,0.217831,0.007957,0,-0.111659,-0.006226,0,0},
								{60334,0.087731,0.218947,0.0084303,0,-0.111461,-0.006396,0,0},
								{60335,0.085678,0.220098,0.0087505,0,-0.111405,-0.006364,0,0},
								{60336,0.083646,0.221282,0.0088819,0,-0.111332,-0.006155,0,0},
								{60337,0.081638,0.222496,0.0088199,0,-0.111158,-0.005931,0,0},
								{60338,0.079653,0.223741,0.0085705,0,-0.110934,-0.005815,0,0},
								{60339,0.077693,0.225016,0.0081738,0,-0.110747,-0.005778,0,0},
								{60340,0.075759,0.22632,0.007666,0,-0.110653,-0.005738,0,0},
								{60341,0.073852,0.227654,0.0071345,0,-0.110728,-0.00573,0,0},
								{60342,0.071971,0.229017,0.0066505,0,-0.111036,-0.005893,0,0},
								{60343,0.070118,0.230409,0.0062799,0,-0.111472,-0.006257,0,0},
								{60344,0.068291,0.231829,0.0060793,0,-0.111776,-0.006631,0,0},
								{60345,0.066493,0.233277,0.0060666,0,-0.111854,-0.006794,0,0},
								{60346,0.064723,0.234753,0.0062167,0,-0.111935,-0.006786,0,0},
								{60347,0.062982,0.236255,0.0064455,0,-0.112189,-0.006862,0,0},
								{60348,0.061269,0.237784,0.0066259,0,-0.112354,-0.007105,0,0},
								{60349,0.059587,0.239339,0.0066171,0,-0.112074,-0.007256,0,0},
								{60350,0.057934,0.240919,0.0063049,0,-0.111488,-0.007077,0,0},
								{60351,0.056311,0.242524,0.0056634,0,-0.111112,-0.006725,0,0},
								{60352,0.054719,0.244154,0.0047648,0,-0.111194,-0.006551,0,0},
								{60353,0.053158,0.245808,0.0037624,0,-0.111534,-0.006637,0,0},
								{60354,0.051629,0.247485,0.0028422,0,-0.111874,-0.006772,0,0},
								{60355,0.050132,0.249186,0.0021534,0,-0.112151,-0.006823,0,0},
								{60356,0.048666,0.250909,0.0017771,0,-0.11236,-0.006882,0,0},
								{60357,0.047233,0.252654,0.0017211,0,-0.112445,-0.007046,0,0},
								{60358,0.045833,0.25442,0.0019233,0,-0.112372,-0.007249,0,0},
								{60359,0.044467,0.256208,0.002283,0,-0.112154,-0.007389,0,0},
								{60360,0.043133,0.258016,0.0026933,0,-0.111821,-0.007482,0,0},
								{60361,0.041834,0.259844,0.0030628,0,-0.111449,-0.007587,0,0},
								{60362,0.040568,0.261691,0.0033211,0,-0.111162,-0.007662,0,0},
								{60363,0.039337,0.263557,0.0034209,0,-0.111017,-0.007574,0,0},
								{60364,0.038141,0.265441,0.0033421,0,-0.110941,-0.007296,0,0},
								{60365,0.036979,0.267343,0.0030908,0,-0.110827,-0.006982,0,0},
								{60366,0.035853,0.269262,0.0027014,0,-0.110657,-0.006828,0,0},
								{60367,0.034762,0.271198,0.0022326,0,-0.1105,-0.006866,0,0},
								{60368,0.033706,0.27315,0.0017518,0,-0.110421,-0.006989,0,0},
								{60369,0.032687,0.275117,0.0013315,0,-0.110454,-0.007144,0,0},
								{60370,0.031703,0.2771,0.0010308,0,-0.110605,-0.007405,0,0},
								{60371,0.030756,0.279096,0.0008867,0,-0.110789,-0.007809,0,0},
								{60372,0.029845,0.281106,0.0009143,0,-0.11082,-0.008195,0,0},
								{60373,0.028971,0.28313,0.0010957,0,-0.110653,-0.008332,0,0},
								{60374,0.028134,0.285166,0.0013693,0,-0.110547,-0.008234,0,0},
								{60375,0.027334,0.287214,0.0016313,0,-0.110751,-0.008207,0,0},
								{60376,0.026571,0.289274,0.0017435,0,-0.111037,-0.008444,0,0},
								{60377,0.025845,0.291344,0.0015728,0,-0.11093,-0.008713,0,0},
								{60378,0.025156,0.293425,0.0010421,0,-0.110403,-0.008647,0,0},
								{60379,0.024505,0.295515,0.0001698,0,-0.109963,-0.008265,0,0},
								{60380,0.023892,0.297614,-0.0009225,0,-0.109991,-0.007948,0,0},
								{60381,0.023316,0.299722,-0.0020473,0,-0.110358,-0.007917,0,0},
								{60382,0.022778,0.301838,-0.0030164,0,-0.110773,-0.00803,0,0},
								{60383,0.022278,0.303961,-0.0036996,0,-0.111109,-0.008137,0,0},
								{60384,0.021816,0.30609,-0.0040533,0,-0.111298,-0.008325,0,0},
								{60385,0.021392,0.308226,-0.0041134,0,-0.111241,-0.008689,0,0},
								{60386,0.021006,0.310367,-0.0039672,0,-0.110976,-0.009088,0,0},
								{60387,0.020658,0.312514,-0.0037256,0,-0.110674,-0.00929,0,0},
								{60388,0.020349,0.314664,-0.0034896,0,-0.110415,-0.00926,0,0},
								{60389,0.020077,0.316818,-0.0033384,0,-0.11014,-0.009148,0,0},
								{60390,0.019843,0.318975,-0.0033238,0,-0.109837,-0.00905,0,0},
								{60391,0.019648,0.321135,-0.003477,0,-0.109607,-0.008892,0,0},
								{60392,0.01949,0.323296,-0.0038012,0,-0.109509,-0.008595,0,0},
								{60393,0.019371,0.325459,-0.0042721,0,-0.109481,-0.008261,0,0},
								{60394,0.019289,0.327622,-0.0048404,0,-0.109441,-0.008101,0,0},
								{60395,0.019246,0.329786,-0.0054412,0,-0.109393,-0.008214,0,0},
								{60396,0.01924,0.331949,-0.0060013,0,-0.109388,-0.00849,0,0},
								{60397,0.019273,0.334111,-0.0064541,0,-0.10943,-0.008773,0,0},
								{60398,0.019343,0.336271,-0.0067526,0,0,0,0,0},
								{60399,0.01945,0.338429,-0.0068737,0,0,0,0,0},
								{60400,0.019595,0.340584,-0.006826,0,0,0,0,0},
								{60401,0.019778,0.342736,-0.0066561,0,0,0,0,0},
								{60402,0.019998,0.344883,-0.0064504,0,0,0,0,0},
								{60403,0.020254,0.347026,-0.0063293,0,0,0,0,0},
								{60404,0.020548,0.349164,-0.0064231,0,0,0,0,0},
								{60405,0.020879,0.351296,-0.0068374,0,0,0,0,0},
								{60406,0.021247,0.353421,-0.0076063,0,0,0,0,0},
								{60407,0.021651,0.35554,-0.0086665,0,0,0,0,0},
								{60408,0.022091,0.357651,-0.009867,0,0,0,0,0},
								{60409,0.022567,0.359754,-0.0110137,0,0,0,0,0},
								{60410,0.023079,0.361848,-0.011935,0,0,0,0,0},
								{60411,0.023627,0.363933,-0.012531,0,0,0,0,0},
								{60412,0.024211,0.366009,-0.0127978,0,0,0,0,0},
								{60413,0.024829,0.368074,-0.012809,0,0,0,0,0},
								{60414,0.025483,0.370128,-0.0126783,0,0,0,0,0},
								{60415,0.026171,0.372171,-0.0125194,0,0,0,0,0},
								{60416,0.026894,0.374202,-0.0124235,0,0,0,0,0},
								{60417,0.027651,0.37622,-0.0124528,0,0,0,0,0},
								{60418,0.028442,0.378225,-0.0126413,0,0,0,0,0},
								{60419,0.029267,0.380217,-0.0129973,0,0,0,0,0},
								{60420,0.030125,0.382195,-0.0135022,0,0,0,0,0},
								{60421,0.031016,0.384158,-0.0141117,0,0,0,0,0},
								{60422,0.031938,0.386103,-0.0147631,0,0,0,0,0},
								{60423,0.032893,0.388032,-0.0153836,0,0,0,0,0},
								{60424,0.033879,0.389946,-0.0159016,0,0,0,0,0},
								{60425,0.034897,0.391843,-0.0162576,0,0,0,0,0},
								{60426,0.035947,0.393722,-0.0164175,0,0,0,0,0},
								{60427,0.037028,0.395585,-0.0163833,0,0,0,0,0},
								{60428,0.038139,0.397429,-0.0161973,0,0,0,0,0},
								{60429,0.03928,0.399254,-0.0159055,0,0,0,0,0},
								{60430,0.040452,0.401061,-0.0156468,0,0,0,0,0},
								{60431,0.041652,0.402848,-0.0155396,0,0,0,0,0},
								{60432,0.042882,0.404615,-0.0156852,0,0,0,0,0},
								{60433,0.044141,0.406362,-0.0161367,0,0,0,0,0},
								{60434,0.045427,0.408088,-0.0168732,0,0,0,0,0},
								{60435,0.046742,0.409793,-0.0177926,0,0,0,0,0},
								{60436,0.048084,0.411476,-0.0187327,0,0,0,0,0},
								{60437,0.049453,0.413138,-0.0195187,0,0,0,0,0},
								{60438,0.050848,0.414776,-0.020016,0,0,0,0,0},
								{60439,0.05227,0.416392,-0.0201716,0,0,0,0,0},
								{60440,0.053717,0.417985,-0.0200194,0,0,0,0,0},
								{60441,0.055189,0.419554,-0.0196559,0,0,0,0,0},
								{60442,0.056686,0.421098,-0.0192012,0,0,0,0,0},
								{60443,0.058207,0.422619,-0.0187629,0,0,0,0,0},
								{60444,0.059752,0.424114,-0.0184174,0,0,0,0,0},
								{60445,0.061321,0.425585,-0.018207,0,0,0,0,0},
								{60446,0.062911,0.42703,-0.018144,0,0,0,0,0},
								{60447,0.064525,0.428449,-0.0182145,0,0,0,0,0},
								{60448,0.06616,0.429842,-0.0183827,0,0,0,0,0},
								{60449,0.067816,0.431208,-0.0185945,0,0,0,0,0},
								{60450,0.069493,0.432548,-0.0187845,0,0,0,0,0},
								{60451,0.07119,0.43386,-0.018884,0,0,0,0,0},
								{60452,0.072907,0.435145,-0.0188297,0,0,0,0,0},
								{60453,0.074643,0.436402,-0.0185787,0,0,0,0,0},
								{60454,0.076397,0.437631,-0.0181198,0,0,0,0,0},
								{60455,0.07817,0.438832,-0.0174827,0,0,0,0,0},
								{60456,0.07996,0.440004,-0.0167398,0,0,0,0,0},
								{60457,0.081768,0.441147,-0.0159958,0,0,0,0,0},
								{60458,0.083591,0.442262,-0.0153676,0,0,0,0,0},
								{60459,0.085431,0.443347,-0.0149542,0,0,0,0,0},
								{60460,0.087286,0.444402,-0.01481,0,0,0,0,0},
								{60461,0.089156,0.445428,-0.0149265,0,0,0,0,0},
								{60462,0.09104,0.446423,-0.015228,0,0,0,0,0},
								{60463,0.092938,0.447388,-0.015585,0,0,0,0,0},
								{60464,0.094849,0.448323,-0.0158453,0,0,0,0,0},
								{60465,0.096772,0.449228,-0.0158753,0,0,0,0,0},
								{60466,0.098708,0.450101,-0.0155964,0,0,0,0,0},
								{60467,0.100655,0.450944,-0.0150069,0,0,0,0,0},
								{60468,0.102612,0.451755,-0.0141755,0,0,0,0,0},
								{60469,0.10458,0.452535,-0.0132123,0,0,0,0,0},
								{60470,0.106558,0.453284,-0.012233,0,0,0,0,0},
								{60471,0.108544,0.454001,-0.0113298,0,0,0,0,0},
								{60472,0.11054,0.454687,-0.0105597,0,0,0,0,0},
								{60473,0.112543,0.45534,-0.0099432,0,0,0,0,0},
								{60474,0.114553,0.455962,-0.0094714,0,0,0,0,0},
								{60475,0.11657,0.456552,-0.0091118,0,0,0,0,0},
								{60476,0.118593,0.45711,-0.0088138,0,0,0,0,0},
								{60477,0.120622,0.457635,-0.0085163,0,0,0,0,0},
								{60478,0.122656,0.458129,-0.0081537,0,0,0,0,0},
								{60479,0.124694,0.45859,-0.0076651,0,0,0,0,0},
								{60480,0.126737,0.459019,-0.007003,0,0,0,0,0},
								{60481,0.128782,0.459415,-0.0061448,0,0,0,0,0},
								{60482,0.13083,0.459779,-0.0051045,0,0,0,0,0},
								{60483,0.13288,0.460111,-0.0039414,0,0,0,0,0},
								{60484,0.134931,0.46041,-0.0027566,0,0,0,0,0},
								{60485,0.136983,0.460676,-0.0016727,0,0,0,0,0},
								{60486,0.139036,0.460911,-0.0008013,0,0,0,0,0},
								{60487,0.141088,0.461112,-0.0002055,0,0,0,0,0},
								{60488,0.143139,0.461282,0.0001204,0,0,0,0,0},
								{60489,0.145189,0.461419,0.0002523,0,0,0,0,0},
								{60490,0.147237,0.461524,0.0003168,0,0,0,0,0},
								{60491,0.149282,0.461596,0.0004573,0,0,0,0,0},
								{60492,0.151324,0.461636,0.0008002,0,0,0,0,0},
								{60493,0.153363,0.461645,0.0014251,0,0,0,0,0},
								{60494,0.155396,0.461621,0.0023482,0,0,0,0,0},
								{60495,0.157425,0.461565,0.003523,0,0,0,0,0},
								{60496,0.159449,0.461477,0.0048583,0,0,0,0,0},
								{60497,0.161466,0.461358,0.0062447,0,0,0,0,0},
								{60498,0.163477,0.461206,0.0075844,0,0,0,0,0},
								{60499,0.165481,0.461024,0.0088099,0,0,0,0,0},
								{60500,0.167477,0.46081,0.0098907,0,0,0,0,0},
								{60501,0.169464,0.460565,0.0108317,0,0,0,0,0},
								{60502,0.171443,0.460288,0.0116662,0,0,0,0,0},
								{60503,0.173413,0.459981,0.0124467,0,0,0,0,0},
								{60504,0.175372,0.459643,0.0132367,0,0,0,0,0},
								{60505,0.177321,0.459274,0.014102,0,0,0,0,0},
								{60506,0.17926,0.458876,0.0151012,0,0,0,0,0},
								{60507,0.181186,0.458446,0.0162773,0,0,0,0,0},
								{60508,0.183101,0.457987,0.0176482,0,0,0,0,0},
								{60509,0.185003,0.457498,0.0191956,0,0,0,0,0},
								{60510,0.186892,0.45698,0.020855,0,0,0,0,0},
								{60511,0.188768,0.456432,0.022513,0,0,0,0,0},
								{60512,0.190629,0.455855,0.0240234,0,0,0,0,0},
								{60513,0.192476,0.455249,0.0252422,0,0,0,0,0},
								{60514,0.194308,0.454615,0.0260734,0,0,0,0,0},
								{60515,0.196124,0.453952,0.0265053,0,0,0,0,0},
								{60516,0.197924,0.453261,0.0266189,0,0,0,0,0},
								{60517,0.199708,0.452543,0.0265661,0,0,0,0,0},
								{60518,0.201474,0.451796,0.0265257,0,0,0,0,0},
								{60519,0.203224,0.451023,0.0266555,0,0,0,0,0},
								{60520,0.204955,0.450223,0.0270572,0,0,0,0,0},
								{60521,0.206668,0.449396,0.0277621,0,0,0,0,0},
								{60522,0.208362,0.448542,0.0287357,0,0,0,0,0},
								{60523,0.210037,0.447663,0.0298961,0,0,0,0,0},
								{60524,0.211693,0.446758,0.0311367,0,0,0,0,0},
								{60525,0.213328,0.445828,0.0323486,0,0,0,0,0},
								{60526,0.214943,0.444872,0.03344,0,0,0,0,0},
								{60527,0.216536,0.443892,0.0343486,0,0,0,0,0},
								{60528,0.218109,0.442888,0.0350488,0,0,0,0,0},
								{60529,0.219659,0.441859,0.0355519,0,0,0,0,0},
								{60530,0.221188,0.440807,0.0359015,0,0,0,0,0},
								{60531,0.222694,0.439732,0.0361662,0,0,0,0,0},
								{60532,0.224177,0.438634,0.0364294,0,0,0,0,0},
								{60533,0.225637,0.437514,0.0367755,0,0,0,0,0},
								{60534,0.227073,0.436371,0.0372725,0,0,0,0,0},
								{60535,0.228485,0.435207,0.0379541,0,0,0,0,0},
								{60536,0.229873,0.434021,0.038809,0,0,0,0,0},
								{60537,0.231237,0.432815,0.0397822,0,0,0,0,0},
								{60538,0.232575,0.431588,0.0407867,0,0,0,0,0},
								{60539,0.233888,0.430341,0.041707,0,0,0,0,0},
								{60540,0.235175,0.429074,0.0424082,0,0,0,0,0},
								{60541,0.236437,0.427788,0.0427726,0,0,0,0,0},
								{60542,0.237672,0.426483,0.0427549,0,0,0,0,0},
								{60543,0.23888,0.42516,0.0424315,0,0,0,0,0},
								{60544,0.240062,0.423819,0.0419798,0,0,0,0,0},
								{60545,0.241217,0.422461,0.041582,0,0,0,0,0},
								{60546,0.242345,0.421085,0.0413043,0,0,0,0,0},
								{60547,0.243445,0.419693,0.0413243,0,0,0,0,0},
								{60548,0.244517,0.418284,0.0416851,0,0,0,0,0},
								{60549,0.245561,0.41686,0.042303,0,0,0,0,0},
								{60550,0.246576,0.415421,0.04309,0,0,0,0,0},
								{60551,0.247563,0.413967,0.0438282,0,0,0,0,0},
								{60552,0.248522,0.412499,0.0445648,0,0,0,0,0},
								{60553,0.249451,0.411017,0.0451348,0,0,0,0,0},
								{60554,0.250352,0.409521,0.0455479,0,0,0,0,0},
								{60555,0.251223,0.408013,0.045724,0,0,0,0,0},
								{60556,0.252064,0.406492,0.0457403,0,0,0,0,0},
								{60557,0.252876,0.40496,0.0456958,0,0,0,0,0},
								{60558,0.253659,0.403416,0.0455243,0,0,0,0,0},
								{60559,0.254411,0.401861,0.0453653,0,0,0,0,0},
								{60560,0.255133,0.400295,0.0452785,0,0,0,0,0},
								{60561,0.255825,0.39872,0.0453525,0,0,0,0,0},
								{60562,0.256486,0.397135,0.0455283,0,0,0,0,0},
								{60563,0.257118,0.395541,0.0458782,0,0,0,0,0},
								{60564,0.257718,0.393939,0.0463449,0,0,0,0,0},
								{60565,0.258288,0.392329,0.0468722,0,0,0,0,0},
								{60566,0.258827,0.390711,0.0474303,0,0,0,0,0},
								{60567,0.259336,0.389086,0.0478307,0,0,0,0,0},
								{60568,0.259813,0.387455,0.0479131,0,0,0,0,0},
								{60569,0.26026,0.385818,0.0475724,0,0,0,0,0},
								{60570,0.260676,0.384175,0.0468279,0,0,0,0,0},
								{60571,0.261061,0.382527,0.0457796,0,0,0,0,0},
								{60572,0.261415,0.380875,0.0445155,0,0,0,0,0},
								{60573,0.261737,0.379219,0.0433485,0,0,0,0,0},
								{60574,0.262029,0.377559,0.0423428,0,0,0,0,0},
								{60575,0.26229,0.375897,0.0416383,0,0,0,0,0},
								{60576,0.262519,0.374232,0.0411868,0,0,0,0,0},
								{60577,0.262718,0.372565,0.0409194,0,0,0,0,0},
								{60578,0.262886,0.370896,0.0407604,0,0,0,0,0},
								{60579,0.263023,0.369227,0.0406752,0,0,0,0,0},
								{60580,0.263128,0.367557,0.0405403,0,0,0,0,0},
								{60581,0.263204,0.365887,0.0402321,0,0,0,0,0},
								{60582,0.263248,0.364218,0.039811,0,0,0,0,0},
								{60583,0.263262,0.36255,0.0393166,0,0,0,0,0},
								{60584,0.263245,0.360883,0.0386759,0,0,0,0,0},
								{60585,0.263197,0.359218,0.0380829,0,0,0,0,0},
								{60586,0.26312,0.357556,0.0374203,0,0,0,0,0},
								{60587,0.263011,0.355897,0.0369621,0,0,0,0,0},
								{60588,0.262873,0.354241,0.0366308,0,0,0,0,0},
								{60589,0.262705,0.35259,0.0365083,0,0,0,0,0},
								{60590,0.262507,0.350942,0.0366183,0,0,0,0,0},
								{60591,0.262279,0.3493,0.0367954,0,0,0,0,0},
								{60592,0.262021,0.347663,0.0370606,0,0,0,0,0},
								{60593,0.261735,0.346032,0.0373975,0,0,0,0,0},
								{60594,0.261418,0.344408,0.037693,0,0,0,0,0},
								{60595,0.261073,0.34279,0.0378484,0,0,0,0,0},
								{60596,0.260699,0.341179,0.0376957,0,0,0,0,0},
								{60597,0.260296,0.339577,0.0372048,0,0,0,0,0},
								{60598,0.259865,0.337982,0.036413,0,0,0,0,0},
								{60599,0.259406,0.336396,0.0354509,0,0,0,0,0},
								{60600,0.258918,0.33482,0.0344524,0,0,0,0,0},
								{60601,0.258403,0.333253,0.0336927,0,0,0,0,0},
								{60602,0.25786,0.331696,0.0332135,0,0,0,0,0},
								{60603,0.25729,0.330149,0.0331209,0,0,0,0,0},
								{60604,0.256692,0.328613,0.03325,0,0,0,0,0},
								{60605,0.256068,0.327089,0.0335111,0,0,0,0,0},
								{60606,0.255418,0.325576,0.0337445,0,0,0,0,0},
								{60607,0.254741,0.324076,0.0340015,0,0,0,0,0},
								{60608,0.254038,0.322588,0.0341014,0,0,0,0,0},
								{60609,0.25331,0.321113,0.0340528,0,0,0,0,0},
								{60610,0.252556,0.319652,0.0337955,0,0,0,0,0},
								{60611,0.251777,0.318204,0.0333719,0,0,0,0,0},
								{60612,0.250973,0.316771,0.0327991,0,0,0,0,0},
								{60613,0.250145,0.315352,0.0321976,0,0,0,0,0},
								{60614,0.249293,0.313949,0.0317121,0,0,0,0,0},
								{60615,0.248417,0.312561,0.0314046,0,0,0,0,0},
								{60616,0.247518,0.311188,0.0313142,0,0,0,0,0},
								{60617,0.246595,0.309832,0.0314255,0,0,0,0,0},
								{60618,0.24565,0.308492,0.0316923,0,0,0,0,0},
								{60619,0.244682,0.307169,0.0321109,0,0,0,0,0},
								{60620,0.243693,0.305863,0.0325702,0,0,0,0,0},
								{60621,0.242681,0.304575,0.0330181,0,0,0,0,0},
								{60622,0.241649,0.303305,0.0333214,0,0,0,0,0},
								{60623,0.240595,0.302053,0.033421,0,0,0,0,0},
								{60624,0.239522,0.300819,0.0332422,0,0,0,0,0},
								{60625,0.238428,0.299605,0.0328197,0,0,0,0,0},
								{60626,0.237314,0.298409,0.0321236,0,0,0,0,0},
								{60627,0.236181,0.297234,0.0313662,0,0,0,0,0},
								{60628,0.235029,0.296078,0.0306536,0,0,0,0,0},
								{60629,0.233859,0.294942,0.0301048,0,0,0,0,0},
								{60630,0.23267,0.293826,0.0298944,0,0,0,0,0},
								{60631,0.231464,0.292731,0.0300516,0,0,0,0,0},
								{60632,0.230241,0.291658,0.0304114,0,0,0,0,0},
								{60633,0.229001,0.290605,0.0308704,0,0,0,0,0},
								{60634,0.227745,0.289574,0.0312237,0,0,0,0,0},
								{60635,0.226473,0.288565,0.03145,0,0,0,0,0},
								{60636,0.225185,0.287577,0.0315183,0,0,0,0,0},
								{60637,0.223882,0.286612,0.0313909,0,0,0,0,0},
								{60638,0.222565,0.28567,0.0311035,0,0,0,0,0},
								{60639,0.221234,0.28475,0.0305634,0,0,0,0,0},
								{60640,0.219889,0.283853,0.0300789,0,0,0,0,0},
								{60641,0.218531,0.282979,0.0296174,0,0,0,0,0},
								{60642,0.21716,0.282128,0.029242,0,0,0,0,0},
								{60643,0.215777,0.281301,0.0290261,0,0,0,0,0},
								{60644,0.214383,0.280498,0.0289593,0,0,0,0,0},
								{60645,0.212977,0.279718,0.0290932,0,0,0,0,0},
								{60646,0.21156,0.278963,0.029384,0,0,0,0,0},
								{60647,0.210133,0.278232,0.0297791,0,0,0,0,0},
								{60648,0.208696,0.277525,0.030175,0,0,0,0,0},
								{60649,0.207249,0.276843,0.0305517,0,0,0,0,0},
								{60650,0.205794,0.276185,0.0307383,0,0,0,0,0},
								{60651,0.204331,0.275552,0.0306728,0,0,0,0,0},
								{60652,0.202859,0.274944,0.0302192,0,0,0,0,0},
								{60653,0.20138,0.274361,0.0296507,0,0,0,0,0},
								{60654,0.199894,0.273803,0.0290099,0,0,0,0,0},
								{60655,0.198402,0.273271,0.0283518,0,0,0,0,0},
								{60656,0.196904,0.272764,0.0277838,0,0,0,0,0},
								{60657,0.1954,0.272282,0.0275081,0,0,0,0,0},
								{60658,0.193891,0.271825,0.0276253,0,0,0,0,0},
								{60659,0.192378,0.271395,0.0280973,0,0,0,0,0},
								{60660,0.190861,0.270989,0.0286415,0,0,0,0,0},
								{60661,0.189341,0.27061,0.0292271,0,0,0,0,0},
								{60662,0.187817,0.270256,0.0297405,0,0,0,0,0},
								{60663,0.186291,0.269928,0.0300818,0,0,0,0,0},
								{60664,0.184764,0.269626,0.0303161,0,0,0,0,0},
								{60665,0.183234,0.269349,0.030354,0,0,0,0,0},
								{60666,0.181704,0.269098,0.0302573,0,0,0,0,0},
								{60667,0.180173,0.268873,0.0301062,0,0,0,0,0},
								{60668,0.178642,0.268674,0.0299958,0,0,0,0,0},
								{60669,0.177112,0.268501,0.0299105,0,0,0,0,0},
								{60670,0.175582,0.268353,0.0300105,0,0,0,0,0},
								{60671,0.174055,0.268231,0.030297,0,0,0,0,0},
								{60672,0.172529,0.268135,0.0308455,0,0,0,0,0},
								{60673,0.171005,0.268065,0.0316067,0,0,0,0,0},
								{60674,0.169485,0.26802,0.0324502,0,0,0,0,0},
								{60675,0.167967,0.268,0.0332639,0,0,0,0,0},
								{60676,0.166454,0.268006,0.033954,0,0,0,0,0},
								{60677,0.164945,0.268038,0.0344453,0,0,0,0,0},
								{60678,0.163441,0.268094,0.0347787,0,0,0,0,0},
								{60679,0.161943,0.268176,0.0348506,0,0,0,0,0},
								{60680,0.16045,0.268283,0.0346557,0,0,0,0,0},
								{60681,0.158963,0.268415,0.0343264,0,0,0,0,0},
								{60682,0.157484,0.268572,0.0339892,0,0,0,0,0},
								{60683,0.156011,0.268754,0.0338071,0,0,0,0,0},
								{60684,0.154546,0.26896,0.0339733,0,0,0,0,0},
								{60685,0.153089,0.269191,0.0344266,0,0,0,0,0},
								{60686,0.151641,0.269446,0.0351997,0,0,0,0,0},
								{60687,0.150201,0.269725,0.0360652,0,0,0,0,0},
								{60688,0.148772,0.270029,0.0369375,0,0,0,0,0},
								{60689,0.147352,0.270356,0.0378017,0,0,0,0,0},
								{60690,0.145942,0.270707,0.0384894,0,0,0,0,0},
								{60691,0.144543,0.271081,0.0389288,0,0,0,0,0},
								{60692,0.143156,0.271479,0.0390897,0,0,0,0,0},
								{60693,0.14178,0.2719,0.0389426,0,0,0,0,0}};

/*string char2str(char* a) {
	string s = "";
	for (int i = 0; i < 100; i++) {
		if (a[i] == '\0')
			break;
		s = s + a[i];
	}
	return s;
}*/

/*int csv2matrix(const char* Filename, float** data) {
	FILE* R_file;
	//FILE* W_file;

	R_file = fopen(Filename, "r");
	//fseek(R_file, 1 * 170 * sizeof(char), SEEK_SET);
	if (R_file == NULL) {
		perror("Error opening file csv");
		return(-1);
	}
	float scanarr[13]{};
	char content[170];
	long m = 0;
	int i = 0;
	//for(int i=0; i<10; i++)
	while (fgets(content, 170, R_file))
	{
		char* v = strtok(content, ",");
		string v1 = char2str(v);
		m = 0;
		while (v)
		{
			//printf("%s ", v);
			scanarr[m] = atof(v);
			m++;
			v = strtok(NULL, ",");
		}
		//printf("\n");
		//fwrite(scanarr, sizeof(float), 16, W_file);
		for (int j = 0;j < 13;j++) {
			data[i][j] = scanarr[j];
		}
		i++;
		//cout<<endl;
	}
	fclose(R_file);
	return 0;
}*/

/// <summary>
/// 
/// </summary>
/// <param name="TLE_file"></param>
/// <param name="line"></param>
/// <param name="rowsize"></param>
/// <param name="column_i"></param>
/// <param name="column_f"></param>
/// <returns></returns>
/*double readfiledata(FILE* TLE_file, int line, int rowsize, int column_i, int column_f) {
	char content[18]{};
	//Se posiciona en linea (comienza cuenta en 0)
	fseek(TLE_file, (line - 1) * (rowsize + 1) + (column_i - 1) * sizeof(char), SEEK_SET);
	//Leer n caracteres (n-1)
	fgets(content, column_f - column_i + 2, TLE_file);
	//Convertir a numero
	return atof(content);
}*/

/// <summary>
/// TLE read data from file
/// </summary>
/// <param name="Filename"></param>
/// <param name="satdata"></param>
/*void TLEread(const char* Filename, SatData* satdata) {
	FILE* TLE_file;
	TLE_file = fopen(Filename, "r");
	if (TLE_file == NULL) {
		perror("Error opening file TLE");
	}
	else {
		//Leer epoca (year,dayofyear)
		int year = (int)readfiledata(TLE_file, 1, 70, 19, 20) + 2000;
		double doy = readfiledata(TLE_file, 1, 70, 21, 32);

		//Obtener Modified JD Date
		satdata->getMJD_epoch(year, doy);
		printf("JD: %1.14f\n", satdata->MJD_epoch);
		satdata->bstar = (float)readfiledata(TLE_file, 1, 70, 54, 59);
		printf("bstar: %1.6f\n", satdata->bstar);
		float ExBStar = (float)readfiledata(TLE_file, 1, 70, 60, 61);
		printf("exbstar: %1.6f\n", ExBStar);
		satdata->bstar *= 1e-5 * pow(10, ExBStar);
		printf("bstar: %1.14f\n", satdata->bstar);
		float i = (float)readfiledata(TLE_file, 2, 70, 9, 16);
		printf("i: %1.14f\n", i);
		float raan = (float)readfiledata(TLE_file, 2, 70, 18, 25);
		printf("raan: %1.14f\n", raan);
		satdata->eo = readfiledata(TLE_file, 2, 70, 27, 33) * 1e-7;
		printf("eo: %1.14f\n", satdata->eo);
		float omega = (float)readfiledata(TLE_file, 2, 70, 35, 42);
		printf("omega: %1.14f\n", omega);
		float M = (float)readfiledata(TLE_file, 2, 70, 44, 51);
		printf("M: %1.14f\n", M);
		double no = readfiledata(TLE_file, 2, 70, 53, 69);
		printf("no: %1.14f\n", no);

		satdata->xmo = M * 0.01745329251;
		satdata->xnodeo = raan * 0.01745329251;
		satdata->omegao = omega * 0.01745329251;
		satdata->xincl = i * 0.01745329251;
		satdata->xno = no * 0.00436332312;
	}
}*/

int char2num(char a) {
	if (a == ' ')
		return 0;
	else
		return ((int)a - (int)'0');
}

void TLEread(SatData* satdata) {

	//Leer epoca (year,dayofyear)
	int year = ((int)ISSTLE1[18]-(int)'0') *10 + (int)ISSTLE1[19] - (int)'0' + 2000;
	double doy = ((int)ISSTLE1[20] - (int)'0') * 100 + ((int)ISSTLE1[21] - (int)'0')*10 + (int)ISSTLE1[22] - (int)'0';
	doy = doy + ((int)ISSTLE1[24] - (int)'0') * 0.1 + ((int)ISSTLE1[25] - (int)'0') * 0.01 + ((int)ISSTLE1[26] - (int)'0') * 0.001 + ((int)ISSTLE1[27] - (int)'0') * 0.0001 +
		((int)ISSTLE1[28] - (int)'0') * 0.00001 + ((int)ISSTLE1[29] - (int)'0') * 0.000001 + ((int)ISSTLE1[30] - (int)'0') * 0.0000001 + ((int)ISSTLE1[31] - (int)'0') * 0.00000001;
	//Obtener Modified JD Date
	satdata->getMJD_epoch(year, doy);
	//printf("JD: %1.14f\n", satdata->MJD_epoch);
	satdata->bstar = ((int)ISSTLE1[54] - (int)'0') * 10000 + ((int)ISSTLE1[55] - (int)'0') * 1000 + ((int)ISSTLE1[56] - (int)'0') * 100 + ((int)ISSTLE1[57] - (int)'0') * 10 +
		((int)ISSTLE1[58] - (int)'0');
	//printf("bstar: %1.6f\n", satdata->bstar);
	float ExBStar;
	if(ISSTLE1[59]=='-')
		ExBStar = -((int)ISSTLE1[60] - (int)'0');
	else
		ExBStar = ((int)ISSTLE1[60] - (int)'0');
	//printf("exbstar: %1.6f\n", ExBStar);
	satdata->bstar *= 1e-5 * pow(10, ExBStar);
	//printf("bstar: %1.14f\n", satdata->bstar);
	float i = char2num(ISSTLE2[8]) * 100 + char2num(ISSTLE2[9]) * 10 + ((int)ISSTLE2[10] - (int)'0') + ((int)ISSTLE2[12] - (int)'0') * 0.1 + ((int)ISSTLE2[13] - (int)'0') * 0.01 +
		((int)ISSTLE2[14] - (int)'0') * 0.001 + ((int)ISSTLE2[15] - (int)'0') * 0.0001;
	//printf("i: %1.14f\n", i);
	float raan = char2num(ISSTLE2[17]) * 100 + char2num(ISSTLE2[18]) * 10 + ((int)ISSTLE2[19] - (int)'0') + ((int)ISSTLE2[21] - (int)'0') * 0.1 + ((int)ISSTLE2[22] - (int)'0') * 0.01 +
		((int)ISSTLE2[23] - (int)'0') * 0.001 + ((int)ISSTLE2[24] - (int)'0') * 0.0001;
	//printf("raan: %1.14f\n", raan);
	satdata->eo = (((int)ISSTLE2[26] - (int)'0') * 0.1 + ((int)ISSTLE2[27] - (int)'0') * 0.01 + ((int)ISSTLE2[28] - (int)'0') * 0.001 + ((int)ISSTLE2[29] - (int)'0') * 0.0001 + 
		((int)ISSTLE2[30] - (int)'0') * 0.00001 + ((int)ISSTLE2[31] - (int)'0') * 0.000001 + ((int)ISSTLE2[32] - (int)'0') * 0.0000001);
	//printf("eo: %1.14f\n", satdata->eo);
	float omega = char2num(ISSTLE2[34]) * 100 + char2num(ISSTLE2[35]) * 10 + ((int)ISSTLE2[36] - (int)'0') + ((int)ISSTLE2[38] - (int)'0') * 0.1 + ((int)ISSTLE2[39] - (int)'0') * 0.01 + 
		((int)ISSTLE2[40] - (int)'0') * 0.001 + ((int)ISSTLE2[41] - (int)'0') * 0.0001 ;
	//printf("omega: %1.14f\n", omega);
	float M = char2num(ISSTLE2[43]) * 100 + char2num(ISSTLE2[44]) * 10 + ((int)ISSTLE2[45] - (int)'0') + ((int)ISSTLE2[47] - (int)'0') * 0.1 + ((int)ISSTLE2[48] - (int)'0') * 0.01 +
		((int)ISSTLE2[49] - (int)'0') * 0.001 + ((int)ISSTLE2[50] - (int)'0') * 0.0001 ;
	//printf("M: %1.14f\n", M);
	double no = char2num(ISSTLE2[52]) * 10 + ((int)ISSTLE2[53] - (int)'0') + ((int)ISSTLE2[55] - (int)'0') * 0.1 + ((int)ISSTLE2[56] - (int)'0') * 0.01 + ((int)ISSTLE2[57] - (int)'0') * 0.001 +
		((int)ISSTLE2[58] - (int)'0') * 0.0001 + ((int)ISSTLE2[59] - (int)'0') * 0.00001 + ((int)ISSTLE2[60] - (int)'0') * 0.000001 + ((int)ISSTLE2[61] - (int)'0') * 0.0000001 +
		((int)ISSTLE2[62] - (int)'0') * 1e-8 + ((int)ISSTLE2[63] - (int)'0') * 1e-9 + ((int)ISSTLE2[64] - (int)'0') * 1e-10 + ((int)ISSTLE2[65] - (int)'0') * 1e-11 + 
		((int)ISSTLE2[66] - (int)'0') * 1e-12 + ((int)ISSTLE2[67] - (int)'0') * 1e-13 + ((int)ISSTLE2[68] - (int)'0') * 1e-14;
	//printf("no: %1.14f\n", no);

	satdata->xmo = M * 0.01745329251;
	satdata->xnodeo = raan * 0.01745329251;
	satdata->omegao = omega * 0.01745329251;
	satdata->xincl = i * 0.01745329251;
	satdata->xno = no * 0.00436332312;
}

/*void readNutdata(const char* Filename, int** iar80, float** rar80) {
	FILE* file;
	char content[47]{};
	file = fopen(Filename, "r");
	if (file == NULL) {
		perror("Error opening nutation file");
	}
	else {
		//Leer datos
		for (int i = 0; i < 106; i++) {
			iar80[i][0] = (int)readfiledata(file, i + 1, 46, 1, 2);
			iar80[i][1] = (int)readfiledata(file, i + 1, 46, 4, 5);
			iar80[i][2] = (int)readfiledata(file, i + 1, 46, 7, 8);
			iar80[i][3] = (int)readfiledata(file, i + 1, 46, 10, 11);
			iar80[i][4] = (int)readfiledata(file, i + 1, 46, 13, 14);

			rar80[i][0] = (float)readfiledata(file, i + 1, 46, 16, 22) * 4.8481368e-10;
			rar80[i][1] = (float)readfiledata(file, i + 1, 46, 24, 29) * 4.8481368e-10;
			rar80[i][2] = (float)readfiledata(file, i + 1, 46, 31, 35) * 4.8481368e-10;
			rar80[i][3] = (float)readfiledata(file, i + 1, 46, 37, 40) * 4.8481368e-10;
		}
	}

}*/

/// <summary>
/// Remainder of argument and 2*pi value
/// </summary>
/// <param name="arg1"></param>
/// <returns></returns>
double fmod2p (double arg1) {
	double arg2 = TWOPI;
	double modu = arg1 - floor(arg1/arg2) * arg2;
	if (modu >= 0)
		modu = modu;
	else
	    modu += arg2; 
	return modu;
}

/// <summary>
/// tanfunction wuth angle always positive
/// </summary>
/// <param name="y"></param>
/// <param name="x"></param>
/// <returns></returns>
float actan (float y, float x) {
	float t = atan2(y,x);
	if (t < 0)
	    t += TWOPI;
	return t;
}

int IERS (double MJD_UTC, IERSDataTypeDef* IERS) {
	float preeop[9]{}, nexteop[9]{};
	float fixf;
	int i = 0;
	long int mjd;
	//bool notFind = true;
	if(MJD_UTC<60693){
		mjd = floor(MJD_UTC);
		for(i=0;i<1115;i++) { //i = find(mjd==eop(4,:),1,'first');
			if (mjd == floor(eopdata[i][0]))
				break;
		}
		// linear interpolation
		for (int n = 0; n < 9; n++) {
			preeop[n] = eopdata[i][n];
			nexteop[n] = eopdata[i+1][n];
		}
		fixf = (MJD_UTC - mjd);
		// Setting of IERS Earth rotation parameters
		// (UT1-UTC [s], TAI-UTC [s], x ["], y ["])
		IERS->x_pole  = preeop[1] + (nexteop[1] - preeop[1]) * fixf;
		IERS->y_pole  = preeop[2] + (nexteop[2] - preeop[2]) * fixf;
		IERS->UT1_UTC = preeop[3] + (nexteop[3] - preeop[3]) * fixf;
		IERS->LOD     = preeop[4] + (nexteop[4] - preeop[4]) * fixf;
		IERS->dpsi    = preeop[5] + (nexteop[5] - preeop[5]) * fixf;
		IERS->deps    = preeop[6] + (nexteop[6] - preeop[6]) * fixf;
		IERS->dx_pole = preeop[7] + (nexteop[7] - preeop[7]) * fixf;
		IERS->dy_pole = preeop[8] + (nexteop[8] - preeop[8]) * fixf;
		IERS->TAI_UTC = 37;

		IERS->x_pole = IERS->x_pole*Arcs;  // Pole coordinate [rad]
		IERS->y_pole  = IERS->y_pole*Arcs;  // Pole coordinate [rad]
		IERS->dpsi    = IERS->dpsi*Arcs;
		IERS->deps    = IERS->deps*Arcs;
		IERS->dx_pole = IERS->dx_pole*Arcs; // Pole coordinate [rad]
		IERS->dy_pole = IERS->dy_pole*Arcs; // Pole coordinate [rad]
		return 0;
	}
	else
		return -1;
}

float timediff (float UT1_UTC, float TAI_UTC) {
	float TT_TAI  = 32.184;          		// TT-TAI time difference [s]
	//TT_GPS  =  TT_TAI - GPS_TAI;  	// TT-GPS time difference [s]
	//TAI_GPS = -GPS_TAI;         	// TAI-GPS time difference [s]
	return TT_TAI + TAI_UTC;   	//  TT-UTC time difference [s]
}

void EOP(double MJD_UTC, EOPDataTypeDef* EOPData) {
	IERSDataTypeDef IERSData{};
	IERS(MJD_UTC, &IERSData);
	float TT_UTC;
	TT_UTC = timediff(IERSData.UT1_UTC, IERSData.TAI_UTC);
	float MJD_UT1 = MJD_UTC + IERSData.UT1_UTC / 86400;
	float MJD_TT = MJD_UTC + TT_UTC / 86400;
	EOPData->T = (MJD_TT - MJD_J2000) / 36525;
	EOPData->JD_UT1 = MJD_UT1 + 2400000.5;
	EOPData->LOD = IERSData.LOD;
	EOPData->x_pole = IERSData.x_pole;
	EOPData->y_pole = IERSData.y_pole;
	EOPData->dpsi = IERSData.dpsi;
	EOPData->deps = IERSData.deps;
}

void precess (float ttt, float resp[], Matrix3TypeDef* prec) {
	float convrt, ttt2, ttt3, psia, wa, ea, xa, zeta, theta, z, coszeta, sinzeta, costheta, sintheta, cosz, sinz;
	// " to rad
    convrt = 4.84813681e-6;
    ttt2 = ttt * ttt;
    ttt3 = ttt2 * ttt;
    // ------------------- fk4 b1950 precession angles --------------------
    psia  = 5038.7784*ttt - 1.07259*ttt2 - 0.001147*ttt3; 
    wa    = 84381.448 + 0.05127*ttt2 - 0.007726*ttt3;
    ea    = 84381.448 - 46.8150*ttt - 0.00059*ttt2 + 0.001813*ttt3;
	xa    = 10.5526*ttt - 2.38064*ttt2 - 0.001125*ttt3;
    zeta  = 2306.2181*ttt + 0.30188*ttt2 + 0.017998*ttt3; 
    theta = 2004.3109*ttt - 0.42665*ttt2 - 0.041833*ttt3;
    z     = 2306.2181*ttt + 1.09468*ttt2 + 0.018203*ttt3;
    // convert units to rad
    psia  *= convrt; // rad
    wa    *= convrt;
    ea    *= convrt;
    xa    *= convrt;
    zeta  *= convrt;
    theta *= convrt;
    z     *= convrt;
    
    coszeta  = cos(zeta);
    sinzeta  = sin(zeta);
    costheta = cos(theta);
    sintheta = sin(theta);
    cosz     = cos(z);
    sinz     = sin(z);

    // ----------------- form matrix  mod to j2000 -----------------
	prec->data[0][0] = coszeta * costheta * cosz - sinzeta * sinz;
	prec->data[0][1] = coszeta * costheta * sinz + sinzeta * cosz;
	prec->data[0][2] = coszeta * sintheta;
	prec->data[1][0] = -sinzeta * costheta * cosz - coszeta * sinz;
	prec->data[1][1] = -sinzeta * costheta * sinz + coszeta * cosz;
	prec->data[1][2] = -sinzeta * sintheta;
	prec->data[2][0] = -sintheta * cosz;
	prec->data[2][1] = -sintheta * sinz;
	prec->data[2][2] = costheta;
    
    resp[0] = psia;
    resp[1] = wa;
    resp[2] = ea;
    resp[3] = xa;
}

void fundarg (float ttt, float  ttt2, float v[]) {
	float l, l1, f, d, omega;
	// ---- iau 1980 theory
	l = ((((0.064) * ttt + 31.310) * ttt + 1717915922.6330) * ttt) / 3600.0 + 134.96298139;
	l1 = ((((-0.012) * ttt - 0.577) * ttt + 129596581.2240) * ttt) / 3600.0 + 357.52772333;
	f = ((((0.011) * ttt - 13.257) * ttt + 1739527263.1370) * ttt) / 3600.0 + 93.27191028;
	d = ((((0.019) * ttt - 6.891) * ttt + 1602961601.3280) * ttt) / 3600.0 + 297.85036306;
	omega = ((((0.008) * ttt + 7.455) * ttt - 6962890.5390) * ttt) / 3600.0 + 125.04452222;
          
    
	// ---- convert units to rad
    l     = fmod(l, 360) * Rad; // rad
    l1    = fmod(l1, 360) * Rad;
    f     = fmod(f, 360) * Rad;
    d     = fmod(d, 360) * Rad;
    omega = fmod(omega, 360) * Rad;
    
    v[0] = l; v[1] = l1; v[2] = f; v[3] = d; v[4] = omega;
}

void nutation (float ttt, float ddpsi, float ddeps, float resp[], Matrix3TypeDef* nut) {

	float ttt2, ttt3, meaneps, fundarg_resp[5], deltapsi,
		  deltaeps, tempval, trueeps, cospsi, sinpsi, coseps, sineps, costrueeps, sintrueeps;
	int i;

	//iau80in(iar80, rar80); // coeff in deg
    // ---- determine coefficients for iau 1980 nutation theory ----
    ttt2 = ttt*ttt;
    ttt3 = ttt2*ttt;

    meaneps = -46.8150 *ttt - 0.00059 *ttt2 + 0.001813 *ttt3 + 84381.448;
    meaneps = fmod(meaneps/3600, 360);
    meaneps = meaneps * Rad;
    
    fundarg(ttt, ttt2, fundarg_resp); //[ l, l1, f, d, omega, lonmer, lonven, lonear, lonmar, lonjup, lonsat, lonurn, lonnep, precrate]
    deltapsi = 0.0;
    deltaeps = 0.0;
    for (i = 105; i >= 0; i--){
    	tempval  = iar80[i][0] * fundarg_resp[0] + iar80[i][1] * fundarg_resp[1] + iar80[i][2] * fundarg_resp[2] + 
				   iar80[i][3] * fundarg_resp[3] + iar80[i][4] * fundarg_resp[4];
        deltapsi += (rar80[i][0] + rar80[i][1] * ttt) * sin(tempval);
        deltaeps += (rar80[i][2] + rar80[i][3] * ttt) * cos(tempval);	
	}

    // --------------- find nutation parameters --------------------
    deltapsi = fmod(deltapsi + ddpsi, (float)(TWOPI));
    deltaeps = fmod(deltaeps + ddeps, (float)(TWOPI));
    trueeps  = meaneps + deltaeps;
    
    cospsi     = cos(deltapsi);
    sinpsi     = sin(deltapsi);
    coseps     = cos(meaneps);
    sineps     = sin(meaneps);
    costrueeps = cos(trueeps);
    sintrueeps = sin(trueeps);
    
    nut->data[0][0] = cospsi;
    nut->data[0][1] = costrueeps * sinpsi;
    nut->data[0][2] = sintrueeps * sinpsi;
    nut->data[1][0] = -coseps * sinpsi;
    nut->data[1][1] = costrueeps * coseps * cospsi + sintrueeps * sineps;
    nut->data[1][2] = sintrueeps * coseps * cospsi - sineps * costrueeps;
    nut->data[2][0] = -sineps * sinpsi;
    nut->data[2][1] = costrueeps * sineps * cospsi - sintrueeps * coseps;
    nut->data[2][2] = sintrueeps * sineps * cospsi + costrueeps * coseps;
    
    resp[0] = deltapsi; resp[1] = trueeps; resp[2] = meaneps; resp[3] = fundarg_resp[4];
}

void teme2eci(float* rteme, float* vteme, float* reci, float* veci, float ttt, float ddpsi, float ddeps) {
	float precess_resp[4], nut_resp[4], eqeg;
	Matrix3TypeDef prec;
	Matrix3TypeDef nut;
	for(int i=0; i<3; i++){
		reci[i]=0;
		veci[i]=0;
	}
	precess(ttt, precess_resp, &prec);
	nutation(ttt, ddpsi, ddeps, nut_resp, &nut); //[deltapsi, trueeps, meaneps, omega, nut]
	eqeg = nut_resp[0] * cos(nut_resp[2]);

	eqeg = fmod((float)eqeg, (float)(TWOPI));

	Matrix3TypeDef eqe;
	eqe.data[0][0] = cos(eqeg);
	eqe.data[0][1] = sin(eqeg);
	eqe.data[0][2] = 0;
	eqe.data[1][0] = -sin(eqeg);
	eqe.data[1][1] = cos(eqeg);
	eqe.data[1][2] = 0;
	eqe.data[2][0] = 0;
	eqe.data[2][1] = 0;
	eqe.data[2][2] = 1;

	Matrix3TypeDef eqe_T;
	TransposeMat3(&eqe,&eqe_T);

	Matrix3TypeDef tm;
	Mat3MatMult(&prec, &nut, &tm);
	//if (!tm.Mult(&prec, &nut))
		//cout << "Multiplicacion prec*nut incorrecta";
	Matrix3TypeDef tm2;
	Mat3MatMult(&tm, &eqe_T, &tm2);
	//if (!tm2.Mult(&tm, &eqe_T))
		//cout << "Multiplicacion tm*eqe_T incorrecta";
	MatVecMult(&tm2,rteme,reci);
	//if (!reci->Mult(&tm2, rteme))
		//cout << "Multiplicacion tm*rteme incorrecta";
	MatVecMult(&tm2,vteme,veci);
	//if (!veci->Mult(&tm2, vteme))
		//cout << "Multiplicacion tm*rteme incorrecta";

}
 
double gstime (double jdut1){
	double tut1, temp;
	// ------------------------  implementation   ------------------
    tut1= ( jdut1 - 2451545 ) / 36525;
    temp = -6.2e-6 * tut1 * tut1 * tut1 + 0.093104 * tut1 * tut1 + 3164400184.81 * tut1 + 67310.54841;
    // 360/86400 = 1/240, to deg, to rad
    temp = fmod(temp*Rad/240, TWOPI );
	//temp = remainder(temp * Rad / 240, TWOPI);
    // ------------------------ check quadrants --------------------
    if ( temp < 0 )
        temp += TWOPI;
        
    return temp;
}

void polarm (float xp, float yp, float ttt, Matrix3TypeDef* pm){
	float cosxp, sinxp, cosyp, sinyp;
	
	cosxp = cos(xp);
    sinxp = sin(xp);
    cosyp = cos(yp);
    sinyp = sin(yp);
	
	pm->data[0][0] = cosxp;
	pm->data[0][2] = -sinxp;
	pm->data[0][1] = 0;
	pm->data[1][0] = sinxp * sinyp;
	pm->data[1][1] = cosyp;
	pm->data[1][2] = cosxp * sinyp;
	pm->data[2][0] = sinxp * cosyp;
	pm->data[2][1] = -sinyp;
	pm->data[2][2] = cosxp * cosyp;
    
    /*pm[0][0] = cosxp;
    pm[0][1] =  0;
    pm[0][2] =  -sinxp;
    pm[1][0] =  sinxp * sinyp;
    pm[1][1] =  cosyp;
    pm[1][2] =  cosxp * sinyp;
    pm[2][0] =  sinxp * cosyp;
    pm[2][1] =  -sinyp;
    pm[2][2] =  cosxp * cosyp;*/
}

void teme2ecef (float* rteme, float* vteme, float* recef, float* vecef, double ttt, double jdut1, double lod, double xp, double yp, float eqeterms){
	double gmstg;
	// ------------------------ find gmst --------------------------
	double gmst = gstime(jdut1);
	
	// find omega from nutation theory
	double omega =  125.04452222 + (-6962890.5390 *ttt + 7.455 * ttt * ttt + 0.008 * ttt * ttt * ttt) / 3600;
	omega = fmod(omega, 360) * 0.01745329251994;
	
	// ------------------------ find mean ast ----------------------
	// teme does not include the geometric terms here
	// after 1997, kinematic terms apply
	
	gmstg = fmod(gmst, TWOPI);
	
	Matrix3TypeDef st;
	st.data[0][0] = cos(gmstg);
	st.data[0][1] = -sin(gmstg);
	st.data[0][2] = 0;
	st.data[1][0] = sin(gmstg);
	st.data[1][1] = cos(gmstg);
	st.data[1][2] = 0;
	st.data[2][0] = 0;
	st.data[2][1] = 0;
	st.data[2][2] = 1;
	
	Matrix3TypeDef pm;
	polarm( xp, yp, ttt, &pm);

	Matrix3TypeDef st_T;
	TransposeMat3(&st,&st_T);
	Matrix3TypeDef pm_T;
	TransposeMat3(&pm, &pm_T);

	float rpef[3]{};
	MatVecMult(&st_T, rteme, rpef);
	MatVecMult(&pm_T, rpef, recef);

	float omegaearth[3]{};
	omegaearth[2] = 7.29211514670698e-5 * (1 - lod / 86400);

	float temp[3]{};
	MatVecMult(&st_T, vteme, temp);

	float cruz[3]{};
	cross(omegaearth, rpef,cruz);
	
	float vpef[3]{};
	restVec(temp, cruz, vpef);

	MatVecMult(&pm_T, vpef,vecef);
}

double myatan(double y, double x) {
	if (x > 0)
		return atan(y / x);
	else{
		if (x < 0 && y > 0)
			return M_PI + atan(y / x);
		else if (x < 0 && y < 0)
			return -M_PI + atan(y / x);
		else
			return 0;
	}
}

void eceftoLLA(float* R_ecef, float* LLA) {
	//to meters
	float R_ecef1[3]{};
	R_ecef1[0]=1000*R_ecef[0];
	R_ecef1[1]=1000*R_ecef[1];
	R_ecef1[2]=1000*R_ecef[2];
	/*float a = 6378137;
	double b = 6356752.31424518;
	double e = 0.08181919084;
	double ep = 0.08209443794;*/
	double p = sqrt(R_ecef1[0] * R_ecef1[0] + R_ecef1[1] * R_ecef1[1]);
	double theta = atan(R_ecef1[2] * LLA_a / (p * LLA_b));
	LLA[1] = myatan(R_ecef1[1], R_ecef1[0]);
	LLA[0] = atan((R_ecef1[2] + LLA_ep *LLA_ep * LLA_b * sin(theta) *sin(theta) * sin(theta)) / (p - LLA_e * LLA_e * LLA_a * cos(theta) * cos(theta) * cos(theta)));
	double N = LLA_a / (sqrt(1 - LLA_e * LLA_e * sin(LLA[0]) * sin(LLA[0])));
	LLA[2] = (p / cos(LLA[0]) - N) / 1000;
	LLA[0] = 57.2958 * LLA[0];
	LLA[1] = 57.2958 * LLA[1];
}

void sgp4 (float* rteme, float* vteme, SatData* satdata, double tsince) { // tsince, satdata
	for(int i=0; i<3;i++){
		rteme[i]=0;
		vteme[i]=0;
	}
	float temp2, a1, cosio, theta2, x3thm1, betao2, betao, del1, ao, delo,
		xnodp, aodp, s4, qoms24, perige, pinvsq, tsi, eta, etasq, eeta, psisq,
		coef, coef1, c1, sinio, a3ovk2, x1mth2, c4, c5, theta4, temp1,
		temp3, omgdot, xhdot1, xnodot, c1sq, d2, temp, d3, d4,
		t3cof, t4cof, t5cof, xmdf, omgadf, omega, xmp, tsq, xnode,
		tempa, tempe, templ, delm, tcube, tfour, a, e,
		beta, xn, axn, aynl, xlt, ayn, capu, sinepw, cosepw, temp4,
		temp5, temp6, epw, temp7, esine, pl, r, rdot, rfdot, betal,
		cosu, sinu, u, sin2u, cos2u, rk, uk, xnodek, xinck, rdotk, rfdotk, MV[3]{},
		NV[3]{}, UV[3]{}, VV[3]{};
	float pos[3]{}, vel[3]{};
	float XJ3 = -2.53881e-6;
	float e6a = 1e-6;
	float xkmper = 6378.135;
	float CK2 = 0.0005413079;
	float CK4 = 6.2098875e-7;

	// Constants
	//xke = 0.07436691613;
	//qoms2t = 1.88027915e-9;
	temp2 = xke / satdata->xno;
	a1 = pow(temp2,(float)0.6666666666);
	cosio = cos(satdata->xincl);
	theta2 = cosio*cosio;
	x3thm1 = 3 * theta2 - 1;
	betao2 = 1 - satdata->eo * satdata->eo;
	betao = sqrt(betao2);
	del1 = 1.5 * CK2 * x3thm1 / (a1*a1 * betao * betao2);
	ao = a1 * ( 1 - del1*(0.333333333 + del1 * (1 + 1.617283950617284 * del1)));
	delo = 1.5 * CK2 * x3thm1 / (ao*ao * betao * betao2);
	xnodp = satdata->xno / (1 + delo);
	aodp = ao/(1 - delo);
	// Initialization
	// For perigee less than 220 kilometers, the isimp flag is set and
	// the equations are truncated to linear variation in sqrt a and
	// quadratic variation in mean anomaly.  Also, the c3 term, the
	// delta omega term, and the delta m term are dropped.
	int isimp = 0, i;
	if ((aodp * (1 - satdata->eo) / 1) < (220 / xkmper + 1))
	    isimp = 1;

	// For perigee below 156 km, the values of s and qoms2t are altered.
	s4 = 1.01222928019;
	qoms24 = qoms2t;
	perige = (aodp * (1 - satdata->eo) - 1) * xkmper;
	if (perige < 156) {
	    s4 = perige - 78;
	    if (perige <= 98)
	    	s4 = 20;
	    qoms24 = pow(((120 - s4) * 1 / xkmper), 4);
	    s4 = s4 / xkmper + 1;
	}
	pinvsq = 1 / (aodp*aodp * betao2*betao2);
	tsi = 1 / (aodp - s4);
	eta = aodp * satdata->eo * tsi;
	etasq = eta*eta;
	eeta = satdata->eo * eta;
	psisq = fabs( 1 - etasq);
	coef = qoms24 * tsi*tsi*tsi*tsi;
	coef1 = coef / pow(psisq, (float)3.5);
	c1 = satdata->bstar * coef1 * xnodp * (aodp * (1 + 1.5 * etasq + eeta * (4 + etasq)) + 0.75 * CK2 * tsi / psisq * x3thm1 * (8 + 3 * etasq * (8 + etasq)));
	sinio = sin(satdata->xincl);
	a3ovk2 = -XJ3 / CK2 * 1;
	x1mth2 = 1 - theta2;
	c4 = 2 * xnodp * coef1 * aodp * betao2 * (eta * (2 + 0.5 * etasq) + satdata->eo * (0.5 + 2 * etasq) - 2 * CK2 * tsi / (aodp * psisq) * ( -3 * x3thm1 *
		(1 - 2 * eeta + etasq * (1.5 - 0.5*eeta)) + 0.75 * x1mth2 * (2 * etasq - eeta * (1 + etasq)) * cos(2 * satdata->omegao)));
	c5 = 2 * coef1 * aodp * betao2 * (1 + 2.75 * (etasq + eeta) + eeta * etasq);
	theta4 = theta2*theta2;
	temp1 = 3 * CK2 * pinvsq * xnodp;
	temp2 = temp1 * CK2 * pinvsq;
	temp3 = 1.25 * CK4 * pinvsq * pinvsq * xnodp;
	omgdot = -0.5 * temp1 * (1 - 5 * theta2) + 0.0625 * temp2 * (7 - 114 * theta2 + 395 * theta4) + temp3 * (3 - 36 * theta2 + 49 * theta4);
	xhdot1 = -temp1 * cosio;
	xnodot = xhdot1 + (0.5 * temp2 * (4 - 19 * theta2) + 2 * temp3 * (3 - 7 * theta2)) * cosio;
	if (isimp == 0)	{
	    c1sq = c1*c1;
	    d2 = 4 * aodp * tsi * c1sq;
	    temp = d2 * tsi * c1 / 3;
	    d3 = (17 * aodp + s4)*temp;
	    d4 = 0.5 * temp * aodp * tsi * (221 * aodp + 31 * s4) * c1;
	    t3cof = d2 + 2 * c1sq;
	    t4cof = 0.25 * (3 * d3 + c1 * (12 * d2 + 10 * c1sq));
	    t5cof = 0.2 * (3 * d4 + 12 * c1 * d3 + 6 * d2 * d2 + 15 * c1sq * (2 * d2 + c1sq));
	}

	// Update for secular gravity and atmospheric drag.
	xmdf = satdata->xmo + (xnodp + 0.5 * temp1 * betao * x3thm1 + 0.0625 * temp2 * betao * (13 - 78 * theta2 + 137 * theta4)) * tsince;
	omgadf = satdata->omegao + omgdot * tsince;
	omega = omgadf;
	xmp = xmdf;
	tsq = tsince*tsince;
	xnode = satdata->xnodeo + xnodot * tsince + 3.5 * betao2 * xhdot1 * c1 * tsq;
	tempa = 1 - c1 * tsince;
	tempe = satdata->bstar * c4 * tsince;
	templ = 1.5 * c1 * tsq;
	if (isimp == 0) {
	    delm = -0.666666 * coef * satdata->bstar * 1 / eeta * (pow((1 + eta * cos(xmdf)),3) - pow(1 + eta * cos(satdata->xmo), 3));
	    temp = satdata->bstar * coef * tsi * a3ovk2 * xnodp * 1 * sinio / satdata->eo * cos(satdata->omegao) * tsince + delm;
	    xmp = xmdf + temp;
	    omega = omgadf - temp;
	    tcube = tsq * tsince;
	    tfour = tsince * tcube;
	    tempa = tempa - d2 * tsq - d3 * tcube - d4 * tfour;
	    tempe = tempe + (satdata->bstar) * c5 * (sin(xmp) - sin(satdata->xmo));
	    templ = templ + t3cof * tcube + tfour * (t4cof + tsince * t5cof);
	}
	a = aodp * tempa * tempa;
	e = satdata->eo - tempe;
	beta = sqrt(1 - e*e);
	xn = xke / pow(a, (float)1.5);

	// Long period periodics
	axn = e * cos(omega);
	temp = 1 / (a * beta*beta);
	aynl = temp * 0.25 * a3ovk2 * sinio;
	xlt = xmp + omega + xnode + xnodp * templ + temp * 0.125 * a3ovk2 * sinio * (3 + 5 * cosio) / (1 + cosio) * axn;
	ayn = e * sin(omega) + aynl;

	// Solve Kepler's Equation
	capu = fmod2p(xlt - xnode);
	temp2 = capu;
	i = 1;

	bool cont = true;
	while(cont) {
		sinepw = sin(temp2);
	    cosepw = cos(temp2);
	    temp3 = axn * sinepw;
	    temp4 = ayn * cosepw;
	    temp5 = axn * cosepw;
	    temp6 = ayn * sinepw;
	    epw = (capu - temp4 + temp3 - temp2) / (1 - temp5 - temp6) + temp2;
	    temp7 = temp2;
	    temp2 = epw;
	    i++;
		if ((i > 10) || (abs(epw - temp7) <= e6a))
			cont = false;
	}

	// Short period preliminary quantities
	esine = temp3 - temp4;
	temp = 1 - axn * axn - ayn * ayn;
	pl = a * temp;
	r = a * (1 - temp5 - temp6);
	temp1 = 1 / r;
	rdot = xke * sqrt(a) * esine * temp1;
	rfdot = xke * sqrt(pl) * temp1;
	temp2 = a * temp1;
	betal = sqrt(temp);
	temp3 = 1 / (1 + betal);
	cosu = temp2 * (cosepw - axn + ayn * esine * temp3);
	sinu = temp2 * (sinepw - ayn - axn * esine * temp3);
	u = actan(sinu, cosu);
	sin2u = 2 * sinu * cosu;
	cos2u = 2 * cosu*cosu - 1;
	temp = 1 / pl;
	temp1 = CK2 * temp;
	temp2 = temp1 * temp;

	// Update for short periodics
	rk = r * (1 - 1.5 * temp2 * betal * x3thm1) + 0.5 * temp1 * x1mth2 * cos2u;
	uk = u - 0.25 * temp2 * (7 * theta2 - 1) * sin2u;
	xnodek = xnode + 1.5 * temp2 * cosio * sin2u;
	xinck = satdata->xincl + 1.5 * temp2 * cosio * sinio * cos2u;
	rdotk = rdot - xn * temp1 * x1mth2 * sin2u;
	rfdotk = rfdot + xn * temp1 * (x1mth2 * cos2u + 1.5 * x3thm1);

	// Orientation vectors
	MV[0] = -sin(xnodek) * cos(xinck);
	MV[1] = cos(xnodek) * cos(xinck);
	MV[2] = sin(xinck);

	NV[0] = cos(xnodek);
	NV[1] = sin(xnodek);
	NV[2] = 0;

	for (i = 0; i < 3; i++) {
		UV[i] = MV[i] * sin(uk) + NV[i] * cos(uk);
		VV[i] = MV[i] * cos(uk) - NV[i] * sin(uk);
	}

	// position + velocity
	for (i = 0; i < 3; i++) {
		pos[i] = rk * UV[i];
		vel[i] = rdotk * UV[i] + rfdotk * VV[i];
	}

	for (int i = 0; i < 3; i++) {
		rteme[i] = -pos[i] * xkmper;
		vteme[i] = -vel[i] * xkmper / 60;
	}
}
#endif
