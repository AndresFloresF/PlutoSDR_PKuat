#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres

INC = 
CFLAGS = -Wall
RESINC = 
LIBDIR = 
# LIB = /usr/lib/x86_64-linux-gnu/libudev.so
#LIB = /lib/x86_64-linux-gnu/libudev.so
#LIBRERIA_Pluto_SDR
LIB = HOME/rafael/pluto-0.30.sysroot
LDFLAGS = 

#	BEGIN ARM stuff

ARM_CC = arm-linux-gnueabihf-gcc
ARM_CXX = arm-linux-gnueabihf-g++
ARM_AR = arm-linux-gnueabihf-ar
ARM_LD = arm-linux-gnueabihf-g++

INC_ARMLEASE = $(INC)
CFLAGS_ARMLEASE = $(CFLAGS) -O2 -ludev
# CFLAGS_ARMLEASE = $(CFLAGS) -O2 --enable-udev=false
RESINC_ARMLEASE = $(RESINC)
RCFLAGS_ARMLEASE = $(RCFLAGS)
LIBDIR_ARMLEASE = $(LIBDIR)
LIB_ARMLEASE =  /lib/arm-linux-gnueabihf/libudev.so
LDFLAGS_ARMLEASE = $(LDFLAGS) -s
OBJDIR_ARMLEASE = obj/ARMlease
DEP_ARMLEASE = 
OUT_ARMLEASE = bin/ARMlease/main

OBJ_ARMLEASE = $(OBJDIR_ARMLEASE)/hid.o $(OBJDIR_ARMLEASE)/InicializarMCP.o $

#	END ARM Stuff

INC_DEBUG = $(INC)
CFLAGS_DEBUG = $(CFLAGS) -g
RESINC_DEBUG = $(RESINC)
RCFLAGS_DEBUG = $(RCFLAGS)
LIBDIR_DEBUG = $(LIBDIR)
LIB_DEBUG = $(LIB)
LDFLAGS_DEBUG = $(LDFLAGS)
OBJDIR_DEBUG = obj/Debug
DEP_DEBUG = 
OUT_DEBUG = bin/Debug/main

INC_RELEASE = $(INC)
CFLAGS_RELEASE = $(CFLAGS) -O2
RESINC_RELEASE = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR)
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE = $(LDFLAGS) -s
OBJDIR_RELEASE = obj/Release
DEP_RELEASE = 
OUT_RELEASE = bin/Release/main

OBJ_DEBUG = $(OBJDIR_DEBUG)/hid.o $(OBJDIR_DEBUG)/InicializarMCP.o

OBJ_RELEASE = $(OBJDIR_RELEASE)/hid.o $(OBJDIR_DEBUG)/InicializarMCP.o 

all: debug release

clean: clean_debug clean_release

before_debug: 
	test -d bin/Debug || mkdir -p bin/Debug
	test -d $(OBJDIR_DEBUG) || mkdir -p $(OBJDIR_DEBUG)

after_debug: 

debug: before_debug out_debug after_debug

out_debug: before_debug $(OBJ_DEBUG) $(DEP_DEBUG)
	$(LD) $(LIBDIR_DEBUG) -o $(OUT_DEBUG) $(OBJ_DEBUG) $(LDFLAGS_DEBUG) $(LIB_DEBUG)

$(OBJDIR_DEBUG)/hid.o: hid.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c hid.c -o $(OBJDIR_DEBUG)/hid.o

$(OBJDIR_DEBUG)/InicializarMCP.o: InicializarMCP.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c InicializarMCP.cpp -o $(OBJDIR_DEBUG)/InicializarMCP.o

clean_debug: 
	rm -f $(OBJ_DEBUG) $(OUT_DEBUG)
	rm -rf bin/Debug
	rm -rf $(OBJDIR_DEBUG)

before_release: 
	test -d bin/Release || mkdir -p bin/Release
	test -d $(OBJDIR_RELEASE) || mkdir -p $(OBJDIR_RELEASE)

after_release: 

release: before_release out_release after_release

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(LD) $(LIBDIR_RELEASE) -o $(OUT_RELEASE) $(OBJ_RELEASE) $(LDFLAGS_RELEASE) $(LIB_RELEASE)

$(OBJDIR_RELEASE)/hid.o: hid.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c hid.c -o $(OBJDIR_RELEASE)/hid.o

$(OBJDIR_RELEASE)/InicializarMCP.o: InicializarMCP.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c InicializarMCP.cpp -o $(OBJDIR_RELEASE)/InicializarMCP.o

clean_release: 
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf bin/Release
	rm -rf $(OBJDIR_RELEASE)

#	Other ARMlease

before_armlease: 
	test -d bin/ARMlease || mkdir -p bin/ARMlease
	test -d $(OBJDIR_ARMLEASE) || mkdir -p $(OBJDIR_ARMLEASE)

armlease: before_armlease out_armlease

out_armlease: before_armlease $(OBJ_ARMLEASE) $(DEP_ARMLEASE)
	$(ARM_LD)   $(LIBDIR_ARMLEASE) -o $(OUT_ARMLEASE) $(OBJ_ARMLEASE)  $(LDFLAGS_ARMLEASE) $(LIB_ARMLEASE)

$(OBJDIR_ARMLEASE)/hid.o: hid.c
	$(ARM_CC) $(CFLAGS_ARMLEASE) $(INC_ARMLEASE) -c hid.c -o $(OBJDIR_ARMLEASE)/hid.o

$(OBJDIR_ARMLEASE)/InicializarMCP.o: InicializarMCP.cpp
	$(ARM_CXX) $(CFLAGS_ARMLEASE) $(INC_ARMLEASE) -c InicializarMCP.cpp -o $(OBJDIR_ARMLEASE)/InicializarMCP.o


clean_armlease: 
	rm -f $(OBJ_ARMLEASE) $(OUT_ARMLEASE)
	rm -rf bin/ARMlease
	rm -rf $(OBJDIR_ARMLEASE)

.PHONY: before_debug after_debug clean_debug before_release after_release clean_release armlease before_armlease clean_armlease
